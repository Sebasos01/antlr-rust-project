File: /home/socub/U/tesis/rust_repos/actix-web/actix-router/src/quoter.rs
crate
  item
    visItem
      visibility
        pub
      struct_
        structStruct
          struct
          identifier
            Quoter
          {
          structFields
            structField
              identifier
                protected_table
              :
              type_
                typeNoBounds
                  traitObjectTypeOneBound
                    traitBound
                      typePath
                        typePathSegment
                          pathIdentSegment
                            identifier
                              AsciiBitmap
            ,
          }
  item
    visItem
      implementation
        inherentImpl
          impl
          type_
            typeNoBounds
              traitObjectTypeOneBound
                traitBound
                  typePath
                    typePathSegment
                      pathIdentSegment
                        identifier
                          Quoter
          {
          associatedItem
            visibility
              pub
            function_
              functionQualifiers
              fn
              identifier
                new
              (
              functionParameters
                functionParam
                  functionParamPattern
                    pattern
                      patternNoTopAlt
                        patternWithoutRange
                          wildcardPattern
                            _
                    :
                    type_
                      typeNoBounds
                        referenceType
                          &
                          typeNoBounds
                            sliceType
                              [
                              type_
                                typeNoBounds
                                  traitObjectTypeOneBound
                                    traitBound
                                      typePath
                                        typePathSegment
                                          pathIdentSegment
                                            identifier
                                              u8
                              ]
                ,
                functionParam
                  functionParamPattern
                    pattern
                      patternNoTopAlt
                        patternWithoutRange
                          identifierPattern
                            identifier
                              protected
                    :
                    type_
                      typeNoBounds
                        referenceType
                          &
                          typeNoBounds
                            sliceType
                              [
                              type_
                                typeNoBounds
                                  traitObjectTypeOneBound
                                    traitBound
                                      typePath
                                        typePathSegment
                                          pathIdentSegment
                                            identifier
                                              u8
                              ]
              )
              functionReturnType
                ->
                type_
                  typeNoBounds
                    traitObjectTypeOneBound
                      traitBound
                        typePath
                          typePathSegment
                            pathIdentSegment
                              identifier
                                Quoter
              blockExpression
                {
                statements
                  statement
                    letStatement
                      let
                      patternNoTopAlt
                        patternWithoutRange
                          identifierPattern
                            mut
                            identifier
                              protected_table
                      =
                      expression
                        expression
                          pathExpression
                            pathInExpression
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    AsciiBitmap
                              ::
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    default
                        (
                        )
                      ;
                  statement
                    expressionStatement
                      expressionWithBlock
                        loopExpression
                          iteratorLoopExpression
                            for
                            pattern
                              patternNoTopAlt
                                patternWithoutRange
                                  referencePattern
                                    &
                                    patternWithoutRange
                                      identifierPattern
                                        identifier
                                          ch
                            in
                            expression
                              pathExpression
                                pathInExpression
                                  pathExprSegment
                                    pathIdentSegment
                                      identifier
                                        protected
                            blockExpression
                              {
                              statements
                                statement
                                  expressionStatement
                                    expression
                                      expression
                                        pathExpression
                                          pathInExpression
                                            pathExprSegment
                                              pathIdentSegment
                                                identifier
                                                  protected_table
                                      .
                                      pathExprSegment
                                        pathIdentSegment
                                          identifier
                                            set_bit
                                      (
                                      callParams
                                        expression
                                          pathExpression
                                            pathInExpression
                                              pathExprSegment
                                                pathIdentSegment
                                                  identifier
                                                    ch
                                      )
                                    ;
                              }
                  expression
                    structExpression
                      structExprStruct
                        pathInExpression
                          pathExprSegment
                            pathIdentSegment
                              identifier
                                Quoter
                        {
                        structExprFields
                          structExprField
                            identifier
                              protected_table
                        }
                }
          associatedItem
            outerAttribute
              #
              [
              attr
                simplePath
                  simplePathSegment
                    identifier
                      inline
                attrInput
                  delimTokenTree
                    (
                    tokenTree
                      tokenTreeToken
                        macroIdentifierLikeToken
                          identifier
                            always
                    )
              ]
            function_
              functionQualifiers
              fn
              identifier
                decode_next
              genericParams
                <
                genericParam
                  lifetimeParam
                    'a
                >
              (
              functionParameters
                selfParam
                  shorthandSelf
                    &
                    self
                ,
                functionParam
                  functionParamPattern
                    pattern
                      patternNoTopAlt
                        patternWithoutRange
                          identifierPattern
                            identifier
                              val
                    :
                    type_
                      typeNoBounds
                        referenceType
                          &
                          mut
                          typeNoBounds
                            referenceType
                              &
                              lifetime
                                'a
                              typeNoBounds
                                sliceType
                                  [
                                  type_
                                    typeNoBounds
                                      traitObjectTypeOneBound
                                        traitBound
                                          typePath
                                            typePathSegment
                                              pathIdentSegment
                                                identifier
                                                  u8
                                  ]
              )
              functionReturnType
                ->
                type_
                  typeNoBounds
                    traitObjectTypeOneBound
                      traitBound
                        typePath
                          typePathSegment
                            pathIdentSegment
                              identifier
                                Option
                            genericArgs
                              <
                              genericArgsTypes
                                type_
                                  typeNoBounds
                                    tupleType
                                      (
                                      type_
                                        typeNoBounds
                                          referenceType
                                            &
                                            lifetime
                                              'a
                                            typeNoBounds
                                              sliceType
                                                [
                                                type_
                                                  typeNoBounds
                                                    traitObjectTypeOneBound
                                                      traitBound
                                                        typePath
                                                          typePathSegment
                                                            pathIdentSegment
                                                              identifier
                                                                u8
                                                ]
                                      ,
                                      type_
                                        typeNoBounds
                                          traitObjectTypeOneBound
                                            traitBound
                                              typePath
                                                typePathSegment
                                                  pathIdentSegment
                                                    identifier
                                                      u8
                                      )
                              >
              blockExpression
                {
                statements
                  statement
                    expressionStatement
                      expressionWithBlock
                        loopExpression
                          iteratorLoopExpression
                            for
                            pattern
                              patternNoTopAlt
                                patternWithoutRange
                                  identifierPattern
                                    identifier
                                      i
                            in
                            expression
                              expression
                                literalExpression
                                  0
                              ..
                              expression
                                expression
                                  pathExpression
                                    pathInExpression
                                      pathExprSegment
                                        pathIdentSegment
                                          identifier
                                            val
                                .
                                pathExprSegment
                                  pathIdentSegment
                                    identifier
                                      len
                                (
                                )
                            blockExpression
                              {
                              statements
                                statement
                                  expressionStatement
                                    expressionWithBlock
                                      ifLetExpression
                                        if
                                        let
                                        pattern
                                          patternNoTopAlt
                                            patternWithoutRange
                                              tuplePattern
                                                (
                                                tuplePatternItems
                                                  pattern
                                                    patternNoTopAlt
                                                      patternWithoutRange
                                                        identifierPattern
                                                          identifier
                                                            prev
                                                  ,
                                                  pattern
                                                    patternNoTopAlt
                                                      patternWithoutRange
                                                        slicePattern
                                                          [
                                                          slicePatternItems
                                                            pattern
                                                              patternNoTopAlt
                                                                patternWithoutRange
                                                                  literalPattern
                                                                    b'%'
                                                            ,
                                                            pattern
                                                              patternNoTopAlt
                                                                patternWithoutRange
                                                                  identifierPattern
                                                                    identifier
                                                                      p1
                                                            ,
                                                            pattern
                                                              patternNoTopAlt
                                                                patternWithoutRange
                                                                  identifierPattern
                                                                    identifier
                                                                      p2
                                                            ,
                                                            pattern
                                                              patternNoTopAlt
                                                                patternWithoutRange
                                                                  identifierPattern
                                                                    identifier
                                                                      rem
                                                                    @
                                                                    pattern
                                                                      patternNoTopAlt
                                                                        patternWithoutRange
                                                                          restPattern
                                                                            ..
                                                          ]
                                                )
                                        =
                                        expression
                                          expression
                                            pathExpression
                                              pathInExpression
                                                pathExprSegment
                                                  pathIdentSegment
                                                    identifier
                                                      val
                                          .
                                          pathExprSegment
                                            pathIdentSegment
                                              identifier
                                                split_at
                                          (
                                          callParams
                                            expression
                                              pathExpression
                                                pathInExpression
                                                  pathExprSegment
                                                    pathIdentSegment
                                                      identifier
                                                        i
                                          )
                                        blockExpression
                                          {
                                          statements
                                            statement
                                              expressionStatement
                                                expressionWithBlock
                                                  ifLetExpression
                                                    if
                                                    let
                                                    pattern
                                                      patternNoTopAlt
                                                        patternWithoutRange
                                                          tupleStructPattern
                                                            pathInExpression
                                                              pathExprSegment
                                                                pathIdentSegment
                                                                  identifier
                                                                    Some
                                                            (
                                                            tupleStructItems
                                                              pattern
                                                                patternNoTopAlt
                                                                  patternWithoutRange
                                                                    identifierPattern
                                                                      identifier
                                                                        ch
                                                            )
                                                    =
                                                    expression
                                                      expression
                                                        expression
                                                          pathExpression
                                                            pathInExpression
                                                              pathExprSegment
                                                                pathIdentSegment
                                                                  identifier
                                                                    hex_pair_to_char
                                                        (
                                                        callParams
                                                          expression
                                                            *
                                                            expression
                                                              pathExpression
                                                                pathInExpression
                                                                  pathExprSegment
                                                                    pathIdentSegment
                                                                      identifier
                                                                        p1
                                                          ,
                                                          expression
                                                            *
                                                            expression
                                                              pathExpression
                                                                pathInExpression
                                                                  pathExprSegment
                                                                    pathIdentSegment
                                                                      identifier
                                                                        p2
                                                        )
                                                      .
                                                      pathExprSegment
                                                        pathIdentSegment
                                                          identifier
                                                            filter
                                                      (
                                                      callParams
                                                        expression
                                                          closureExpression
                                                            |
                                                            closureParameters
                                                              closureParam
                                                                pattern
                                                                  patternNoTopAlt
                                                                    patternWithoutRange
                                                                      referencePattern
                                                                        &
                                                                        patternWithoutRange
                                                                          identifierPattern
                                                                            identifier
                                                                              ch
                                                            |
                                                            expression
                                                              !
                                                              expression
                                                                (
                                                                expression
                                                                  expression
                                                                    expression
                                                                      pathExpression
                                                                        pathInExpression
                                                                          pathExprSegment
                                                                            pathIdentSegment
                                                                              identifier
                                                                                ch
                                                                    comparisonOperator
                                                                      <
                                                                    expression
                                                                      literalExpression
                                                                        128
                                                                  &&
                                                                  expression
                                                                    expression
                                                                      expression
                                                                        pathExpression
                                                                          pathInExpression
                                                                            pathExprSegment
                                                                              pathIdentSegment
                                                                                self
                                                                      .
                                                                      identifier
                                                                        protected_table
                                                                    .
                                                                    pathExprSegment
                                                                      pathIdentSegment
                                                                        identifier
                                                                          bit_at
                                                                    (
                                                                    callParams
                                                                      expression
                                                                        pathExpression
                                                                          pathInExpression
                                                                            pathExprSegment
                                                                              pathIdentSegment
                                                                                identifier
                                                                                  ch
                                                                    )
                                                                )
                                                      )
                                                    blockExpression
                                                      {
                                                      statements
                                                        statement
                                                          expressionStatement
                                                            expression
                                                              expression
                                                                *
                                                                expression
                                                                  pathExpression
                                                                    pathInExpression
                                                                      pathExprSegment
                                                                        pathIdentSegment
                                                                          identifier
                                                                            val
                                                              =
                                                              expression
                                                                pathExpression
                                                                  pathInExpression
                                                                    pathExprSegment
                                                                      pathIdentSegment
                                                                        identifier
                                                                          rem
                                                            ;
                                                        statement
                                                          expressionStatement
                                                            expression
                                                              return
                                                              expression
                                                                expression
                                                                  pathExpression
                                                                    pathInExpression
                                                                      pathExprSegment
                                                                        pathIdentSegment
                                                                          identifier
                                                                            Some
                                                                (
                                                                callParams
                                                                  expression
                                                                    (
                                                                    tupleElements
                                                                      expression
                                                                        pathExpression
                                                                          pathInExpression
                                                                            pathExprSegment
                                                                              pathIdentSegment
                                                                                identifier
                                                                                  prev
                                                                      ,
                                                                      expression
                                                                        pathExpression
                                                                          pathInExpression
                                                                            pathExprSegment
                                                                              pathIdentSegment
                                                                                identifier
                                                                                  ch
                                                                    )
                                                                )
                                                            ;
                                                      }
                                          }
                              }
                  expression
                    pathExpression
                      pathInExpression
                        pathExprSegment
                          pathIdentSegment
                            identifier
                              None
                }
          associatedItem
            visibility
              pub
            function_
              functionQualifiers
              fn
              identifier
                requote
              (
              functionParameters
                selfParam
                  shorthandSelf
                    &
                    self
                ,
                functionParam
                  functionParamPattern
                    pattern
                      patternNoTopAlt
                        patternWithoutRange
                          identifierPattern
                            identifier
                              val
                    :
                    type_
                      typeNoBounds
                        referenceType
                          &
                          typeNoBounds
                            sliceType
                              [
                              type_
                                typeNoBounds
                                  traitObjectTypeOneBound
                                    traitBound
                                      typePath
                                        typePathSegment
                                          pathIdentSegment
                                            identifier
                                              u8
                              ]
              )
              functionReturnType
                ->
                type_
                  typeNoBounds
                    traitObjectTypeOneBound
                      traitBound
                        typePath
                          typePathSegment
                            pathIdentSegment
                              identifier
                                Option
                            genericArgs
                              <
                              genericArgsTypes
                                type_
                                  typeNoBounds
                                    traitObjectTypeOneBound
                                      traitBound
                                        typePath
                                          typePathSegment
                                            pathIdentSegment
                                              identifier
                                                Vec
                                            genericArgs
                                              <
                                              genericArgsTypes
                                                type_
                                                  typeNoBounds
                                                    traitObjectTypeOneBound
                                                      traitBound
                                                        typePath
                                                          typePathSegment
                                                            pathIdentSegment
                                                              identifier
                                                                u8
                                              >
                              >
              blockExpression
                {
                statements
                  statement
                    letStatement
                      let
                      patternNoTopAlt
                        patternWithoutRange
                          identifierPattern
                            mut
                            identifier
                              remaining
                      =
                      expression
                        pathExpression
                          pathInExpression
                            pathExprSegment
                              pathIdentSegment
                                identifier
                                  val
                      ;
                  statement
                    letStatement
                      let
                      patternNoTopAlt
                        patternWithoutRange
                          tuplePattern
                            (
                            tuplePatternItems
                              pattern
                                patternNoTopAlt
                                  patternWithoutRange
                                    identifierPattern
                                      identifier
                                        pre
                              ,
                              pattern
                                patternNoTopAlt
                                  patternWithoutRange
                                    identifierPattern
                                      identifier
                                        decoded_char
                            )
                      =
                      expression
                        expression
                          expression
                            pathExpression
                              pathInExpression
                                pathExprSegment
                                  pathIdentSegment
                                    self
                          .
                          pathExprSegment
                            pathIdentSegment
                              identifier
                                decode_next
                          (
                          callParams
                            expression
                              &
                              mut
                              expression
                                pathExpression
                                  pathInExpression
                                    pathExprSegment
                                      pathIdentSegment
                                        identifier
                                          remaining
                          )
                        ?
                      ;
                  statement
                    letStatement
                      let
                      patternNoTopAlt
                        patternWithoutRange
                          identifierPattern
                            mut
                            identifier
                              decoded
                      =
                      expression
                        expression
                          pathExpression
                            pathInExpression
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    Vec
                                ::
                                genericArgs
                                  <
                                  genericArgsTypes
                                    type_
                                      typeNoBounds
                                        traitObjectTypeOneBound
                                          traitBound
                                            typePath
                                              typePathSegment
                                                pathIdentSegment
                                                  identifier
                                                    u8
                                  >
                              ::
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    with_capacity
                        (
                        callParams
                          expression
                            expression
                              pathExpression
                                pathInExpression
                                  pathExprSegment
                                    pathIdentSegment
                                      identifier
                                        val
                            .
                            pathExprSegment
                              pathIdentSegment
                                identifier
                                  len
                            (
                            )
                        )
                      ;
                  statement
                    expressionStatement
                      expression
                        expression
                          pathExpression
                            pathInExpression
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    decoded
                        .
                        pathExprSegment
                          pathIdentSegment
                            identifier
                              extend_from_slice
                        (
                        callParams
                          expression
                            pathExpression
                              pathInExpression
                                pathExprSegment
                                  pathIdentSegment
                                    identifier
                                      pre
                        )
                      ;
                  statement
                    expressionStatement
                      expression
                        expression
                          pathExpression
                            pathInExpression
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    decoded
                        .
                        pathExprSegment
                          pathIdentSegment
                            identifier
                              push
                        (
                        callParams
                          expression
                            pathExpression
                              pathInExpression
                                pathExprSegment
                                  pathIdentSegment
                                    identifier
                                      decoded_char
                        )
                      ;
                  statement
                    expressionStatement
                      expressionWithBlock
                        loopExpression
                          predicatePatternLoopExpression
                            while
                            let
                            pattern
                              patternNoTopAlt
                                patternWithoutRange
                                  tupleStructPattern
                                    pathInExpression
                                      pathExprSegment
                                        pathIdentSegment
                                          identifier
                                            Some
                                    (
                                    tupleStructItems
                                      pattern
                                        patternNoTopAlt
                                          patternWithoutRange
                                            tuplePattern
                                              (
                                              tuplePatternItems
                                                pattern
                                                  patternNoTopAlt
                                                    patternWithoutRange
                                                      identifierPattern
                                                        identifier
                                                          prev
                                                ,
                                                pattern
                                                  patternNoTopAlt
                                                    patternWithoutRange
                                                      identifierPattern
                                                        identifier
                                                          ch
                                              )
                                    )
                            =
                            expression
                              expression
                                pathExpression
                                  pathInExpression
                                    pathExprSegment
                                      pathIdentSegment
                                        self
                              .
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    decode_next
                              (
                              callParams
                                expression
                                  &
                                  mut
                                  expression
                                    pathExpression
                                      pathInExpression
                                        pathExprSegment
                                          pathIdentSegment
                                            identifier
                                              remaining
                              )
                            blockExpression
                              {
                              statements
                                statement
                                  expressionStatement
                                    expressionWithBlock
                                      ifExpression
                                        if
                                        expression
                                          !
                                          expression
                                            expression
                                              pathExpression
                                                pathInExpression
                                                  pathExprSegment
                                                    pathIdentSegment
                                                      identifier
                                                        prev
                                            .
                                            pathExprSegment
                                              pathIdentSegment
                                                identifier
                                                  is_empty
                                            (
                                            )
                                        blockExpression
                                          {
                                          statements
                                            statement
                                              expressionStatement
                                                expression
                                                  expression
                                                    pathExpression
                                                      pathInExpression
                                                        pathExprSegment
                                                          pathIdentSegment
                                                            identifier
                                                              decoded
                                                  .
                                                  pathExprSegment
                                                    pathIdentSegment
                                                      identifier
                                                        extend_from_slice
                                                  (
                                                  callParams
                                                    expression
                                                      pathExpression
                                                        pathInExpression
                                                          pathExprSegment
                                                            pathIdentSegment
                                                              identifier
                                                                prev
                                                  )
                                                ;
                                          }
                                statement
                                  expressionStatement
                                    expression
                                      expression
                                        pathExpression
                                          pathInExpression
                                            pathExprSegment
                                              pathIdentSegment
                                                identifier
                                                  decoded
                                      .
                                      pathExprSegment
                                        pathIdentSegment
                                          identifier
                                            push
                                      (
                                      callParams
                                        expression
                                          pathExpression
                                            pathInExpression
                                              pathExprSegment
                                                pathIdentSegment
                                                  identifier
                                                    ch
                                      )
                                    ;
                              }
                  statement
                    expressionStatement
                      expression
                        expression
                          pathExpression
                            pathInExpression
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    decoded
                        .
                        pathExprSegment
                          pathIdentSegment
                            identifier
                              extend_from_slice
                        (
                        callParams
                          expression
                            pathExpression
                              pathInExpression
                                pathExprSegment
                                  pathIdentSegment
                                    identifier
                                      remaining
                        )
                      ;
                  expression
                    expression
                      pathExpression
                        pathInExpression
                          pathExprSegment
                            pathIdentSegment
                              identifier
                                Some
                    (
                    callParams
                      expression
                        pathExpression
                          pathInExpression
                            pathExprSegment
                              pathIdentSegment
                                identifier
                                  decoded
                    )
                }
          associatedItem
            visibility
              pub
              (
              crate
              )
            function_
              functionQualifiers
              fn
              identifier
                requote_str_lossy
              (
              functionParameters
                selfParam
                  shorthandSelf
                    &
                    self
                ,
                functionParam
                  functionParamPattern
                    pattern
                      patternNoTopAlt
                        patternWithoutRange
                          identifierPattern
                            identifier
                              val
                    :
                    type_
                      typeNoBounds
                        referenceType
                          &
                          typeNoBounds
                            traitObjectTypeOneBound
                              traitBound
                                typePath
                                  typePathSegment
                                    pathIdentSegment
                                      identifier
                                        str
              )
              functionReturnType
                ->
                type_
                  typeNoBounds
                    traitObjectTypeOneBound
                      traitBound
                        typePath
                          typePathSegment
                            pathIdentSegment
                              identifier
                                Option
                            genericArgs
                              <
                              genericArgsTypes
                                type_
                                  typeNoBounds
                                    traitObjectTypeOneBound
                                      traitBound
                                        typePath
                                          typePathSegment
                                            pathIdentSegment
                                              identifier
                                                String
                              >
              blockExpression
                {
                statements
                  expression
                    expression
                      expression
                        pathExpression
                          pathInExpression
                            pathExprSegment
                              pathIdentSegment
                                self
                      .
                      pathExprSegment
                        pathIdentSegment
                          identifier
                            requote
                      (
                      callParams
                        expression
                          expression
                            pathExpression
                              pathInExpression
                                pathExprSegment
                                  pathIdentSegment
                                    identifier
                                      val
                          .
                          pathExprSegment
                            pathIdentSegment
                              identifier
                                as_bytes
                          (
                          )
                      )
                    .
                    pathExprSegment
                      pathIdentSegment
                        identifier
                          map
                    (
                    callParams
                      expression
                        closureExpression
                          |
                          closureParameters
                            closureParam
                              pattern
                                patternNoTopAlt
                                  patternWithoutRange
                                    identifierPattern
                                      identifier
                                        data
                          |
                          expression
                            expression
                              expression
                                pathExpression
                                  pathInExpression
                                    pathExprSegment
                                      pathIdentSegment
                                        identifier
                                          String
                                    ::
                                    pathExprSegment
                                      pathIdentSegment
                                        identifier
                                          from_utf8_lossy
                              (
                              callParams
                                expression
                                  &
                                  expression
                                    pathExpression
                                      pathInExpression
                                        pathExprSegment
                                          pathIdentSegment
                                            identifier
                                              data
                              )
                            .
                            pathExprSegment
                              pathIdentSegment
                                identifier
                                  into_owned
                            (
                            )
                    )
                }
          }
  item
    outerAttribute
      #
      [
      attr
        simplePath
          simplePathSegment
            identifier
              inline
        attrInput
          delimTokenTree
            (
            tokenTree
              tokenTreeToken
                macroIdentifierLikeToken
                  identifier
                    always
            )
      ]
    visItem
      function_
        functionQualifiers
        fn
        identifier
          hex_pair_to_char
        (
        functionParameters
          functionParam
            functionParamPattern
              pattern
                patternNoTopAlt
                  patternWithoutRange
                    identifierPattern
                      identifier
                        d1
              :
              type_
                typeNoBounds
                  traitObjectTypeOneBound
                    traitBound
                      typePath
                        typePathSegment
                          pathIdentSegment
                            identifier
                              u8
          ,
          functionParam
            functionParamPattern
              pattern
                patternNoTopAlt
                  patternWithoutRange
                    identifierPattern
                      identifier
                        d2
              :
              type_
                typeNoBounds
                  traitObjectTypeOneBound
                    traitBound
                      typePath
                        typePathSegment
                          pathIdentSegment
                            identifier
                              u8
        )
        functionReturnType
          ->
          type_
            typeNoBounds
              traitObjectTypeOneBound
                traitBound
                  typePath
                    typePathSegment
                      pathIdentSegment
                        identifier
                          Option
                      genericArgs
                        <
                        genericArgsTypes
                          type_
                            typeNoBounds
                              traitObjectTypeOneBound
                                traitBound
                                  typePath
                                    typePathSegment
                                      pathIdentSegment
                                        identifier
                                          u8
                        >
        blockExpression
          {
          statements
            statement
              letStatement
                let
                patternNoTopAlt
                  patternWithoutRange
                    identifierPattern
                      identifier
                        d_high
                =
                expression
                  expression
                    expression
                      expression
                        pathExpression
                          pathInExpression
                            pathExprSegment
                              pathIdentSegment
                                identifier
                                  char
                            ::
                            pathExprSegment
                              pathIdentSegment
                                identifier
                                  from
                      (
                      callParams
                        expression
                          pathExpression
                            pathInExpression
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    d1
                      )
                    .
                    pathExprSegment
                      pathIdentSegment
                        identifier
                          to_digit
                    (
                    callParams
                      expression
                        literalExpression
                          16
                    )
                  ?
                ;
            statement
              letStatement
                let
                patternNoTopAlt
                  patternWithoutRange
                    identifierPattern
                      identifier
                        d_low
                =
                expression
                  expression
                    expression
                      expression
                        pathExpression
                          pathInExpression
                            pathExprSegment
                              pathIdentSegment
                                identifier
                                  char
                            ::
                            pathExprSegment
                              pathIdentSegment
                                identifier
                                  from
                      (
                      callParams
                        expression
                          pathExpression
                            pathInExpression
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    d2
                      )
                    .
                    pathExprSegment
                      pathIdentSegment
                        identifier
                          to_digit
                    (
                    callParams
                      expression
                        literalExpression
                          16
                    )
                  ?
                ;
            expression
              expression
                pathExpression
                  pathInExpression
                    pathExprSegment
                      pathIdentSegment
                        identifier
                          Some
              (
              callParams
                expression
                  expression
                    (
                    expression
                      expression
                        (
                        expression
                          expression
                            pathExpression
                              pathInExpression
                                pathExprSegment
                                  pathIdentSegment
                                    identifier
                                      d_high
                          as
                          typeNoBounds
                            traitObjectTypeOneBound
                              traitBound
                                typePath
                                  typePathSegment
                                    pathIdentSegment
                                      identifier
                                        u8
                        )
                      shl
                        <
                      expression
                        pathExpression
                          qualifiedPathInExpression
                            qualifiedPathType
                              <
                              type_
                                4
                    )
                  |
                  expression
                    (
                    expression
                      expression
                        pathExpression
                          pathInExpression
                            pathExprSegment
                              pathIdentSegment
                                identifier
                                  d_low
                      as
                      typeNoBounds
                        traitObjectTypeOneBound
                          traitBound
                            typePath
                              typePathSegment
                                pathIdentSegment
                                  identifier
                                    u8
                    )
              )
          }
  item
    outerAttribute
      #
      [
      attr
        simplePath
          simplePathSegment
            identifier
              derive
        attrInput
          delimTokenTree
            (
            tokenTree
              tokenTreeToken
                macroIdentifierLikeToken
                  identifier
                    Debug
              tokenTreeToken
                macroPunctuationToken
                  ,
              tokenTreeToken
                macroIdentifierLikeToken
                  identifier
                    Default
              tokenTreeToken
                macroPunctuationToken
                  ,
              tokenTreeToken
                macroIdentifierLikeToken
                  identifier
                    Clone
            )
      ]
    visItem
      struct_
        structStruct
          struct
          identifier
            AsciiBitmap
          {
          structFields
            structField
              identifier
                array
              :
              type_
                typeNoBounds
                  arrayType
                    [
                    type_
                      typeNoBounds
                        traitObjectTypeOneBound
                          traitBound
                            typePath
                              typePathSegment
                                pathIdentSegment
                                  identifier
                                    u8
                    ;
                    expression
                      literalExpression
                        16
                    ]
            ,
          }
  item
    visItem
      implementation
        inherentImpl
          impl
          type_
            typeNoBounds
              traitObjectTypeOneBound
                traitBound
                  typePath
                    typePathSegment
                      pathIdentSegment
                        identifier
                          AsciiBitmap
          {
          associatedItem
            function_
              functionQualifiers
              fn
              identifier
                set_bit
              (
              functionParameters
                selfParam
                  shorthandSelf
                    &
                    mut
                    self
                ,
                functionParam
                  functionParamPattern
                    pattern
                      patternNoTopAlt
                        patternWithoutRange
                          identifierPattern
                            identifier
                              ch
                    :
                    type_
                      typeNoBounds
                        traitObjectTypeOneBound
                          traitBound
                            typePath
                              typePathSegment
                                pathIdentSegment
                                  identifier
                                    u8
              )
              blockExpression
                {
                statements
                  expression
                    expression
                      expression
                        expression
                          pathExpression
                            pathInExpression
                              pathExprSegment
                                pathIdentSegment
                                  self
                        .
                        identifier
                          array
                      [
                      expression
                        expression
                          (
                          expression
                            expression
                              pathExpression
                                pathInExpression
                                  pathExprSegment
                                    pathIdentSegment
                                      identifier
                                        ch
                            shr
                              >
                              >
                            expression
                              literalExpression
                                3
                          )
                        as
                        typeNoBounds
                          traitObjectTypeOneBound
                            traitBound
                              typePath
                                typePathSegment
                                  pathIdentSegment
                                    identifier
                                      usize
                      ]
                    compoundAssignOperator
                      |=
                    expression
                      expression
                        literalExpression
                          0b1
                      shl
                        <
                      expression
                        expression
                          pathExpression
                            qualifiedPathInExpression
                              qualifiedPathType
                                <
                                type_
                        (
                        callParams
                          expression
                            expression
                              pathExpression
                                pathInExpression
                                  pathExprSegment
                                    pathIdentSegment
                                      identifier
                                        ch
                            &
                            expression
                              literalExpression
                                0b111
                        )
                }
          associatedItem
            function_
              functionQualifiers
              fn
              identifier
                bit_at
              (
              functionParameters
                selfParam
                  shorthandSelf
                    &
                    self
                ,
                functionParam
                  functionParamPattern
                    pattern
                      patternNoTopAlt
                        patternWithoutRange
                          identifierPattern
                            identifier
                              ch
                    :
                    type_
                      typeNoBounds
                        traitObjectTypeOneBound
                          traitBound
                            typePath
                              typePathSegment
                                pathIdentSegment
                                  identifier
                                    u8
              )
              functionReturnType
                ->
                type_
                  typeNoBounds
                    traitObjectTypeOneBound
                      traitBound
                        typePath
                          typePathSegment
                            pathIdentSegment
                              identifier
                                bool
              blockExpression
                {
                statements
                  expression
                    expression
                      expression
                        expression
                          expression
                            pathExpression
                              pathInExpression
                                pathExprSegment
                                  pathIdentSegment
                                    self
                          .
                          identifier
                            array
                        [
                        expression
                          expression
                            (
                            expression
                              expression
                                pathExpression
                                  pathInExpression
                                    pathExprSegment
                                      pathIdentSegment
                                        identifier
                                          ch
                              shr
                                >
                                >
                              expression
                                literalExpression
                                  3
                            )
                          as
                          typeNoBounds
                            traitObjectTypeOneBound
                              traitBound
                                typePath
                                  typePathSegment
                                    pathIdentSegment
                                      identifier
                                        usize
                        ]
                      &
                      expression
                        (
                        expression
                          expression
                            literalExpression
                              0b1
                          shl
                            <
                          expression
                            expression
                              pathExpression
                                qualifiedPathInExpression
                                  qualifiedPathType
                                    <
                                    type_
                            (
                            callParams
                              expression
                                expression
                                  pathExpression
                                    pathInExpression
                                      pathExprSegment
                                        pathIdentSegment
                                          identifier
                                            ch
                                &
                                expression
                                  literalExpression
                                    0b111
                            )
                        )
                    comparisonOperator
                      !=
                    expression
                      literalExpression
                        0
                }
          }
  item
    outerAttribute
      #
      [
      attr
        simplePath
          simplePathSegment
            identifier
              cfg
        attrInput
          delimTokenTree
            (
            tokenTree
              tokenTreeToken
                macroIdentifierLikeToken
                  identifier
                    test
            )
      ]
    visItem
      module
        mod
        identifier
          tests
        {
        item
          visItem
            useDeclaration
              use
              useTree
                simplePath
                  simplePathSegment
                    super
                ::
                *
              ;
        item
          outerAttribute
            #
            [
            attr
              simplePath
                simplePathSegment
                  identifier
                    test
            ]
          visItem
            function_
              functionQualifiers
              fn
              identifier
                custom_quoter
              (
              )
              blockExpression
                {
                statements
                  statement
                    letStatement
                      let
                      patternNoTopAlt
                        patternWithoutRange
                          identifierPattern
                            identifier
                              q
                      =
                      expression
                        expression
                          pathExpression
                            pathInExpression
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    Quoter
                              ::
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    new
                        (
                        callParams
                          expression
                            literalExpression
                              b""
                          ,
                          expression
                            literalExpression
                              b"+"
                        )
                      ;
                  statement
                    item
                      macroItem
                        macroInvocationSemi
                          simplePath
                            simplePathSegment
                              identifier
                                assert_eq
                          !
                          (
                          tokenTree
                            tokenTreeToken
                              macroIdentifierLikeToken
                                identifier
                                  q
                            tokenTreeToken
                              macroPunctuationToken
                                .
                            tokenTreeToken
                              macroIdentifierLikeToken
                                identifier
                                  requote
                          tokenTree
                            delimTokenTree
                              (
                              tokenTree
                                tokenTreeToken
                                  macroLiteralToken
                                    literalExpression
                                      b"/a%25c"
                              )
                          tokenTree
                            tokenTreeToken
                              macroPunctuationToken
                                .
                            tokenTreeToken
                              macroIdentifierLikeToken
                                identifier
                                  unwrap
                          tokenTree
                            delimTokenTree
                              (
                              )
                          tokenTree
                            tokenTreeToken
                              macroPunctuationToken
                                ,
                            tokenTreeToken
                              macroLiteralToken
                                literalExpression
                                  b"/a%c"
                          )
                          ;
                  statement
                    item
                      macroItem
                        macroInvocationSemi
                          simplePath
                            simplePathSegment
                              identifier
                                assert_eq
                          !
                          (
                          tokenTree
                            tokenTreeToken
                              macroIdentifierLikeToken
                                identifier
                                  q
                            tokenTreeToken
                              macroPunctuationToken
                                .
                            tokenTreeToken
                              macroIdentifierLikeToken
                                identifier
                                  requote
                          tokenTree
                            delimTokenTree
                              (
                              tokenTree
                                tokenTreeToken
                                  macroLiteralToken
                                    literalExpression
                                      b"/a%2Bc"
                              )
                          tokenTree
                            tokenTreeToken
                              macroPunctuationToken
                                ,
                            tokenTreeToken
                              macroIdentifierLikeToken
                                identifier
                                  None
                          )
                          ;
                  statement
                    letStatement
                      let
                      patternNoTopAlt
                        patternWithoutRange
                          identifierPattern
                            identifier
                              q
                      =
                      expression
                        expression
                          pathExpression
                            pathInExpression
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    Quoter
                              ::
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    new
                        (
                        callParams
                          expression
                            literalExpression
                              b"%+"
                          ,
                          expression
                            literalExpression
                              b"/"
                        )
                      ;
                  statement
                    item
                      macroItem
                        macroInvocationSemi
                          simplePath
                            simplePathSegment
                              identifier
                                assert_eq
                          !
                          (
                          tokenTree
                            tokenTreeToken
                              macroIdentifierLikeToken
                                identifier
                                  q
                            tokenTreeToken
                              macroPunctuationToken
                                .
                            tokenTreeToken
                              macroIdentifierLikeToken
                                identifier
                                  requote
                          tokenTree
                            delimTokenTree
                              (
                              tokenTree
                                tokenTreeToken
                                  macroLiteralToken
                                    literalExpression
                                      b"/a%25b%2Bc"
                              )
                          tokenTree
                            tokenTreeToken
                              macroPunctuationToken
                                .
                            tokenTreeToken
                              macroIdentifierLikeToken
                                identifier
                                  unwrap
                          tokenTree
                            delimTokenTree
                              (
                              )
                          tokenTree
                            tokenTreeToken
                              macroPunctuationToken
                                ,
                            tokenTreeToken
                              macroLiteralToken
                                literalExpression
                                  b"/a%b+c"
                          )
                          ;
                  statement
                    item
                      macroItem
                        macroInvocationSemi
                          simplePath
                            simplePathSegment
                              identifier
                                assert_eq
                          !
                          (
                          tokenTree
                            tokenTreeToken
                              macroIdentifierLikeToken
                                identifier
                                  q
                            tokenTreeToken
                              macroPunctuationToken
                                .
                            tokenTreeToken
                              macroIdentifierLikeToken
                                identifier
                                  requote
                          tokenTree
                            delimTokenTree
                              (
                              tokenTree
                                tokenTreeToken
                                  macroLiteralToken
                                    literalExpression
                                      b"/a%2fb"
                              )
                          tokenTree
                            tokenTreeToken
                              macroPunctuationToken
                                ,
                            tokenTreeToken
                              macroIdentifierLikeToken
                                identifier
                                  None
                          )
                          ;
                  statement
                    item
                      macroItem
                        macroInvocationSemi
                          simplePath
                            simplePathSegment
                              identifier
                                assert_eq
                          !
                          (
                          tokenTree
                            tokenTreeToken
                              macroIdentifierLikeToken
                                identifier
                                  q
                            tokenTreeToken
                              macroPunctuationToken
                                .
                            tokenTreeToken
                              macroIdentifierLikeToken
                                identifier
                                  requote
                          tokenTree
                            delimTokenTree
                              (
                              tokenTree
                                tokenTreeToken
                                  macroLiteralToken
                                    literalExpression
                                      b"/a%2Fb"
                              )
                          tokenTree
                            tokenTreeToken
                              macroPunctuationToken
                                ,
                            tokenTreeToken
                              macroIdentifierLikeToken
                                identifier
                                  None
                          )
                          ;
                  statement
                    item
                      macroItem
                        macroInvocationSemi
                          simplePath
                            simplePathSegment
                              identifier
                                assert_eq
                          !
                          (
                          tokenTree
                            tokenTreeToken
                              macroIdentifierLikeToken
                                identifier
                                  q
                            tokenTreeToken
                              macroPunctuationToken
                                .
                            tokenTreeToken
                              macroIdentifierLikeToken
                                identifier
                                  requote
                          tokenTree
                            delimTokenTree
                              (
                              tokenTree
                                tokenTreeToken
                                  macroLiteralToken
                                    literalExpression
                                      b"/a%0Ab"
                              )
                          tokenTree
                            tokenTreeToken
                              macroPunctuationToken
                                .
                            tokenTreeToken
                              macroIdentifierLikeToken
                                identifier
                                  unwrap
                          tokenTree
                            delimTokenTree
                              (
                              )
                          tokenTree
                            tokenTreeToken
                              macroPunctuationToken
                                ,
                            tokenTreeToken
                              macroLiteralToken
                                literalExpression
                                  b"/a\nb"
                          )
                          ;
                  statement
                    item
                      macroItem
                        macroInvocationSemi
                          simplePath
                            simplePathSegment
                              identifier
                                assert_eq
                          !
                          (
                          tokenTree
                            tokenTreeToken
                              macroIdentifierLikeToken
                                identifier
                                  q
                            tokenTreeToken
                              macroPunctuationToken
                                .
                            tokenTreeToken
                              macroIdentifierLikeToken
                                identifier
                                  requote
                          tokenTree
                            delimTokenTree
                              (
                              tokenTree
                                tokenTreeToken
                                  macroLiteralToken
                                    literalExpression
                                      b"/a%FE\xffb"
                              )
                          tokenTree
                            tokenTreeToken
                              macroPunctuationToken
                                .
                            tokenTreeToken
                              macroIdentifierLikeToken
                                identifier
                                  unwrap
                          tokenTree
                            delimTokenTree
                              (
                              )
                          tokenTree
                            tokenTreeToken
                              macroPunctuationToken
                                ,
                            tokenTreeToken
                              macroLiteralToken
                                literalExpression
                                  b"/a\xfe\xffb"
                          )
                          ;
                  statement
                    item
                      macroItem
                        macroInvocationSemi
                          simplePath
                            simplePathSegment
                              identifier
                                assert_eq
                          !
                          (
                          tokenTree
                            tokenTreeToken
                              macroIdentifierLikeToken
                                identifier
                                  q
                            tokenTreeToken
                              macroPunctuationToken
                                .
                            tokenTreeToken
                              macroIdentifierLikeToken
                                identifier
                                  requote
                          tokenTree
                            delimTokenTree
                              (
                              tokenTree
                                tokenTreeToken
                                  macroLiteralToken
                                    literalExpression
                                      b"/a\xfe\xffb"
                              )
                          tokenTree
                            tokenTreeToken
                              macroPunctuationToken
                                ,
                            tokenTreeToken
                              macroIdentifierLikeToken
                                identifier
                                  None
                          )
                          ;
                }
        item
          outerAttribute
            #
            [
            attr
              simplePath
                simplePathSegment
                  identifier
                    test
            ]
          visItem
            function_
              functionQualifiers
              fn
              identifier
                non_ascii
              (
              )
              blockExpression
                {
                statements
                  statement
                    letStatement
                      let
                      patternNoTopAlt
                        patternWithoutRange
                          identifierPattern
                            identifier
                              q
                      =
                      expression
                        expression
                          pathExpression
                            pathInExpression
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    Quoter
                              ::
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    new
                        (
                        callParams
                          expression
                            literalExpression
                              b"%+"
                          ,
                          expression
                            literalExpression
                              b"/"
                        )
                      ;
                  statement
                    item
                      macroItem
                        macroInvocationSemi
                          simplePath
                            simplePathSegment
                              identifier
                                assert_eq
                          !
                          (
                          tokenTree
                            tokenTreeToken
                              macroIdentifierLikeToken
                                identifier
                                  q
                            tokenTreeToken
                              macroPunctuationToken
                                .
                            tokenTreeToken
                              macroIdentifierLikeToken
                                identifier
                                  requote
                          tokenTree
                            delimTokenTree
                              (
                              tokenTree
                                tokenTreeToken
                                  macroLiteralToken
                                    literalExpression
                                      b"/a%FE\xffb"
                              )
                          tokenTree
                            tokenTreeToken
                              macroPunctuationToken
                                .
                            tokenTreeToken
                              macroIdentifierLikeToken
                                identifier
                                  unwrap
                          tokenTree
                            delimTokenTree
                              (
                              )
                          tokenTree
                            tokenTreeToken
                              macroPunctuationToken
                                ,
                            tokenTreeToken
                              macroLiteralToken
                                literalExpression
                                  b"/a\xfe\xffb"
                          )
                          ;
                  statement
                    item
                      macroItem
                        macroInvocationSemi
                          simplePath
                            simplePathSegment
                              identifier
                                assert_eq
                          !
                          (
                          tokenTree
                            tokenTreeToken
                              macroIdentifierLikeToken
                                identifier
                                  q
                            tokenTreeToken
                              macroPunctuationToken
                                .
                            tokenTreeToken
                              macroIdentifierLikeToken
                                identifier
                                  requote
                          tokenTree
                            delimTokenTree
                              (
                              tokenTree
                                tokenTreeToken
                                  macroLiteralToken
                                    literalExpression
                                      b"/a\xfe\xffb"
                              )
                          tokenTree
                            tokenTreeToken
                              macroPunctuationToken
                                ,
                            tokenTreeToken
                              macroIdentifierLikeToken
                                identifier
                                  None
                          )
                          ;
                }
        item
          outerAttribute
            #
            [
            attr
              simplePath
                simplePathSegment
                  identifier
                    test
            ]
          visItem
            function_
              functionQualifiers
              fn
              identifier
                invalid_sequences
              (
              )
              blockExpression
                {
                statements
                  statement
                    letStatement
                      let
                      patternNoTopAlt
                        patternWithoutRange
                          identifierPattern
                            identifier
                              q
                      =
                      expression
                        expression
                          pathExpression
                            pathInExpression
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    Quoter
                              ::
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    new
                        (
                        callParams
                          expression
                            literalExpression
                              b"%+"
                          ,
                          expression
                            literalExpression
                              b"/"
                        )
                      ;
                  statement
                    item
                      macroItem
                        macroInvocationSemi
                          simplePath
                            simplePathSegment
                              identifier
                                assert_eq
                          !
                          (
                          tokenTree
                            tokenTreeToken
                              macroIdentifierLikeToken
                                identifier
                                  q
                            tokenTreeToken
                              macroPunctuationToken
                                .
                            tokenTreeToken
                              macroIdentifierLikeToken
                                identifier
                                  requote
                          tokenTree
                            delimTokenTree
                              (
                              tokenTree
                                tokenTreeToken
                                  macroLiteralToken
                                    literalExpression
                                      b"/a%2x%2X%%"
                              )
                          tokenTree
                            tokenTreeToken
                              macroPunctuationToken
                                ,
                            tokenTreeToken
                              macroIdentifierLikeToken
                                identifier
                                  None
                          )
                          ;
                  statement
                    item
                      macroItem
                        macroInvocationSemi
                          simplePath
                            simplePathSegment
                              identifier
                                assert_eq
                          !
                          (
                          tokenTree
                            tokenTreeToken
                              macroIdentifierLikeToken
                                identifier
                                  q
                            tokenTreeToken
                              macroPunctuationToken
                                .
                            tokenTreeToken
                              macroIdentifierLikeToken
                                identifier
                                  requote
                          tokenTree
                            delimTokenTree
                              (
                              tokenTree
                                tokenTreeToken
                                  macroLiteralToken
                                    literalExpression
                                      b"/a%20%2X%%"
                              )
                          tokenTree
                            tokenTreeToken
                              macroPunctuationToken
                                .
                            tokenTreeToken
                              macroIdentifierLikeToken
                                identifier
                                  unwrap
                          tokenTree
                            delimTokenTree
                              (
                              )
                          tokenTree
                            tokenTreeToken
                              macroPunctuationToken
                                ,
                            tokenTreeToken
                              macroLiteralToken
                                literalExpression
                                  b"/a %2X%%"
                          )
                          ;
                }
        item
          outerAttribute
            #
            [
            attr
              simplePath
                simplePathSegment
                  identifier
                    test
            ]
          visItem
            function_
              functionQualifiers
              fn
              identifier
                quoter_no_modification
              (
              )
              blockExpression
                {
                statements
                  statement
                    letStatement
                      let
                      patternNoTopAlt
                        patternWithoutRange
                          identifierPattern
                            identifier
                              q
                      =
                      expression
                        expression
                          pathExpression
                            pathInExpression
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    Quoter
                              ::
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    new
                        (
                        callParams
                          expression
                            literalExpression
                              b""
                          ,
                          expression
                            literalExpression
                              b""
                        )
                      ;
                  statement
                    item
                      macroItem
                        macroInvocationSemi
                          simplePath
                            simplePathSegment
                              identifier
                                assert_eq
                          !
                          (
                          tokenTree
                            tokenTreeToken
                              macroIdentifierLikeToken
                                identifier
                                  q
                            tokenTreeToken
                              macroPunctuationToken
                                .
                            tokenTreeToken
                              macroIdentifierLikeToken
                                identifier
                                  requote
                          tokenTree
                            delimTokenTree
                              (
                              tokenTree
                                tokenTreeToken
                                  macroLiteralToken
                                    literalExpression
                                      b"/abc/../efg"
                              )
                          tokenTree
                            tokenTreeToken
                              macroPunctuationToken
                                ,
                            tokenTreeToken
                              macroIdentifierLikeToken
                                identifier
                                  None
                          )
                          ;
                }
        }
  <EOF>

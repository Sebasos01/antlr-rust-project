File: /home/socub/U/tesis/rust_repos/kernel/src/scheme/memory.rs
crate
  item
    visItem
      useDeclaration
        use
        useTree
          simplePath
            simplePathSegment
              identifier
                core
            ::
            simplePathSegment
              identifier
                num
            ::
            simplePathSegment
              identifier
                NonZeroUsize
        ;
  item
    visItem
      useDeclaration
        use
        useTree
          simplePath
            simplePathSegment
              identifier
                alloc
          ::
          {
          useTree
            simplePath
              simplePathSegment
                identifier
                  sync
              ::
              simplePathSegment
                identifier
                  Arc
          ,
          useTree
            simplePath
              simplePathSegment
                identifier
                  vec
              ::
              simplePathSegment
                identifier
                  Vec
          }
        ;
  item
    visItem
      useDeclaration
        use
        useTree
          simplePath
            simplePathSegment
              identifier
                rmm
            ::
            simplePathSegment
              identifier
                PhysicalAddress
        ;
  item
    visItem
      useDeclaration
        use
        useTree
          simplePath
            simplePathSegment
              crate
          ::
          {
          useTree
            simplePath
              simplePathSegment
                identifier
                  context
            ::
            {
            useTree
              simplePath
                simplePathSegment
                  identifier
                    file
                ::
                simplePathSegment
                  identifier
                    InternalFlags
            ,
            useTree
              simplePath
                simplePathSegment
                  identifier
                    memory
              ::
              {
              useTree
                simplePath
                  simplePathSegment
                    identifier
                      handle_notify_files
              ,
              useTree
                simplePath
                  simplePathSegment
                    identifier
                      AddrSpace
              ,
              useTree
                simplePath
                  simplePathSegment
                    identifier
                      AddrSpaceWrapper
              ,
              useTree
                simplePath
                  simplePathSegment
                    identifier
                      Grant
              ,
              useTree
                simplePath
                  simplePathSegment
                    identifier
                      PageSpan
              }
            ,
            }
          ,
          useTree
            simplePath
              simplePathSegment
                identifier
                  memory
            ::
            {
            useTree
              simplePath
                simplePathSegment
                  identifier
                    free_frames
            ,
            useTree
              simplePath
                simplePathSegment
                  identifier
                    used_frames
            ,
            useTree
              simplePath
                simplePathSegment
                  identifier
                    Frame
            ,
            useTree
              simplePath
                simplePathSegment
                  identifier
                    PAGE_SIZE
            }
          ,
          useTree
            simplePath
              simplePathSegment
                identifier
                  paging
              ::
              simplePathSegment
                identifier
                  VirtualAddress
          ,
          }
        ;
  item
    visItem
      useDeclaration
        use
        useTree
          simplePath
            simplePathSegment
              crate
            ::
            simplePathSegment
              identifier
                paging
            ::
            simplePathSegment
              identifier
                entry
            ::
            simplePathSegment
              identifier
                EntryFlags
        ;
  item
    visItem
      useDeclaration
        use
        useTree
          simplePath
            simplePathSegment
              crate
            ::
            simplePathSegment
              identifier
                syscall
          ::
          {
          useTree
            simplePath
              simplePathSegment
                identifier
                  data
            ::
            {
            useTree
              simplePath
                simplePathSegment
                  identifier
                    Map
            ,
            useTree
              simplePath
                simplePathSegment
                  identifier
                    StatVfs
            }
          ,
          useTree
            simplePath
              simplePathSegment
                identifier
                  error
            ::
            *
          ,
          useTree
            simplePath
              simplePathSegment
                identifier
                  flag
              ::
              simplePathSegment
                identifier
                  MapFlags
          ,
          useTree
            simplePath
              simplePathSegment
                identifier
                  usercopy
              ::
              simplePathSegment
                identifier
                  UserSliceWo
          ,
          }
        ;
  item
    visItem
      useDeclaration
        use
        useTree
          simplePath
            simplePathSegment
              super
          ::
          {
          useTree
            simplePath
              simplePathSegment
                identifier
                  CallerCtx
          ,
          useTree
            simplePath
              simplePathSegment
                identifier
                  KernelScheme
          ,
          useTree
            simplePath
              simplePathSegment
                identifier
                  OpenResult
          }
        ;
  item
    visItem
      visibility
        pub
      struct_
        structStruct
          struct
          identifier
            MemoryScheme
          ;
  item
    outerAttribute
      #
      [
      attr
        simplePath
          simplePathSegment
            identifier
              repr
        attrInput
          delimTokenTree
            (
            tokenTree
              tokenTreeToken
                macroIdentifierLikeToken
                  identifier
                    u8
            )
      ]
    outerAttribute
      #
      [
      attr
        simplePath
          simplePathSegment
            identifier
              derive
        attrInput
          delimTokenTree
            (
            tokenTree
              tokenTreeToken
                macroIdentifierLikeToken
                  identifier
                    Clone
              tokenTreeToken
                macroPunctuationToken
                  ,
              tokenTreeToken
                macroIdentifierLikeToken
                  identifier
                    Copy
              tokenTreeToken
                macroPunctuationToken
                  ,
              tokenTreeToken
                macroIdentifierLikeToken
                  identifier
                    Debug
              tokenTreeToken
                macroPunctuationToken
                  ,
              tokenTreeToken
                macroIdentifierLikeToken
                  identifier
                    PartialEq
            )
      ]
    visItem
      enumeration
        enum
        identifier
          HandleTy
        {
        enumItems
          enumItem
            identifier
              Allocated
            enumItemDiscriminant
              =
              expression
                literalExpression
                  0
          ,
          enumItem
            identifier
              PhysBorrow
            enumItemDiscriminant
              =
              expression
                literalExpression
                  1
          ,
        }
  item
    outerAttribute
      #
      [
      attr
        simplePath
          simplePathSegment
            identifier
              repr
        attrInput
          delimTokenTree
            (
            tokenTree
              tokenTreeToken
                macroIdentifierLikeToken
                  identifier
                    u8
            )
      ]
    outerAttribute
      #
      [
      attr
        simplePath
          simplePathSegment
            identifier
              derive
        attrInput
          delimTokenTree
            (
            tokenTree
              tokenTreeToken
                macroIdentifierLikeToken
                  identifier
                    Clone
              tokenTreeToken
                macroPunctuationToken
                  ,
              tokenTreeToken
                macroIdentifierLikeToken
                  identifier
                    Copy
              tokenTreeToken
                macroPunctuationToken
                  ,
              tokenTreeToken
                macroIdentifierLikeToken
                  identifier
                    Debug
              tokenTreeToken
                macroPunctuationToken
                  ,
              tokenTreeToken
                macroIdentifierLikeToken
                  identifier
                    PartialEq
            )
      ]
    visItem
      visibility
        pub
      enumeration
        enum
        identifier
          MemoryType
        {
        enumItems
          enumItem
            identifier
              Writeback
            enumItemDiscriminant
              =
              expression
                literalExpression
                  0
          ,
          enumItem
            identifier
              Uncacheable
            enumItemDiscriminant
              =
              expression
                literalExpression
                  1
          ,
          enumItem
            identifier
              WriteCombining
            enumItemDiscriminant
              =
              expression
                literalExpression
                  2
          ,
          enumItem
            identifier
              DeviceMemory
            enumItemDiscriminant
              =
              expression
                literalExpression
                  3
          ,
        }
  item
    macroItem
      macroInvocationSemi
        simplePath
          simplePathSegment
            identifier
              bitflags
        !
        {
        tokenTree
          tokenTreeToken
            macroIdentifierLikeToken
              keyword
                struct
          tokenTreeToken
            macroIdentifierLikeToken
              identifier
                HandleFlags
          tokenTreeToken
            macroPunctuationToken
              :
          tokenTreeToken
            macroIdentifierLikeToken
              identifier
                u16
        tokenTree
          delimTokenTree
            {
            tokenTree
              tokenTreeToken
                macroIdentifierLikeToken
                  keyword
                    const
              tokenTreeToken
                macroIdentifierLikeToken
                  identifier
                    PHYS_CONTIGUOUS
              tokenTreeToken
                macroPunctuationToken
                  =
              tokenTreeToken
                macroLiteralToken
                  literalExpression
                    1
              tokenTreeToken
                macroPunctuationToken
                  ;
            }
        }
  item
    visItem
      function_
        functionQualifiers
        fn
        identifier
          from_raw
        (
        functionParameters
          functionParam
            functionParamPattern
              pattern
                patternNoTopAlt
                  patternWithoutRange
                    identifierPattern
                      identifier
                        raw
              :
              type_
                typeNoBounds
                  traitObjectTypeOneBound
                    traitBound
                      typePath
                        typePathSegment
                          pathIdentSegment
                            identifier
                              u32
        )
        functionReturnType
          ->
          type_
            typeNoBounds
              traitObjectTypeOneBound
                traitBound
                  typePath
                    typePathSegment
                      pathIdentSegment
                        identifier
                          Option
                      genericArgs
                        <
                        genericArgsTypes
                          type_
                            typeNoBounds
                              tupleType
                                (
                                type_
                                  typeNoBounds
                                    traitObjectTypeOneBound
                                      traitBound
                                        typePath
                                          typePathSegment
                                            pathIdentSegment
                                              identifier
                                                HandleTy
                                ,
                                type_
                                  typeNoBounds
                                    traitObjectTypeOneBound
                                      traitBound
                                        typePath
                                          typePathSegment
                                            pathIdentSegment
                                              identifier
                                                MemoryType
                                ,
                                type_
                                  typeNoBounds
                                    traitObjectTypeOneBound
                                      traitBound
                                        typePath
                                          typePathSegment
                                            pathIdentSegment
                                              identifier
                                                HandleFlags
                                )
                        >
        blockExpression
          {
          statements
            expression
              expression
                pathExpression
                  pathInExpression
                    pathExprSegment
                      pathIdentSegment
                        identifier
                          Some
              (
              callParams
                expression
                  (
                  tupleElements
                    expression
                      expressionWithBlock
                        matchExpression
                          match
                          expression
                            expression
                              pathExpression
                                pathInExpression
                                  pathExprSegment
                                    pathIdentSegment
                                      identifier
                                        raw
                            &
                            expression
                              literalExpression
                                0xFF
                          {
                          matchArms
                            matchArm
                              pattern
                                patternNoTopAlt
                                  patternWithoutRange
                                    literalPattern
                                      0
                            =>
                            matchArmExpression
                              expression
                                pathExpression
                                  pathInExpression
                                    pathExprSegment
                                      pathIdentSegment
                                        identifier
                                          HandleTy
                                    ::
                                    pathExprSegment
                                      pathIdentSegment
                                        identifier
                                          Allocated
                              ,
                            matchArm
                              pattern
                                patternNoTopAlt
                                  patternWithoutRange
                                    literalPattern
                                      1
                            =>
                            matchArmExpression
                              expression
                                pathExpression
                                  pathInExpression
                                    pathExprSegment
                                      pathIdentSegment
                                        identifier
                                          HandleTy
                                    ::
                                    pathExprSegment
                                      pathIdentSegment
                                        identifier
                                          PhysBorrow
                              ,
                            matchArm
                              pattern
                                patternNoTopAlt
                                  patternWithoutRange
                                    wildcardPattern
                                      _
                            =>
                            expression
                              return
                              expression
                                pathExpression
                                  pathInExpression
                                    pathExprSegment
                                      pathIdentSegment
                                        identifier
                                          None
                            ,
                          }
                    ,
                    expression
                      expressionWithBlock
                        matchExpression
                          match
                          expression
                            expression
                              (
                              expression
                                expression
                                  expression
                                    pathExpression
                                      pathInExpression
                                        pathExprSegment
                                          pathIdentSegment
                                            identifier
                                              raw
                                  shr
                                    >
                                  expression
                                comparisonOperator
                                  >
                                expression
                                  literalExpression
                                    8
                              )
                            &
                            expression
                              literalExpression
                                0xFF
                          {
                          matchArms
                            matchArm
                              pattern
                                patternNoTopAlt
                                  patternWithoutRange
                                    literalPattern
                                      0
                            =>
                            matchArmExpression
                              expression
                                pathExpression
                                  pathInExpression
                                    pathExprSegment
                                      pathIdentSegment
                                        identifier
                                          MemoryType
                                    ::
                                    pathExprSegment
                                      pathIdentSegment
                                        identifier
                                          Writeback
                              ,
                            matchArm
                              pattern
                                patternNoTopAlt
                                  patternWithoutRange
                                    literalPattern
                                      1
                            =>
                            matchArmExpression
                              expression
                                pathExpression
                                  pathInExpression
                                    pathExprSegment
                                      pathIdentSegment
                                        identifier
                                          MemoryType
                                    ::
                                    pathExprSegment
                                      pathIdentSegment
                                        identifier
                                          Uncacheable
                              ,
                            matchArm
                              pattern
                                patternNoTopAlt
                                  patternWithoutRange
                                    literalPattern
                                      2
                            =>
                            matchArmExpression
                              expression
                                pathExpression
                                  pathInExpression
                                    pathExprSegment
                                      pathIdentSegment
                                        identifier
                                          MemoryType
                                    ::
                                    pathExprSegment
                                      pathIdentSegment
                                        identifier
                                          WriteCombining
                              ,
                            matchArm
                              pattern
                                patternNoTopAlt
                                  patternWithoutRange
                                    literalPattern
                                      3
                            =>
                            matchArmExpression
                              expression
                                pathExpression
                                  pathInExpression
                                    pathExprSegment
                                      pathIdentSegment
                                        identifier
                                          MemoryType
                                    ::
                                    pathExprSegment
                                      pathIdentSegment
                                        identifier
                                          DeviceMemory
                              ,
                            matchArm
                              pattern
                                patternNoTopAlt
                                  patternWithoutRange
                                    wildcardPattern
                                      _
                            =>
                            expression
                              return
                              expression
                                pathExpression
                                  pathInExpression
                                    pathExprSegment
                                      pathIdentSegment
                                        identifier
                                          None
                            ,
                          }
                    ,
                    expression
                      expression
                        pathExpression
                          pathInExpression
                            pathExprSegment
                              pathIdentSegment
                                identifier
                                  HandleFlags
                            ::
                            pathExprSegment
                              pathIdentSegment
                                identifier
                                  from_bits_truncate
                      (
                      callParams
                        expression
                          expression
                            (
                            expression
                              expression
                                pathExpression
                                  pathInExpression
                                    pathExprSegment
                                      pathIdentSegment
                                        identifier
                                          raw
                              shr
                                >
                                >
                              expression
                                literalExpression
                                  16
                            )
                          as
                          typeNoBounds
                            traitObjectTypeOneBound
                              traitBound
                                typePath
                                  typePathSegment
                                    pathIdentSegment
                                      identifier
                                        u16
                      )
                    ,
                  )
              )
          }
  item
    visItem
      implementation
        inherentImpl
          impl
          type_
            typeNoBounds
              traitObjectTypeOneBound
                traitBound
                  typePath
                    typePathSegment
                      pathIdentSegment
                        identifier
                          MemoryScheme
          {
          associatedItem
            visibility
              pub
            function_
              functionQualifiers
              fn
              identifier
                fmap_anonymous
              (
              functionParameters
                functionParam
                  functionParamPattern
                    pattern
                      patternNoTopAlt
                        patternWithoutRange
                          identifierPattern
                            identifier
                              addr_space
                    :
                    type_
                      typeNoBounds
                        referenceType
                          &
                          typeNoBounds
                            traitObjectTypeOneBound
                              traitBound
                                typePath
                                  typePathSegment
                                    pathIdentSegment
                                      identifier
                                        Arc
                                    genericArgs
                                      <
                                      genericArgsTypes
                                        type_
                                          typeNoBounds
                                            traitObjectTypeOneBound
                                              traitBound
                                                typePath
                                                  typePathSegment
                                                    pathIdentSegment
                                                      identifier
                                                        AddrSpaceWrapper
                                      >
                ,
                functionParam
                  functionParamPattern
                    pattern
                      patternNoTopAlt
                        patternWithoutRange
                          identifierPattern
                            identifier
                              map
                    :
                    type_
                      typeNoBounds
                        referenceType
                          &
                          typeNoBounds
                            traitObjectTypeOneBound
                              traitBound
                                typePath
                                  typePathSegment
                                    pathIdentSegment
                                      identifier
                                        Map
                ,
                functionParam
                  functionParamPattern
                    pattern
                      patternNoTopAlt
                        patternWithoutRange
                          identifierPattern
                            identifier
                              is_phys_contiguous
                    :
                    type_
                      typeNoBounds
                        traitObjectTypeOneBound
                          traitBound
                            typePath
                              typePathSegment
                                pathIdentSegment
                                  identifier
                                    bool
                ,
              )
              functionReturnType
                ->
                type_
                  typeNoBounds
                    traitObjectTypeOneBound
                      traitBound
                        typePath
                          typePathSegment
                            pathIdentSegment
                              identifier
                                Result
                            genericArgs
                              <
                              genericArgsTypes
                                type_
                                  typeNoBounds
                                    traitObjectTypeOneBound
                                      traitBound
                                        typePath
                                          typePathSegment
                                            pathIdentSegment
                                              identifier
                                                usize
                              >
              blockExpression
                {
                statements
                  statement
                    letStatement
                      let
                      patternNoTopAlt
                        patternWithoutRange
                          identifierPattern
                            identifier
                              span
                      =
                      expression
                        expression
                          expression
                            expression
                              pathExpression
                                pathInExpression
                                  pathExprSegment
                                    pathIdentSegment
                                      identifier
                                        PageSpan
                                  ::
                                  pathExprSegment
                                    pathIdentSegment
                                      identifier
                                        validate_nonempty
                            (
                            callParams
                              expression
                                expression
                                  pathExpression
                                    pathInExpression
                                      pathExprSegment
                                        pathIdentSegment
                                          identifier
                                            VirtualAddress
                                      ::
                                      pathExprSegment
                                        pathIdentSegment
                                          identifier
                                            new
                                (
                                callParams
                                  expression
                                    expression
                                      pathExpression
                                        pathInExpression
                                          pathExprSegment
                                            pathIdentSegment
                                              identifier
                                                map
                                    .
                                    identifier
                                      address
                                )
                              ,
                              expression
                                expression
                                  pathExpression
                                    pathInExpression
                                      pathExprSegment
                                        pathIdentSegment
                                          identifier
                                            map
                                .
                                identifier
                                  size
                            )
                          .
                          pathExprSegment
                            pathIdentSegment
                              identifier
                                ok_or
                          (
                          callParams
                            expression
                              expression
                                pathExpression
                                  pathInExpression
                                    pathExprSegment
                                      pathIdentSegment
                                        identifier
                                          Error
                                    ::
                                    pathExprSegment
                                      pathIdentSegment
                                        identifier
                                          new
                              (
                              callParams
                                expression
                                  pathExpression
                                    pathInExpression
                                      pathExprSegment
                                        pathIdentSegment
                                          identifier
                                            EINVAL
                              )
                          )
                        ?
                      ;
                  statement
                    letStatement
                      let
                      patternNoTopAlt
                        patternWithoutRange
                          identifierPattern
                            identifier
                              page_count
                      =
                      expression
                        expression
                          expression
                            expression
                              pathExpression
                                pathInExpression
                                  pathExprSegment
                                    pathIdentSegment
                                      identifier
                                        NonZeroUsize
                                  ::
                                  pathExprSegment
                                    pathIdentSegment
                                      identifier
                                        new
                            (
                            callParams
                              expression
                                expression
                                  pathExpression
                                    pathInExpression
                                      pathExprSegment
                                        pathIdentSegment
                                          identifier
                                            span
                                .
                                identifier
                                  count
                            )
                          .
                          pathExprSegment
                            pathIdentSegment
                              identifier
                                ok_or
                          (
                          callParams
                            expression
                              expression
                                pathExpression
                                  pathInExpression
                                    pathExprSegment
                                      pathIdentSegment
                                        identifier
                                          Error
                                    ::
                                    pathExprSegment
                                      pathIdentSegment
                                        identifier
                                          new
                              (
                              callParams
                                expression
                                  pathExpression
                                    pathInExpression
                                      pathExprSegment
                                        pathIdentSegment
                                          identifier
                                            EINVAL
                              )
                          )
                        ?
                      ;
                  statement
                    letStatement
                      let
                      patternNoTopAlt
                        patternWithoutRange
                          identifierPattern
                            mut
                            identifier
                              notify_files
                      =
                      expression
                        expression
                          pathExpression
                            pathInExpression
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    Vec
                              ::
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    new
                        (
                        )
                      ;
                  statement
                    expressionStatement
                      expressionWithBlock
                        ifExpression
                          if
                          expression
                            expression
                              pathExpression
                                pathInExpression
                                  pathExprSegment
                                    pathIdentSegment
                                      identifier
                                        is_phys_contiguous
                            &&
                            expression
                              expression
                                expression
                                  pathExpression
                                    pathInExpression
                                      pathExprSegment
                                        pathIdentSegment
                                          identifier
                                            map
                                .
                                identifier
                                  flags
                              .
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    contains
                              (
                              callParams
                                expression
                                  pathExpression
                                    pathInExpression
                                      pathExprSegment
                                        pathIdentSegment
                                          identifier
                                            MapFlags
                                      ::
                                      pathExprSegment
                                        pathIdentSegment
                                          identifier
                                            MAP_SHARED
                              )
                          blockExpression
                            {
                            statements
                              statement
                                expressionStatement
                                  expression
                                    return
                                    expression
                                      expression
                                        pathExpression
                                          pathInExpression
                                            pathExprSegment
                                              pathIdentSegment
                                                identifier
                                                  Err
                                      (
                                      callParams
                                        expression
                                          expression
                                            pathExpression
                                              pathInExpression
                                                pathExprSegment
                                                  pathIdentSegment
                                                    identifier
                                                      Error
                                                ::
                                                pathExprSegment
                                                  pathIdentSegment
                                                    identifier
                                                      new
                                          (
                                          callParams
                                            expression
                                              pathExpression
                                                pathInExpression
                                                  pathExprSegment
                                                    pathIdentSegment
                                                      identifier
                                                        EOPNOTSUPP
                                          )
                                      )
                                  ;
                            }
                  statement
                    letStatement
                      let
                      patternNoTopAlt
                        patternWithoutRange
                          identifierPattern
                            identifier
                              page
                      =
                      expression
                        expression
                          expression
                            expression
                              pathExpression
                                pathInExpression
                                  pathExprSegment
                                    pathIdentSegment
                                      identifier
                                        addr_space
                            .
                            pathExprSegment
                              pathIdentSegment
                                identifier
                                  acquire_write
                            (
                            )
                          .
                          pathExprSegment
                            pathIdentSegment
                              identifier
                                mmap
                          (
                          callParams
                            expression
                              &
                              expression
                                pathExpression
                                  pathInExpression
                                    pathExprSegment
                                      pathIdentSegment
                                        identifier
                                          addr_space
                            ,
                            expression
                              expression
                                (
                                expression
                                  expression
                                    expression
                                      pathExpression
                                        pathInExpression
                                          pathExprSegment
                                            pathIdentSegment
                                              identifier
                                                map
                                    .
                                    identifier
                                      address
                                  comparisonOperator
                                    !=
                                  expression
                                    literalExpression
                                      0
                                )
                              .
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    then_some
                              (
                              callParams
                                expression
                                  expression
                                    pathExpression
                                      pathInExpression
                                        pathExprSegment
                                          pathIdentSegment
                                            identifier
                                              span
                                  .
                                  identifier
                                    base
                              )
                            ,
                            expression
                              pathExpression
                                pathInExpression
                                  pathExprSegment
                                    pathIdentSegment
                                      identifier
                                        page_count
                            ,
                            expression
                              expression
                                pathExpression
                                  pathInExpression
                                    pathExprSegment
                                      pathIdentSegment
                                        identifier
                                          map
                              .
                              identifier
                                flags
                            ,
                            expression
                              &
                              mut
                              expression
                                pathExpression
                                  pathInExpression
                                    pathExprSegment
                                      pathIdentSegment
                                        identifier
                                          notify_files
                            ,
                            expression
                              closureExpression
                                |
                                closureParameters
                                  closureParam
                                    pattern
                                      patternNoTopAlt
                                        patternWithoutRange
                                          identifierPattern
                                            identifier
                                              dst_page
                                  ,
                                  closureParam
                                    pattern
                                      patternNoTopAlt
                                        patternWithoutRange
                                          identifierPattern
                                            identifier
                                              flags
                                  ,
                                  closureParam
                                    pattern
                                      patternNoTopAlt
                                        patternWithoutRange
                                          identifierPattern
                                            identifier
                                              mapper
                                  ,
                                  closureParam
                                    pattern
                                      patternNoTopAlt
                                        patternWithoutRange
                                          identifierPattern
                                            identifier
                                              flusher
                                |
                                expression
                                  expressionWithBlock
                                    blockExpression
                                      {
                                      statements
                                        statement
                                          letStatement
                                            let
                                            patternNoTopAlt
                                              patternWithoutRange
                                                identifierPattern
                                                  identifier
                                                    span
                                            =
                                            expression
                                              expression
                                                pathExpression
                                                  pathInExpression
                                                    pathExprSegment
                                                      pathIdentSegment
                                                        identifier
                                                          PageSpan
                                                    ::
                                                    pathExprSegment
                                                      pathIdentSegment
                                                        identifier
                                                          new
                                              (
                                              callParams
                                                expression
                                                  pathExpression
                                                    pathInExpression
                                                      pathExprSegment
                                                        pathIdentSegment
                                                          identifier
                                                            dst_page
                                                ,
                                                expression
                                                  expression
                                                    pathExpression
                                                      pathInExpression
                                                        pathExprSegment
                                                          pathIdentSegment
                                                            identifier
                                                              page_count
                                                  .
                                                  pathExprSegment
                                                    pathIdentSegment
                                                      identifier
                                                        get
                                                  (
                                                  )
                                              )
                                            ;
                                        statement
                                          expressionStatement
                                            expressionWithBlock
                                              ifExpression
                                                if
                                                expression
                                                  pathExpression
                                                    pathInExpression
                                                      pathExprSegment
                                                        pathIdentSegment
                                                          identifier
                                                            is_phys_contiguous
                                                blockExpression
                                                  {
                                                  statements
                                                    expression
                                                      expression
                                                        pathExpression
                                                          pathInExpression
                                                            pathExprSegment
                                                              pathIdentSegment
                                                                identifier
                                                                  Ok
                                                      (
                                                      callParams
                                                        expression
                                                          expression
                                                            expression
                                                              pathExpression
                                                                pathInExpression
                                                                  pathExprSegment
                                                                    pathIdentSegment
                                                                      identifier
                                                                        Grant
                                                                  ::
                                                                  pathExprSegment
                                                                    pathIdentSegment
                                                                      identifier
                                                                        zeroed_phys_contiguous
                                                            (
                                                            callParams
                                                              expression
                                                                pathExpression
                                                                  pathInExpression
                                                                    pathExprSegment
                                                                      pathIdentSegment
                                                                        identifier
                                                                          span
                                                              ,
                                                              expression
                                                                pathExpression
                                                                  pathInExpression
                                                                    pathExprSegment
                                                                      pathIdentSegment
                                                                        identifier
                                                                          flags
                                                              ,
                                                              expression
                                                                pathExpression
                                                                  pathInExpression
                                                                    pathExprSegment
                                                                      pathIdentSegment
                                                                        identifier
                                                                          mapper
                                                              ,
                                                              expression
                                                                pathExpression
                                                                  pathInExpression
                                                                    pathExprSegment
                                                                      pathIdentSegment
                                                                        identifier
                                                                          flusher
                                                            )
                                                          ?
                                                      )
                                                  }
                                                else
                                                blockExpression
                                                  {
                                                  statements
                                                    expression
                                                      expression
                                                        pathExpression
                                                          pathInExpression
                                                            pathExprSegment
                                                              pathIdentSegment
                                                                identifier
                                                                  Ok
                                                      (
                                                      callParams
                                                        expression
                                                          expression
                                                            expression
                                                              pathExpression
                                                                pathInExpression
                                                                  pathExprSegment
                                                                    pathIdentSegment
                                                                      identifier
                                                                        Grant
                                                                  ::
                                                                  pathExprSegment
                                                                    pathIdentSegment
                                                                      identifier
                                                                        zeroed
                                                            (
                                                            callParams
                                                              expression
                                                                pathExpression
                                                                  pathInExpression
                                                                    pathExprSegment
                                                                      pathIdentSegment
                                                                        identifier
                                                                          span
                                                              ,
                                                              expression
                                                                pathExpression
                                                                  pathInExpression
                                                                    pathExprSegment
                                                                      pathIdentSegment
                                                                        identifier
                                                                          flags
                                                              ,
                                                              expression
                                                                pathExpression
                                                                  pathInExpression
                                                                    pathExprSegment
                                                                      pathIdentSegment
                                                                        identifier
                                                                          mapper
                                                              ,
                                                              expression
                                                                pathExpression
                                                                  pathInExpression
                                                                    pathExprSegment
                                                                      pathIdentSegment
                                                                        identifier
                                                                          flusher
                                                              ,
                                                              expression
                                                                expression
                                                                  expression
                                                                    pathExpression
                                                                      pathInExpression
                                                                        pathExprSegment
                                                                          pathIdentSegment
                                                                            identifier
                                                                              map
                                                                  .
                                                                  identifier
                                                                    flags
                                                                .
                                                                pathExprSegment
                                                                  pathIdentSegment
                                                                    identifier
                                                                      contains
                                                                (
                                                                callParams
                                                                  expression
                                                                    pathExpression
                                                                      pathInExpression
                                                                        pathExprSegment
                                                                          pathIdentSegment
                                                                            identifier
                                                                              MapFlags
                                                                        ::
                                                                        pathExprSegment
                                                                          pathIdentSegment
                                                                            identifier
                                                                              MAP_SHARED
                                                                )
                                                              ,
                                                            )
                                                          ?
                                                      )
                                                  }
                                      }
                            ,
                          )
                        ?
                      ;
                  statement
                    expressionStatement
                      expression
                        expression
                          pathExpression
                            pathInExpression
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    handle_notify_files
                        (
                        callParams
                          expression
                            pathExpression
                              pathInExpression
                                pathExprSegment
                                  pathIdentSegment
                                    identifier
                                      notify_files
                        )
                      ;
                  expression
                    expression
                      pathExpression
                        pathInExpression
                          pathExprSegment
                            pathIdentSegment
                              identifier
                                Ok
                    (
                    callParams
                      expression
                        expression
                          expression
                            pathExpression
                              pathInExpression
                                pathExprSegment
                                  pathIdentSegment
                                    identifier
                                      page
                          .
                          pathExprSegment
                            pathIdentSegment
                              identifier
                                start_address
                          (
                          )
                        .
                        pathExprSegment
                          pathIdentSegment
                            identifier
                              data
                        (
                        )
                    )
                }
          associatedItem
            visibility
              pub
            function_
              functionQualifiers
              fn
              identifier
                physmap
              (
              functionParameters
                functionParam
                  functionParamPattern
                    pattern
                      patternNoTopAlt
                        patternWithoutRange
                          identifierPattern
                            identifier
                              physical_address
                    :
                    type_
                      typeNoBounds
                        traitObjectTypeOneBound
                          traitBound
                            typePath
                              typePathSegment
                                pathIdentSegment
                                  identifier
                                    usize
                ,
                functionParam
                  functionParamPattern
                    pattern
                      patternNoTopAlt
                        patternWithoutRange
                          identifierPattern
                            identifier
                              size
                    :
                    type_
                      typeNoBounds
                        traitObjectTypeOneBound
                          traitBound
                            typePath
                              typePathSegment
                                pathIdentSegment
                                  identifier
                                    usize
                ,
                functionParam
                  functionParamPattern
                    pattern
                      patternNoTopAlt
                        patternWithoutRange
                          identifierPattern
                            identifier
                              flags
                    :
                    type_
                      typeNoBounds
                        traitObjectTypeOneBound
                          traitBound
                            typePath
                              typePathSegment
                                pathIdentSegment
                                  identifier
                                    MapFlags
                ,
                functionParam
                  functionParamPattern
                    pattern
                      patternNoTopAlt
                        patternWithoutRange
                          identifierPattern
                            identifier
                              memory_type
                    :
                    type_
                      typeNoBounds
                        traitObjectTypeOneBound
                          traitBound
                            typePath
                              typePathSegment
                                pathIdentSegment
                                  identifier
                                    MemoryType
                ,
              )
              functionReturnType
                ->
                type_
                  typeNoBounds
                    traitObjectTypeOneBound
                      traitBound
                        typePath
                          typePathSegment
                            pathIdentSegment
                              identifier
                                Result
                            genericArgs
                              <
                              genericArgsTypes
                                type_
                                  typeNoBounds
                                    traitObjectTypeOneBound
                                      traitBound
                                        typePath
                                          typePathSegment
                                            pathIdentSegment
                                              identifier
                                                usize
                              >
              blockExpression
                {
                statements
                  statement
                    letStatement
                      let
                      patternNoTopAlt
                        patternWithoutRange
                          identifierPattern
                            identifier
                              end
                      =
                      expression
                        expression
                          literalExpression
                            1
                        shl
                          <
                        expression
                          pathExpression
                            qualifiedPathInExpression
                              qualifiedPathType
                                <
                                type_
                                  52
                      ;
                  statement
                    expressionStatement
                      expressionWithBlock
                        ifExpression
                          if
                          expression
                            expression
                              expression
                                (
                                expression
                                  expression
                                    expression
                                      pathExpression
                                        pathInExpression
                                          pathExprSegment
                                            pathIdentSegment
                                              identifier
                                                physical_address
                                    .
                                    pathExprSegment
                                      pathIdentSegment
                                        identifier
                                          saturating_add
                                    (
                                    callParams
                                      expression
                                        pathExpression
                                          pathInExpression
                                            pathExprSegment
                                              pathIdentSegment
                                                identifier
                                                  size
                                    )
                                  as
                                  typeNoBounds
                                    traitObjectTypeOneBound
                                      traitBound
                                        typePath
                                          typePathSegment
                                            pathIdentSegment
                                              identifier
                                                u64
                                )
                              comparisonOperator
                                >
                              expression
                                pathExpression
                                  pathInExpression
                                    pathExprSegment
                                      pathIdentSegment
                                        identifier
                                          end
                            ||
                            expression
                              expression
                                expression
                                  pathExpression
                                    pathInExpression
                                      pathExprSegment
                                        pathIdentSegment
                                          identifier
                                            physical_address
                                %
                                expression
                                  pathExpression
                                    pathInExpression
                                      pathExprSegment
                                        pathIdentSegment
                                          identifier
                                            PAGE_SIZE
                              comparisonOperator
                                !=
                              expression
                                literalExpression
                                  0
                          blockExpression
                            {
                            statements
                              statement
                                expressionStatement
                                  expression
                                    return
                                    expression
                                      expression
                                        pathExpression
                                          pathInExpression
                                            pathExprSegment
                                              pathIdentSegment
                                                identifier
                                                  Err
                                      (
                                      callParams
                                        expression
                                          expression
                                            pathExpression
                                              pathInExpression
                                                pathExprSegment
                                                  pathIdentSegment
                                                    identifier
                                                      Error
                                                ::
                                                pathExprSegment
                                                  pathIdentSegment
                                                    identifier
                                                      new
                                          (
                                          callParams
                                            expression
                                              pathExpression
                                                pathInExpression
                                                  pathExprSegment
                                                    pathIdentSegment
                                                      identifier
                                                        EINVAL
                                          )
                                      )
                                  ;
                            }
                  statement
                    expressionStatement
                      expressionWithBlock
                        ifExpression
                          if
                          expression
                            expression
                              expression
                                pathExpression
                                  pathInExpression
                                    pathExprSegment
                                      pathIdentSegment
                                        identifier
                                          size
                              %
                              expression
                                pathExpression
                                  pathInExpression
                                    pathExprSegment
                                      pathIdentSegment
                                        identifier
                                          PAGE_SIZE
                            comparisonOperator
                              !=
                            expression
                              literalExpression
                                0
                          blockExpression
                            {
                            statements
                              statement
                                item
                                  macroItem
                                    macroInvocationSemi
                                      simplePath
                                        simplePathSegment
                                          identifier
                                            log
                                        ::
                                        simplePathSegment
                                          identifier
                                            warn
                                      !
                                      (
                                      tokenTree
                                        tokenTreeToken
                                          macroLiteralToken
                                            literalExpression
                                              "physmap size {} is not multiple of PAGE_SIZE {}"
                                        tokenTreeToken
                                          macroPunctuationToken
                                            ,
                                        tokenTreeToken
                                          macroIdentifierLikeToken
                                            identifier
                                              size
                                        tokenTreeToken
                                          macroPunctuationToken
                                            ,
                                        tokenTreeToken
                                          macroIdentifierLikeToken
                                            identifier
                                              PAGE_SIZE
                                      )
                                      ;
                              statement
                                expressionStatement
                                  expression
                                    return
                                    expression
                                      expression
                                        pathExpression
                                          pathInExpression
                                            pathExprSegment
                                              pathIdentSegment
                                                identifier
                                                  Err
                                      (
                                      callParams
                                        expression
                                          expression
                                            pathExpression
                                              pathInExpression
                                                pathExprSegment
                                                  pathIdentSegment
                                                    identifier
                                                      Error
                                                ::
                                                pathExprSegment
                                                  pathIdentSegment
                                                    identifier
                                                      new
                                          (
                                          callParams
                                            expression
                                              pathExpression
                                                pathInExpression
                                                  pathExprSegment
                                                    pathIdentSegment
                                                      identifier
                                                        EINVAL
                                          )
                                      )
                                  ;
                            }
                  statement
                    letStatement
                      let
                      patternNoTopAlt
                        patternWithoutRange
                          identifierPattern
                            identifier
                              page_count
                      =
                      expression
                        expression
                          expression
                            expression
                              pathExpression
                                pathInExpression
                                  pathExprSegment
                                    pathIdentSegment
                                      identifier
                                        NonZeroUsize
                                  ::
                                  pathExprSegment
                                    pathIdentSegment
                                      identifier
                                        new
                            (
                            callParams
                              expression
                                expression
                                  pathExpression
                                    pathInExpression
                                      pathExprSegment
                                        pathIdentSegment
                                          identifier
                                            size
                                .
                                pathExprSegment
                                  pathIdentSegment
                                    identifier
                                      div_ceil
                                (
                                callParams
                                  expression
                                    pathExpression
                                      pathInExpression
                                        pathExprSegment
                                          pathIdentSegment
                                            identifier
                                              PAGE_SIZE
                                )
                            )
                          .
                          pathExprSegment
                            pathIdentSegment
                              identifier
                                ok_or
                          (
                          callParams
                            expression
                              expression
                                pathExpression
                                  pathInExpression
                                    pathExprSegment
                                      pathIdentSegment
                                        identifier
                                          Error
                                    ::
                                    pathExprSegment
                                      pathIdentSegment
                                        identifier
                                          new
                              (
                              callParams
                                expression
                                  pathExpression
                                    pathInExpression
                                      pathExprSegment
                                        pathIdentSegment
                                          identifier
                                            EINVAL
                              )
                          )
                        ?
                      ;
                  statement
                    letStatement
                      let
                      patternNoTopAlt
                        patternWithoutRange
                          identifierPattern
                            identifier
                              current_addrsp
                      =
                      expression
                        expression
                          expression
                            pathExpression
                              pathInExpression
                                pathExprSegment
                                  pathIdentSegment
                                    identifier
                                      AddrSpace
                                ::
                                pathExprSegment
                                  pathIdentSegment
                                    identifier
                                      current
                          (
                          )
                        ?
                      ;
                  statement
                    letStatement
                      let
                      patternNoTopAlt
                        patternWithoutRange
                          identifierPattern
                            identifier
                              base_page
                      =
                      expression
                        expression
                          expression
                            expression
                              pathExpression
                                pathInExpression
                                  pathExprSegment
                                    pathIdentSegment
                                      identifier
                                        current_addrsp
                            .
                            pathExprSegment
                              pathIdentSegment
                                identifier
                                  acquire_write
                            (
                            )
                          .
                          pathExprSegment
                            pathIdentSegment
                              identifier
                                mmap_anywhere
                          (
                          callParams
                            expression
                              &
                              expression
                                pathExpression
                                  pathInExpression
                                    pathExprSegment
                                      pathIdentSegment
                                        identifier
                                          current_addrsp
                            ,
                            expression
                              pathExpression
                                pathInExpression
                                  pathExprSegment
                                    pathIdentSegment
                                      identifier
                                        page_count
                            ,
                            expression
                              pathExpression
                                pathInExpression
                                  pathExprSegment
                                    pathIdentSegment
                                      identifier
                                        flags
                            ,
                            expression
                              closureExpression
                                |
                                closureParameters
                                  closureParam
                                    pattern
                                      patternNoTopAlt
                                        patternWithoutRange
                                          identifierPattern
                                            identifier
                                              dst_page
                                  ,
                                  closureParam
                                    pattern
                                      patternNoTopAlt
                                        patternWithoutRange
                                          identifierPattern
                                            mut
                                            identifier
                                              page_flags
                                  ,
                                  closureParam
                                    pattern
                                      patternNoTopAlt
                                        patternWithoutRange
                                          identifierPattern
                                            identifier
                                              dst_mapper
                                  ,
                                  closureParam
                                    pattern
                                      patternNoTopAlt
                                        patternWithoutRange
                                          identifierPattern
                                            identifier
                                              dst_flusher
                                |
                                expression
                                  expressionWithBlock
                                    blockExpression
                                      {
                                      statements
                                        statement
                                          expressionStatement
                                            expressionWithBlock
                                              matchExpression
                                                match
                                                expression
                                                  pathExpression
                                                    pathInExpression
                                                      pathExprSegment
                                                        pathIdentSegment
                                                          identifier
                                                            memory_type
                                                {
                                                matchArms
                                                  matchArm
                                                    pattern
                                                      patternNoTopAlt
                                                        patternWithoutRange
                                                          pathPattern
                                                            pathInExpression
                                                              pathExprSegment
                                                                pathIdentSegment
                                                                  identifier
                                                                    MemoryType
                                                              ::
                                                              pathExprSegment
                                                                pathIdentSegment
                                                                  identifier
                                                                    Writeback
                                                  =>
                                                  matchArmExpression
                                                    expression
                                                      (
                                                      )
                                                    ,
                                                  matchArm
                                                    outerAttribute
                                                      #
                                                      [
                                                      attr
                                                        simplePath
                                                          simplePathSegment
                                                            identifier
                                                              cfg
                                                        attrInput
                                                          delimTokenTree
                                                            (
                                                            tokenTree
                                                              tokenTreeToken
                                                                macroIdentifierLikeToken
                                                                  identifier
                                                                    any
                                                            tokenTree
                                                              delimTokenTree
                                                                (
                                                                tokenTree
                                                                  tokenTreeToken
                                                                    macroIdentifierLikeToken
                                                                      identifier
                                                                        target_arch
                                                                  tokenTreeToken
                                                                    macroPunctuationToken
                                                                      =
                                                                  tokenTreeToken
                                                                    macroLiteralToken
                                                                      literalExpression
                                                                        "x86"
                                                                  tokenTreeToken
                                                                    macroPunctuationToken
                                                                      ,
                                                                  tokenTreeToken
                                                                    macroIdentifierLikeToken
                                                                      identifier
                                                                        target_arch
                                                                  tokenTreeToken
                                                                    macroPunctuationToken
                                                                      =
                                                                  tokenTreeToken
                                                                    macroLiteralToken
                                                                      literalExpression
                                                                        "x86_64"
                                                                )
                                                            )
                                                      ]
                                                    pattern
                                                      patternNoTopAlt
                                                        patternWithoutRange
                                                          pathPattern
                                                            pathInExpression
                                                              pathExprSegment
                                                                pathIdentSegment
                                                                  identifier
                                                                    MemoryType
                                                              ::
                                                              pathExprSegment
                                                                pathIdentSegment
                                                                  identifier
                                                                    WriteCombining
                                                  =>
                                                  matchArmExpression
                                                    expressionWithBlock
                                                      blockExpression
                                                        {
                                                        statements
                                                          expression
                                                            expression
                                                              pathExpression
                                                                pathInExpression
                                                                  pathExprSegment
                                                                    pathIdentSegment
                                                                      identifier
                                                                        page_flags
                                                            =
                                                            expression
                                                              expression
                                                                pathExpression
                                                                  pathInExpression
                                                                    pathExprSegment
                                                                      pathIdentSegment
                                                                        identifier
                                                                          page_flags
                                                              .
                                                              pathExprSegment
                                                                pathIdentSegment
                                                                  identifier
                                                                    custom_flag
                                                              (
                                                              callParams
                                                                expression
                                                                  expression
                                                                    pathExpression
                                                                      pathInExpression
                                                                        pathExprSegment
                                                                          pathIdentSegment
                                                                            identifier
                                                                              EntryFlags
                                                                        ::
                                                                        pathExprSegment
                                                                          pathIdentSegment
                                                                            identifier
                                                                              HUGE_PAGE
                                                                  .
                                                                  pathExprSegment
                                                                    pathIdentSegment
                                                                      identifier
                                                                        bits
                                                                  (
                                                                  )
                                                                ,
                                                                expression
                                                                  literalExpression
                                                                    true
                                                              )
                                                        }
                                                  matchArm
                                                    pattern
                                                      patternNoTopAlt
                                                        patternWithoutRange
                                                          pathPattern
                                                            pathInExpression
                                                              pathExprSegment
                                                                pathIdentSegment
                                                                  identifier
                                                                    MemoryType
                                                              ::
                                                              pathExprSegment
                                                                pathIdentSegment
                                                                  identifier
                                                                    Uncacheable
                                                  =>
                                                  matchArmExpression
                                                    expressionWithBlock
                                                      blockExpression
                                                        {
                                                        statements
                                                          expression
                                                            expression
                                                              pathExpression
                                                                pathInExpression
                                                                  pathExprSegment
                                                                    pathIdentSegment
                                                                      identifier
                                                                        page_flags
                                                            =
                                                            expression
                                                              expression
                                                                pathExpression
                                                                  pathInExpression
                                                                    pathExprSegment
                                                                      pathIdentSegment
                                                                        identifier
                                                                          page_flags
                                                              .
                                                              pathExprSegment
                                                                pathIdentSegment
                                                                  identifier
                                                                    custom_flag
                                                              (
                                                              callParams
                                                                expression
                                                                  expression
                                                                    pathExpression
                                                                      pathInExpression
                                                                        pathExprSegment
                                                                          pathIdentSegment
                                                                            identifier
                                                                              EntryFlags
                                                                        ::
                                                                        pathExprSegment
                                                                          pathIdentSegment
                                                                            identifier
                                                                              NO_CACHE
                                                                  .
                                                                  pathExprSegment
                                                                    pathIdentSegment
                                                                      identifier
                                                                        bits
                                                                  (
                                                                  )
                                                                ,
                                                                expression
                                                                  literalExpression
                                                                    true
                                                              )
                                                        }
                                                  matchArm
                                                    outerAttribute
                                                      #
                                                      [
                                                      attr
                                                        simplePath
                                                          simplePathSegment
                                                            identifier
                                                              cfg
                                                        attrInput
                                                          delimTokenTree
                                                            (
                                                            tokenTree
                                                              tokenTreeToken
                                                                macroIdentifierLikeToken
                                                                  identifier
                                                                    target_arch
                                                              tokenTreeToken
                                                                macroPunctuationToken
                                                                  =
                                                              tokenTreeToken
                                                                macroLiteralToken
                                                                  literalExpression
                                                                    "aarch64"
                                                            )
                                                      ]
                                                    pattern
                                                      patternNoTopAlt
                                                        patternWithoutRange
                                                          pathPattern
                                                            pathInExpression
                                                              pathExprSegment
                                                                pathIdentSegment
                                                                  identifier
                                                                    MemoryType
                                                              ::
                                                              pathExprSegment
                                                                pathIdentSegment
                                                                  identifier
                                                                    DeviceMemory
                                                  =>
                                                  matchArmExpression
                                                    expressionWithBlock
                                                      blockExpression
                                                        {
                                                        statements
                                                          expression
                                                            expression
                                                              pathExpression
                                                                pathInExpression
                                                                  pathExprSegment
                                                                    pathIdentSegment
                                                                      identifier
                                                                        page_flags
                                                            =
                                                            expression
                                                              expression
                                                                pathExpression
                                                                  pathInExpression
                                                                    pathExprSegment
                                                                      pathIdentSegment
                                                                        identifier
                                                                          page_flags
                                                              .
                                                              pathExprSegment
                                                                pathIdentSegment
                                                                  identifier
                                                                    custom_flag
                                                              (
                                                              callParams
                                                                expression
                                                                  expression
                                                                    pathExpression
                                                                      pathInExpression
                                                                        pathExprSegment
                                                                          pathIdentSegment
                                                                            identifier
                                                                              EntryFlags
                                                                        ::
                                                                        pathExprSegment
                                                                          pathIdentSegment
                                                                            identifier
                                                                              DEV_MEM
                                                                  .
                                                                  pathExprSegment
                                                                    pathIdentSegment
                                                                      identifier
                                                                        bits
                                                                  (
                                                                  )
                                                                ,
                                                                expression
                                                                  literalExpression
                                                                    true
                                                              )
                                                        }
                                                  matchArm
                                                    pattern
                                                      patternNoTopAlt
                                                        patternWithoutRange
                                                          wildcardPattern
                                                            _
                                                  =>
                                                  expression
                                                    (
                                                    )
                                                  ,
                                                }
                                        expression
                                          expression
                                            pathExpression
                                              pathInExpression
                                                pathExprSegment
                                                  pathIdentSegment
                                                    identifier
                                                      Grant
                                                ::
                                                pathExprSegment
                                                  pathIdentSegment
                                                    identifier
                                                      physmap
                                          (
                                          callParams
                                            expression
                                              expression
                                                pathExpression
                                                  pathInExpression
                                                    pathExprSegment
                                                      pathIdentSegment
                                                        identifier
                                                          Frame
                                                    ::
                                                    pathExprSegment
                                                      pathIdentSegment
                                                        identifier
                                                          containing
                                              (
                                              callParams
                                                expression
                                                  expression
                                                    pathExpression
                                                      pathInExpression
                                                        pathExprSegment
                                                          pathIdentSegment
                                                            identifier
                                                              PhysicalAddress
                                                        ::
                                                        pathExprSegment
                                                          pathIdentSegment
                                                            identifier
                                                              new
                                                  (
                                                  callParams
                                                    expression
                                                      pathExpression
                                                        pathInExpression
                                                          pathExprSegment
                                                            pathIdentSegment
                                                              identifier
                                                                physical_address
                                                  )
                                              )
                                            ,
                                            expression
                                              expression
                                                pathExpression
                                                  pathInExpression
                                                    pathExprSegment
                                                      pathIdentSegment
                                                        identifier
                                                          PageSpan
                                                    ::
                                                    pathExprSegment
                                                      pathIdentSegment
                                                        identifier
                                                          new
                                              (
                                              callParams
                                                expression
                                                  pathExpression
                                                    pathInExpression
                                                      pathExprSegment
                                                        pathIdentSegment
                                                          identifier
                                                            dst_page
                                                ,
                                                expression
                                                  expression
                                                    pathExpression
                                                      pathInExpression
                                                        pathExprSegment
                                                          pathIdentSegment
                                                            identifier
                                                              page_count
                                                  .
                                                  pathExprSegment
                                                    pathIdentSegment
                                                      identifier
                                                        get
                                                  (
                                                  )
                                              )
                                            ,
                                            expression
                                              pathExpression
                                                pathInExpression
                                                  pathExprSegment
                                                    pathIdentSegment
                                                      identifier
                                                        page_flags
                                            ,
                                            expression
                                              pathExpression
                                                pathInExpression
                                                  pathExprSegment
                                                    pathIdentSegment
                                                      identifier
                                                        dst_mapper
                                            ,
                                            expression
                                              pathExpression
                                                pathInExpression
                                                  pathExprSegment
                                                    pathIdentSegment
                                                      identifier
                                                        dst_flusher
                                            ,
                                          )
                                      }
                            ,
                          )
                        ?
                      ;
                  expression
                    expression
                      pathExpression
                        pathInExpression
                          pathExprSegment
                            pathIdentSegment
                              identifier
                                Ok
                    (
                    callParams
                      expression
                        expression
                          expression
                            pathExpression
                              pathInExpression
                                pathExprSegment
                                  pathIdentSegment
                                    identifier
                                      base_page
                          .
                          pathExprSegment
                            pathIdentSegment
                              identifier
                                start_address
                          (
                          )
                        .
                        pathExprSegment
                          pathIdentSegment
                            identifier
                              data
                        (
                        )
                    )
                }
          }
  item
    visItem
      implementation
        traitImpl
          impl
          typePath
            typePathSegment
              pathIdentSegment
                identifier
                  KernelScheme
          for
          type_
            typeNoBounds
              traitObjectTypeOneBound
                traitBound
                  typePath
                    typePathSegment
                      pathIdentSegment
                        identifier
                          MemoryScheme
          {
          associatedItem
            function_
              functionQualifiers
              fn
              identifier
                kopen
              (
              functionParameters
                selfParam
                  shorthandSelf
                    &
                    self
                ,
                functionParam
                  functionParamPattern
                    pattern
                      patternNoTopAlt
                        patternWithoutRange
                          identifierPattern
                            identifier
                              path
                    :
                    type_
                      typeNoBounds
                        referenceType
                          &
                          typeNoBounds
                            traitObjectTypeOneBound
                              traitBound
                                typePath
                                  typePathSegment
                                    pathIdentSegment
                                      identifier
                                        str
                ,
                functionParam
                  functionParamPattern
                    pattern
                      patternNoTopAlt
                        patternWithoutRange
                          identifierPattern
                            identifier
                              _flags
                    :
                    type_
                      typeNoBounds
                        traitObjectTypeOneBound
                          traitBound
                            typePath
                              typePathSegment
                                pathIdentSegment
                                  identifier
                                    usize
                ,
                functionParam
                  functionParamPattern
                    pattern
                      patternNoTopAlt
                        patternWithoutRange
                          identifierPattern
                            identifier
                              ctx
                    :
                    type_
                      typeNoBounds
                        traitObjectTypeOneBound
                          traitBound
                            typePath
                              typePathSegment
                                pathIdentSegment
                                  identifier
                                    CallerCtx
              )
              functionReturnType
                ->
                type_
                  typeNoBounds
                    traitObjectTypeOneBound
                      traitBound
                        typePath
                          typePathSegment
                            pathIdentSegment
                              identifier
                                Result
                            genericArgs
                              <
                              genericArgsTypes
                                type_
                                  typeNoBounds
                                    traitObjectTypeOneBound
                                      traitBound
                                        typePath
                                          typePathSegment
                                            pathIdentSegment
                                              identifier
                                                OpenResult
                              >
              blockExpression
                {
                statements
                  statement
                    expressionStatement
                      expressionWithBlock
                        ifExpression
                          if
                          expression
                            expression
                              expression
                                pathExpression
                                  pathInExpression
                                    pathExprSegment
                                      pathIdentSegment
                                        identifier
                                          path
                              .
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    len
                              (
                              )
                            comparisonOperator
                              >
                            expression
                              literalExpression
                                64
                          blockExpression
                            {
                            statements
                              statement
                                expressionStatement
                                  expression
                                    return
                                    expression
                                      expression
                                        pathExpression
                                          pathInExpression
                                            pathExprSegment
                                              pathIdentSegment
                                                identifier
                                                  Err
                                      (
                                      callParams
                                        expression
                                          expression
                                            pathExpression
                                              pathInExpression
                                                pathExprSegment
                                                  pathIdentSegment
                                                    identifier
                                                      Error
                                                ::
                                                pathExprSegment
                                                  pathIdentSegment
                                                    identifier
                                                      new
                                          (
                                          callParams
                                            expression
                                              pathExpression
                                                pathInExpression
                                                  pathExprSegment
                                                    pathIdentSegment
                                                      identifier
                                                        ENOENT
                                          )
                                      )
                                  ;
                            }
                  statement
                    letStatement
                      let
                      patternNoTopAlt
                        patternWithoutRange
                          identifierPattern
                            identifier
                              path
                      =
                      expression
                        expression
                          pathExpression
                            pathInExpression
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    path
                        .
                        pathExprSegment
                          pathIdentSegment
                            identifier
                              trim_start_matches
                        (
                        callParams
                          expression
                            literalExpression
                              '/'
                        )
                      ;
                  statement
                    letStatement
                      let
                      patternNoTopAlt
                        patternWithoutRange
                          tuplePattern
                            (
                            tuplePatternItems
                              pattern
                                patternNoTopAlt
                                  patternWithoutRange
                                    identifierPattern
                                      identifier
                                        before_memty
                              ,
                              pattern
                                patternNoTopAlt
                                  patternWithoutRange
                                    identifierPattern
                                      identifier
                                        memty_str
                            )
                      =
                      expression
                        expression
                          expression
                            pathExpression
                              pathInExpression
                                pathExprSegment
                                  pathIdentSegment
                                    identifier
                                      path
                          .
                          pathExprSegment
                            pathIdentSegment
                              identifier
                                split_once
                          (
                          callParams
                            expression
                              literalExpression
                                '@'
                          )
                        .
                        pathExprSegment
                          pathIdentSegment
                            identifier
                              unwrap_or
                        (
                        callParams
                          expression
                            (
                            tupleElements
                              expression
                                pathExpression
                                  pathInExpression
                                    pathExprSegment
                                      pathIdentSegment
                                        identifier
                                          path
                              ,
                              expression
                                literalExpression
                                  ""
                            )
                        )
                      ;
                  statement
                    letStatement
                      let
                      patternNoTopAlt
                        patternWithoutRange
                          tuplePattern
                            (
                            tuplePatternItems
                              pattern
                                patternNoTopAlt
                                  patternWithoutRange
                                    identifierPattern
                                      identifier
                                        before_ty
                              ,
                              pattern
                                patternNoTopAlt
                                  patternWithoutRange
                                    identifierPattern
                                      identifier
                                        type_str
                            )
                      =
                      expression
                        expression
                          expression
                            pathExpression
                              pathInExpression
                                pathExprSegment
                                  pathIdentSegment
                                    identifier
                                      memty_str
                          .
                          pathExprSegment
                            pathIdentSegment
                              identifier
                                split_once
                          (
                          callParams
                            expression
                              literalExpression
                                '?'
                          )
                        .
                        pathExprSegment
                          pathIdentSegment
                            identifier
                              unwrap_or
                        (
                        callParams
                          expression
                            (
                            tupleElements
                              expression
                                pathExpression
                                  pathInExpression
                                    pathExprSegment
                                      pathIdentSegment
                                        identifier
                                          memty_str
                              ,
                              expression
                                literalExpression
                                  ""
                            )
                        )
                      ;
                  statement
                    letStatement
                      let
                      patternNoTopAlt
                        patternWithoutRange
                          identifierPattern
                            identifier
                              handle_ty
                      =
                      expression
                        expressionWithBlock
                          matchExpression
                            match
                            expression
                              pathExpression
                                pathInExpression
                                  pathExprSegment
                                    pathIdentSegment
                                      identifier
                                        before_memty
                            {
                            matchArms
                              matchArm
                                pattern
                                  patternNoTopAlt
                                    patternWithoutRange
                                      literalPattern
                                        ""
                                  |
                                  patternNoTopAlt
                                    patternWithoutRange
                                      literalPattern
                                        "zeroed"
                              =>
                              matchArmExpression
                                expression
                                  pathExpression
                                    pathInExpression
                                      pathExprSegment
                                        pathIdentSegment
                                          identifier
                                            HandleTy
                                      ::
                                      pathExprSegment
                                        pathIdentSegment
                                          identifier
                                            Allocated
                                ,
                              matchArm
                                pattern
                                  patternNoTopAlt
                                    patternWithoutRange
                                      literalPattern
                                        "physical"
                              =>
                              matchArmExpression
                                expression
                                  pathExpression
                                    pathInExpression
                                      pathExprSegment
                                        pathIdentSegment
                                          identifier
                                            HandleTy
                                      ::
                                      pathExprSegment
                                        pathIdentSegment
                                          identifier
                                            PhysBorrow
                                ,
                              matchArm
                                pattern
                                  patternNoTopAlt
                                    patternWithoutRange
                                      wildcardPattern
                                        _
                              =>
                              expression
                                return
                                expression
                                  expression
                                    pathExpression
                                      pathInExpression
                                        pathExprSegment
                                          pathIdentSegment
                                            identifier
                                              Err
                                  (
                                  callParams
                                    expression
                                      expression
                                        pathExpression
                                          pathInExpression
                                            pathExprSegment
                                              pathIdentSegment
                                                identifier
                                                  Error
                                            ::
                                            pathExprSegment
                                              pathIdentSegment
                                                identifier
                                                  new
                                      (
                                      callParams
                                        expression
                                          pathExpression
                                            pathInExpression
                                              pathExprSegment
                                                pathIdentSegment
                                                  identifier
                                                    ENOENT
                                      )
                                  )
                              ,
                            }
                      ;
                  statement
                    letStatement
                      let
                      patternNoTopAlt
                        patternWithoutRange
                          identifierPattern
                            identifier
                              mem_ty
                      =
                      expression
                        expressionWithBlock
                          matchExpression
                            match
                            expression
                              pathExpression
                                pathInExpression
                                  pathExprSegment
                                    pathIdentSegment
                                      identifier
                                        before_ty
                            {
                            matchArms
                              matchArm
                                pattern
                                  patternNoTopAlt
                                    patternWithoutRange
                                      literalPattern
                                        ""
                                  |
                                  patternNoTopAlt
                                    patternWithoutRange
                                      literalPattern
                                        "wb"
                              =>
                              matchArmExpression
                                expression
                                  pathExpression
                                    pathInExpression
                                      pathExprSegment
                                        pathIdentSegment
                                          identifier
                                            MemoryType
                                      ::
                                      pathExprSegment
                                        pathIdentSegment
                                          identifier
                                            Writeback
                                ,
                              matchArm
                                pattern
                                  patternNoTopAlt
                                    patternWithoutRange
                                      literalPattern
                                        "wc"
                              =>
                              matchArmExpression
                                expression
                                  pathExpression
                                    pathInExpression
                                      pathExprSegment
                                        pathIdentSegment
                                          identifier
                                            MemoryType
                                      ::
                                      pathExprSegment
                                        pathIdentSegment
                                          identifier
                                            WriteCombining
                                ,
                              matchArm
                                pattern
                                  patternNoTopAlt
                                    patternWithoutRange
                                      literalPattern
                                        "uc"
                              =>
                              matchArmExpression
                                expression
                                  pathExpression
                                    pathInExpression
                                      pathExprSegment
                                        pathIdentSegment
                                          identifier
                                            MemoryType
                                      ::
                                      pathExprSegment
                                        pathIdentSegment
                                          identifier
                                            Uncacheable
                                ,
                              matchArm
                                pattern
                                  patternNoTopAlt
                                    patternWithoutRange
                                      literalPattern
                                        "dev"
                              =>
                              matchArmExpression
                                expression
                                  pathExpression
                                    pathInExpression
                                      pathExprSegment
                                        pathIdentSegment
                                          identifier
                                            MemoryType
                                      ::
                                      pathExprSegment
                                        pathIdentSegment
                                          identifier
                                            DeviceMemory
                                ,
                              matchArm
                                pattern
                                  patternNoTopAlt
                                    patternWithoutRange
                                      wildcardPattern
                                        _
                              =>
                              expression
                                return
                                expression
                                  expression
                                    pathExpression
                                      pathInExpression
                                        pathExprSegment
                                          pathIdentSegment
                                            identifier
                                              Err
                                  (
                                  callParams
                                    expression
                                      expression
                                        pathExpression
                                          pathInExpression
                                            pathExprSegment
                                              pathIdentSegment
                                                identifier
                                                  Error
                                            ::
                                            pathExprSegment
                                              pathIdentSegment
                                                identifier
                                                  new
                                      (
                                      callParams
                                        expression
                                          pathExpression
                                            pathInExpression
                                              pathExprSegment
                                                pathIdentSegment
                                                  identifier
                                                    ENOENT
                                      )
                                  )
                              ,
                            }
                      ;
                  statement
                    letStatement
                      let
                      patternNoTopAlt
                        patternWithoutRange
                          identifierPattern
                            identifier
                              flags
                      =
                      expression
                        expression
                          expression
                            expression
                              expression
                                expression
                                  pathExpression
                                    pathInExpression
                                      pathExprSegment
                                        pathIdentSegment
                                          identifier
                                            type_str
                                .
                                pathExprSegment
                                  pathIdentSegment
                                    identifier
                                      split
                                (
                                callParams
                                  expression
                                    literalExpression
                                      ','
                                )
                              .
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    filter_map
                              (
                              callParams
                                expression
                                  closureExpression
                                    |
                                    closureParameters
                                      closureParam
                                        pattern
                                          patternNoTopAlt
                                            patternWithoutRange
                                              identifierPattern
                                                identifier
                                                  ty_str
                                    |
                                    expression
                                      expressionWithBlock
                                        matchExpression
                                          match
                                          expression
                                            pathExpression
                                              pathInExpression
                                                pathExprSegment
                                                  pathIdentSegment
                                                    identifier
                                                      ty_str
                                          {
                                          matchArms
                                            matchArm
                                              pattern
                                                patternNoTopAlt
                                                  patternWithoutRange
                                                    literalPattern
                                                      "phys_contiguous"
                                            =>
                                            matchArmExpression
                                              expression
                                                expression
                                                  pathExpression
                                                    pathInExpression
                                                      pathExprSegment
                                                        pathIdentSegment
                                                          identifier
                                                            Some
                                                (
                                                callParams
                                                  expression
                                                    expression
                                                      pathExpression
                                                        pathInExpression
                                                          pathExprSegment
                                                            pathIdentSegment
                                                              identifier
                                                                Some
                                                    (
                                                    callParams
                                                      expression
                                                        pathExpression
                                                          pathInExpression
                                                            pathExprSegment
                                                              pathIdentSegment
                                                                identifier
                                                                  HandleFlags
                                                            ::
                                                            pathExprSegment
                                                              pathIdentSegment
                                                                identifier
                                                                  PHYS_CONTIGUOUS
                                                    )
                                                )
                                              ,
                                            matchArm
                                              pattern
                                                patternNoTopAlt
                                                  patternWithoutRange
                                                    literalPattern
                                                      ""
                                            =>
                                            matchArmExpression
                                              expression
                                                pathExpression
                                                  pathInExpression
                                                    pathExprSegment
                                                      pathIdentSegment
                                                        identifier
                                                          None
                                              ,
                                            matchArm
                                              pattern
                                                patternNoTopAlt
                                                  patternWithoutRange
                                                    wildcardPattern
                                                      _
                                            =>
                                            expression
                                              expression
                                                pathExpression
                                                  pathInExpression
                                                    pathExprSegment
                                                      pathIdentSegment
                                                        identifier
                                                          Some
                                              (
                                              callParams
                                                expression
                                                  pathExpression
                                                    pathInExpression
                                                      pathExprSegment
                                                        pathIdentSegment
                                                          identifier
                                                            None
                                              )
                                            ,
                                          }
                              )
                            .
                            pathExprSegment
                              pathIdentSegment
                                identifier
                                  collect
                              ::
                              genericArgs
                                <
                                genericArgsTypes
                                  type_
                                    typeNoBounds
                                      traitObjectTypeOneBound
                                        traitBound
                                          typePath
                                            typePathSegment
                                              pathIdentSegment
                                                identifier
                                                  Option
                                              genericArgs
                                                <
                                                genericArgsTypes
                                                  type_
                                                    typeNoBounds
                                                      traitObjectTypeOneBound
                                                        traitBound
                                                          typePath
                                                            typePathSegment
                                                              pathIdentSegment
                                                                identifier
                                                                  HandleFlags
                                                >
                                >
                            (
                            )
                          .
                          pathExprSegment
                            pathIdentSegment
                              identifier
                                ok_or
                          (
                          callParams
                            expression
                              expression
                                pathExpression
                                  pathInExpression
                                    pathExprSegment
                                      pathIdentSegment
                                        identifier
                                          Error
                                    ::
                                    pathExprSegment
                                      pathIdentSegment
                                        identifier
                                          new
                              (
                              callParams
                                expression
                                  pathExpression
                                    pathInExpression
                                      pathExprSegment
                                        pathIdentSegment
                                          identifier
                                            ENOENT
                              )
                          )
                        ?
                      ;
                  statement
                    expressionStatement
                      expressionWithBlock
                        ifExpression
                          if
                          expression
                            expression
                              expression
                                expression
                                  pathExpression
                                    pathInExpression
                                      pathExprSegment
                                        pathIdentSegment
                                          identifier
                                            ctx
                                .
                                identifier
                                  uid
                              comparisonOperator
                                !=
                              expression
                                literalExpression
                                  0
                            &&
                            expression
                              (
                              expression
                                expression
                                  !
                                  expression
                                    expression
                                      pathExpression
                                        pathInExpression
                                          pathExprSegment
                                            pathIdentSegment
                                              identifier
                                                flags
                                    .
                                    pathExprSegment
                                      pathIdentSegment
                                        identifier
                                          is_empty
                                    (
                                    )
                                ||
                                expression
                                  !
                                  expression
                                    macroInvocation
                                      simplePath
                                        simplePathSegment
                                          identifier
                                            matches
                                      !
                                      delimTokenTree
                                        (
                                        tokenTree
                                          delimTokenTree
                                            (
                                            tokenTree
                                              tokenTreeToken
                                                macroIdentifierLikeToken
                                                  identifier
                                                    handle_ty
                                              tokenTreeToken
                                                macroPunctuationToken
                                                  ,
                                              tokenTreeToken
                                                macroIdentifierLikeToken
                                                  identifier
                                                    mem_ty
                                            )
                                        tokenTree
                                          tokenTreeToken
                                            macroPunctuationToken
                                              ,
                                        tokenTree
                                          delimTokenTree
                                            (
                                            tokenTree
                                              tokenTreeToken
                                                macroIdentifierLikeToken
                                                  identifier
                                                    HandleTy
                                              tokenTreeToken
                                                macroPunctuationToken
                                                  ::
                                              tokenTreeToken
                                                macroIdentifierLikeToken
                                                  identifier
                                                    Allocated
                                              tokenTreeToken
                                                macroPunctuationToken
                                                  ,
                                              tokenTreeToken
                                                macroIdentifierLikeToken
                                                  identifier
                                                    MemoryType
                                              tokenTreeToken
                                                macroPunctuationToken
                                                  ::
                                              tokenTreeToken
                                                macroIdentifierLikeToken
                                                  identifier
                                                    Writeback
                                            )
                                        )
                              )
                          blockExpression
                            {
                            statements
                              statement
                                expressionStatement
                                  expression
                                    return
                                    expression
                                      expression
                                        pathExpression
                                          pathInExpression
                                            pathExprSegment
                                              pathIdentSegment
                                                identifier
                                                  Err
                                      (
                                      callParams
                                        expression
                                          expression
                                            pathExpression
                                              pathInExpression
                                                pathExprSegment
                                                  pathIdentSegment
                                                    identifier
                                                      Error
                                                ::
                                                pathExprSegment
                                                  pathIdentSegment
                                                    identifier
                                                      new
                                          (
                                          callParams
                                            expression
                                              pathExpression
                                                pathInExpression
                                                  pathExprSegment
                                                    pathIdentSegment
                                                      identifier
                                                        EACCES
                                          )
                                      )
                                  ;
                            }
                  expression
                    expression
                      pathExpression
                        pathInExpression
                          pathExprSegment
                            pathIdentSegment
                              identifier
                                Ok
                    (
                    callParams
                      expression
                        expression
                          pathExpression
                            pathInExpression
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    OpenResult
                              ::
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    SchemeLocal
                        (
                        callParams
                          expression
                            expression
                              expression
                                (
                                expression
                                  expression
                                    pathExpression
                                      pathInExpression
                                        pathExprSegment
                                          pathIdentSegment
                                            identifier
                                              handle_ty
                                  as
                                  typeNoBounds
                                    traitObjectTypeOneBound
                                      traitBound
                                        typePath
                                          typePathSegment
                                            pathIdentSegment
                                              identifier
                                                usize
                                )
                              |
                              expression
                                (
                                expression
                                  expression
                                    (
                                    expression
                                      expression
                                        pathExpression
                                          pathInExpression
                                            pathExprSegment
                                              pathIdentSegment
                                                identifier
                                                  mem_ty
                                      as
                                      typeNoBounds
                                        traitObjectTypeOneBound
                                          traitBound
                                            typePath
                                              typePathSegment
                                                pathIdentSegment
                                                  identifier
                                                    usize
                                    )
                                  shl
                                    <
                                  expression
                                    pathExpression
                                      qualifiedPathInExpression
                                        qualifiedPathType
                                          <
                                          type_
                                            8
                                )
                            |
                            expression
                              (
                              expression
                                expression
                                  expression
                                    pathExpression
                                      pathInExpression
                                        pathExprSegment
                                          pathIdentSegment
                                            identifier
                                              usize
                                        ::
                                        pathExprSegment
                                          pathIdentSegment
                                            identifier
                                              from
                                  (
                                  callParams
                                    expression
                                      expression
                                        pathExpression
                                          pathInExpression
                                            pathExprSegment
                                              pathIdentSegment
                                                identifier
                                                  flags
                                      .
                                      pathExprSegment
                                        pathIdentSegment
                                          identifier
                                            bits
                                      (
                                      )
                                  )
                                shl
                                  <
                                expression
                                  pathExpression
                                    qualifiedPathInExpression
                                      qualifiedPathType
                                        <
                                        type_
                                          16
                              )
                          ,
                          expression
                            expression
                              pathExpression
                                pathInExpression
                                  pathExprSegment
                                    pathIdentSegment
                                      identifier
                                        InternalFlags
                                  ::
                                  pathExprSegment
                                    pathIdentSegment
                                      identifier
                                        empty
                            (
                            )
                          ,
                        )
                    )
                }
          associatedItem
            function_
              functionQualifiers
              fn
              identifier
                kfmap
              (
              functionParameters
                selfParam
                  shorthandSelf
                    &
                    self
                ,
                functionParam
                  functionParamPattern
                    pattern
                      patternNoTopAlt
                        patternWithoutRange
                          identifierPattern
                            identifier
                              id
                    :
                    type_
                      typeNoBounds
                        traitObjectTypeOneBound
                          traitBound
                            typePath
                              typePathSegment
                                pathIdentSegment
                                  identifier
                                    usize
                ,
                functionParam
                  functionParamPattern
                    pattern
                      patternNoTopAlt
                        patternWithoutRange
                          identifierPattern
                            identifier
                              addr_space
                    :
                    type_
                      typeNoBounds
                        referenceType
                          &
                          typeNoBounds
                            traitObjectTypeOneBound
                              traitBound
                                typePath
                                  typePathSegment
                                    pathIdentSegment
                                      identifier
                                        Arc
                                    genericArgs
                                      <
                                      genericArgsTypes
                                        type_
                                          typeNoBounds
                                            traitObjectTypeOneBound
                                              traitBound
                                                typePath
                                                  typePathSegment
                                                    pathIdentSegment
                                                      identifier
                                                        AddrSpaceWrapper
                                      >
                ,
                functionParam
                  functionParamPattern
                    pattern
                      patternNoTopAlt
                        patternWithoutRange
                          identifierPattern
                            identifier
                              map
                    :
                    type_
                      typeNoBounds
                        referenceType
                          &
                          typeNoBounds
                            traitObjectTypeOneBound
                              traitBound
                                typePath
                                  typePathSegment
                                    pathIdentSegment
                                      identifier
                                        Map
                ,
                functionParam
                  functionParamPattern
                    pattern
                      patternNoTopAlt
                        patternWithoutRange
                          identifierPattern
                            identifier
                              _consume
                    :
                    type_
                      typeNoBounds
                        traitObjectTypeOneBound
                          traitBound
                            typePath
                              typePathSegment
                                pathIdentSegment
                                  identifier
                                    bool
                ,
              )
              functionReturnType
                ->
                type_
                  typeNoBounds
                    traitObjectTypeOneBound
                      traitBound
                        typePath
                          typePathSegment
                            pathIdentSegment
                              identifier
                                Result
                            genericArgs
                              <
                              genericArgsTypes
                                type_
                                  typeNoBounds
                                    traitObjectTypeOneBound
                                      traitBound
                                        typePath
                                          typePathSegment
                                            pathIdentSegment
                                              identifier
                                                usize
                              >
              blockExpression
                {
                statements
                  statement
                    letStatement
                      let
                      patternNoTopAlt
                        patternWithoutRange
                          tuplePattern
                            (
                            tuplePatternItems
                              pattern
                                patternNoTopAlt
                                  patternWithoutRange
                                    identifierPattern
                                      identifier
                                        handle_ty
                              ,
                              pattern
                                patternNoTopAlt
                                  patternWithoutRange
                                    identifierPattern
                                      identifier
                                        mem_ty
                              ,
                              pattern
                                patternNoTopAlt
                                  patternWithoutRange
                                    identifierPattern
                                      identifier
                                        flags
                            )
                      =
                      expression
                        expression
                          expression
                            expression
                              expression
                                expression
                                  pathExpression
                                    pathInExpression
                                      pathExprSegment
                                        pathIdentSegment
                                          identifier
                                            u32
                                      ::
                                      pathExprSegment
                                        pathIdentSegment
                                          identifier
                                            try_from
                                (
                                callParams
                                  expression
                                    pathExpression
                                      pathInExpression
                                        pathExprSegment
                                          pathIdentSegment
                                            identifier
                                              id
                                )
                              .
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    ok
                              (
                              )
                            .
                            pathExprSegment
                              pathIdentSegment
                                identifier
                                  and_then
                            (
                            callParams
                              expression
                                pathExpression
                                  pathInExpression
                                    pathExprSegment
                                      pathIdentSegment
                                        identifier
                                          from_raw
                            )
                          .
                          pathExprSegment
                            pathIdentSegment
                              identifier
                                ok_or
                          (
                          callParams
                            expression
                              expression
                                pathExpression
                                  pathInExpression
                                    pathExprSegment
                                      pathIdentSegment
                                        identifier
                                          Error
                                    ::
                                    pathExprSegment
                                      pathIdentSegment
                                        identifier
                                          new
                              (
                              callParams
                                expression
                                  pathExpression
                                    pathInExpression
                                      pathExprSegment
                                        pathIdentSegment
                                          identifier
                                            EBADF
                              )
                          )
                        ?
                      ;
                  statement
                    expressionStatement
                      expressionWithBlock
                        matchExpression
                          match
                          expression
                            pathExpression
                              pathInExpression
                                pathExprSegment
                                  pathIdentSegment
                                    identifier
                                      handle_ty
                          {
                          matchArms
                            matchArm
                              pattern
                                patternNoTopAlt
                                  patternWithoutRange
                                    pathPattern
                                      pathInExpression
                                        pathExprSegment
                                          pathIdentSegment
                                            identifier
                                              HandleTy
                                        ::
                                        pathExprSegment
                                          pathIdentSegment
                                            identifier
                                              Allocated
                            =>
                            matchArmExpression
                              expression
                                expression
                                  pathExpression
                                    pathInExpression
                                      pathExprSegment
                                        pathIdentSegment
                                          Self
                                      ::
                                      pathExprSegment
                                        pathIdentSegment
                                          identifier
                                            fmap_anonymous
                                (
                                callParams
                                  expression
                                    pathExpression
                                      pathInExpression
                                        pathExprSegment
                                          pathIdentSegment
                                            identifier
                                              addr_space
                                  ,
                                  expression
                                    pathExpression
                                      pathInExpression
                                        pathExprSegment
                                          pathIdentSegment
                                            identifier
                                              map
                                  ,
                                  expression
                                    expression
                                      pathExpression
                                        pathInExpression
                                          pathExprSegment
                                            pathIdentSegment
                                              identifier
                                                flags
                                    .
                                    pathExprSegment
                                      pathIdentSegment
                                        identifier
                                          contains
                                    (
                                    callParams
                                      expression
                                        pathExpression
                                          pathInExpression
                                            pathExprSegment
                                              pathIdentSegment
                                                identifier
                                                  HandleFlags
                                            ::
                                            pathExprSegment
                                              pathIdentSegment
                                                identifier
                                                  PHYS_CONTIGUOUS
                                    )
                                  ,
                                )
                              ,
                            matchArm
                              pattern
                                patternNoTopAlt
                                  patternWithoutRange
                                    pathPattern
                                      pathInExpression
                                        pathExprSegment
                                          pathIdentSegment
                                            identifier
                                              HandleTy
                                        ::
                                        pathExprSegment
                                          pathIdentSegment
                                            identifier
                                              PhysBorrow
                            =>
                            expression
                              expression
                                pathExpression
                                  pathInExpression
                                    pathExprSegment
                                      pathIdentSegment
                                        Self
                                    ::
                                    pathExprSegment
                                      pathIdentSegment
                                        identifier
                                          physmap
                              (
                              callParams
                                expression
                                  expression
                                    pathExpression
                                      pathInExpression
                                        pathExprSegment
                                          pathIdentSegment
                                            identifier
                                              map
                                  .
                                  identifier
                                    offset
                                ,
                                expression
                                  expression
                                    pathExpression
                                      pathInExpression
                                        pathExprSegment
                                          pathIdentSegment
                                            identifier
                                              map
                                  .
                                  identifier
                                    size
                                ,
                                expression
                                  expression
                                    pathExpression
                                      pathInExpression
                                        pathExprSegment
                                          pathIdentSegment
                                            identifier
                                              map
                                  .
                                  identifier
                                    flags
                                ,
                                expression
                                  pathExpression
                                    pathInExpression
                                      pathExprSegment
                                        pathIdentSegment
                                          identifier
                                            mem_ty
                              )
                            ,
                          }
                }
          associatedItem
            function_
              functionQualifiers
              fn
              identifier
                kfstatvfs
              (
              functionParameters
                selfParam
                  shorthandSelf
                    &
                    self
                ,
                functionParam
                  functionParamPattern
                    pattern
                      patternNoTopAlt
                        patternWithoutRange
                          identifierPattern
                            identifier
                              _file
                    :
                    type_
                      typeNoBounds
                        traitObjectTypeOneBound
                          traitBound
                            typePath
                              typePathSegment
                                pathIdentSegment
                                  identifier
                                    usize
                ,
                functionParam
                  functionParamPattern
                    pattern
                      patternNoTopAlt
                        patternWithoutRange
                          identifierPattern
                            identifier
                              dst
                    :
                    type_
                      typeNoBounds
                        traitObjectTypeOneBound
                          traitBound
                            typePath
                              typePathSegment
                                pathIdentSegment
                                  identifier
                                    UserSliceWo
              )
              functionReturnType
                ->
                type_
                  typeNoBounds
                    traitObjectTypeOneBound
                      traitBound
                        typePath
                          typePathSegment
                            pathIdentSegment
                              identifier
                                Result
                            genericArgs
                              <
                              genericArgsTypes
                                type_
                                  typeNoBounds
                                    tupleType
                                      (
                                      )
                              >
              blockExpression
                {
                statements
                  statement
                    letStatement
                      let
                      patternNoTopAlt
                        patternWithoutRange
                          identifierPattern
                            identifier
                              used
                      =
                      expression
                        expression
                          expression
                            pathExpression
                              pathInExpression
                                pathExprSegment
                                  pathIdentSegment
                                    identifier
                                      used_frames
                          (
                          )
                        as
                        typeNoBounds
                          traitObjectTypeOneBound
                            traitBound
                              typePath
                                typePathSegment
                                  pathIdentSegment
                                    identifier
                                      u64
                      ;
                  statement
                    letStatement
                      let
                      patternNoTopAlt
                        patternWithoutRange
                          identifierPattern
                            identifier
                              free
                      =
                      expression
                        expression
                          expression
                            pathExpression
                              pathInExpression
                                pathExprSegment
                                  pathIdentSegment
                                    identifier
                                      free_frames
                          (
                          )
                        as
                        typeNoBounds
                          traitObjectTypeOneBound
                            traitBound
                              typePath
                                typePathSegment
                                  pathIdentSegment
                                    identifier
                                      u64
                      ;
                  statement
                    letStatement
                      let
                      patternNoTopAlt
                        patternWithoutRange
                          identifierPattern
                            identifier
                              stat
                      =
                      expression
                        structExpression
                          structExprStruct
                            pathInExpression
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    StatVfs
                            {
                            structExprFields
                              structExprField
                                identifier
                                  f_bsize
                                :
                                expression
                                  expression
                                    expression
                                      expression
                                        pathExpression
                                          pathInExpression
                                            pathExprSegment
                                              pathIdentSegment
                                                identifier
                                                  PAGE_SIZE
                                      .
                                      pathExprSegment
                                        pathIdentSegment
                                          identifier
                                            try_into
                                      (
                                      )
                                    .
                                    pathExprSegment
                                      pathIdentSegment
                                        identifier
                                          map_err
                                    (
                                    callParams
                                      expression
                                        closureExpression
                                          |
                                          closureParameters
                                            closureParam
                                              pattern
                                                patternNoTopAlt
                                                  patternWithoutRange
                                                    wildcardPattern
                                                      _
                                          |
                                          expression
                                            expression
                                              pathExpression
                                                pathInExpression
                                                  pathExprSegment
                                                    pathIdentSegment
                                                      identifier
                                                        Error
                                                  ::
                                                  pathExprSegment
                                                    pathIdentSegment
                                                      identifier
                                                        new
                                            (
                                            callParams
                                              expression
                                                pathExpression
                                                  pathInExpression
                                                    pathExprSegment
                                                      pathIdentSegment
                                                        identifier
                                                          EOVERFLOW
                                            )
                                    )
                                  ?
                              ,
                              structExprField
                                identifier
                                  f_blocks
                                :
                                expression
                                  expression
                                    pathExpression
                                      pathInExpression
                                        pathExprSegment
                                          pathIdentSegment
                                            identifier
                                              used
                                  +
                                  expression
                                    pathExpression
                                      pathInExpression
                                        pathExprSegment
                                          pathIdentSegment
                                            identifier
                                              free
                              ,
                              structExprField
                                identifier
                                  f_bfree
                                :
                                expression
                                  pathExpression
                                    pathInExpression
                                      pathExprSegment
                                        pathIdentSegment
                                          identifier
                                            free
                              ,
                              structExprField
                                identifier
                                  f_bavail
                                :
                                expression
                                  pathExpression
                                    pathInExpression
                                      pathExprSegment
                                        pathIdentSegment
                                          identifier
                                            free
                              ,
                            }
                      ;
                  statement
                    expressionStatement
                      expression
                        expression
                          expression
                            pathExpression
                              pathInExpression
                                pathExprSegment
                                  pathIdentSegment
                                    identifier
                                      dst
                          .
                          pathExprSegment
                            pathIdentSegment
                              identifier
                                copy_exactly
                          (
                          callParams
                            expression
                              &
                              expression
                                pathExpression
                                  pathInExpression
                                    pathExprSegment
                                      pathIdentSegment
                                        identifier
                                          stat
                          )
                        ?
                      ;
                  expression
                    expression
                      pathExpression
                        pathInExpression
                          pathExprSegment
                            pathIdentSegment
                              identifier
                                Ok
                    (
                    callParams
                      expression
                        (
                        )
                    )
                }
          }
  <EOF>

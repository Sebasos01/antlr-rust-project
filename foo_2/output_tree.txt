File: /home/socub/U/tesis/rust_repos/foo_2/memory.rs
crate
  item
    visItem
      visibility
        pub
      module
        mod
        identifier
          irqchip
        ;
  item
    visItem
      useDeclaration
        use
        useTree
          simplePath
            simplePathSegment
              crate
          ::
          {
          useTree
            simplePath
              simplePathSegment
                identifier
                  dtb
              ::
              simplePathSegment
                identifier
                  irqchip
              ::
              simplePathSegment
                identifier
                  IrqCell
          ,
          useTree
            simplePath
              simplePathSegment
                identifier
                  startup
              ::
              simplePathSegment
                identifier
                  memory
            ::
            {
            useTree
              simplePath
                simplePathSegment
                  identifier
                    register_memory_region
            ,
            useTree
              simplePath
                simplePathSegment
                  identifier
                    BootloaderMemoryKind
            }
          ,
          }
        ;
  item
    visItem
      useDeclaration
        use
        useTree
          simplePath
            simplePathSegment
              identifier
                alloc
            ::
            simplePathSegment
              identifier
                vec
            ::
            simplePathSegment
              identifier
                Vec
        ;
  item
    visItem
      useDeclaration
        use
        useTree
          simplePath
            simplePathSegment
              identifier
                byteorder
          ::
          {
          useTree
            simplePath
              simplePathSegment
                identifier
                  ByteOrder
          ,
          useTree
            simplePath
              simplePathSegment
                identifier
                  BE
          }
        ;
  item
    visItem
      useDeclaration
        use
        useTree
          simplePath
            simplePathSegment
              identifier
                core
            ::
            simplePathSegment
              identifier
                slice
        ;
  item
    visItem
      useDeclaration
        use
        useTree
          simplePath
            simplePathSegment
              identifier
                fdt
          ::
          {
          useTree
            simplePath
              simplePathSegment
                identifier
                  node
            ::
            {
            useTree
              simplePath
                simplePathSegment
                  identifier
                    FdtNode
            ,
            useTree
              simplePath
                simplePathSegment
                  identifier
                    NodeProperty
            }
          ,
          useTree
            simplePath
              simplePathSegment
                identifier
                  standard_nodes
              ::
              simplePathSegment
                identifier
                  MemoryRegion
          ,
          useTree
            simplePath
              simplePathSegment
                identifier
                  Fdt
          ,
          }
        ;
  item
    visItem
      useDeclaration
        use
        useTree
          simplePath
            simplePathSegment
              identifier
                log
            ::
            simplePathSegment
              identifier
                debug
        ;
  item
    visItem
      useDeclaration
        use
        useTree
          simplePath
            simplePathSegment
              identifier
                spin
            ::
            simplePathSegment
              identifier
                once
            ::
            simplePathSegment
              identifier
                Once
        ;
  item
    visItem
      visibility
        pub
      staticItem
        static
        identifier
          DTB_BINARY
        :
        type_
          typeNoBounds
            traitObjectTypeOneBound
              traitBound
                typePath
                  typePathSegment
                    pathIdentSegment
                      identifier
                        Once
                    genericArgs
                      <
                      genericArgsTypes
                        type_
                          typeNoBounds
                            traitObjectTypeOneBound
                              traitBound
                                typePath
                                  typePathSegment
                                    pathIdentSegment
                                      identifier
                                        Vec
                                    genericArgs
                                      <
                                      genericArgsTypes
                                        type_
                                          typeNoBounds
                                            traitObjectTypeOneBound
                                              traitBound
                                                typePath
                                                  typePathSegment
                                                    pathIdentSegment
                                                      identifier
                                                        u8
                                      >
                      >
        =
        expression
          expression
            pathExpression
              pathInExpression
                pathExprSegment
                  pathIdentSegment
                    identifier
                      Once
                ::
                pathExprSegment
                  pathIdentSegment
                    identifier
                      new
          (
          )
        ;
  item
    visItem
      visibility
        pub
      function_
        functionQualifiers
          unsafe
        fn
        identifier
          init
        (
        functionParameters
          functionParam
            functionParamPattern
              pattern
                patternNoTopAlt
                  patternWithoutRange
                    identifierPattern
                      identifier
                        dtb
              :
              type_
                typeNoBounds
                  traitObjectTypeOneBound
                    traitBound
                      typePath
                        typePathSegment
                          pathIdentSegment
                            identifier
                              Option
                          genericArgs
                            <
                            genericArgsTypes
                              type_
                                typeNoBounds
                                  tupleType
                                    (
                                    type_
                                      typeNoBounds
                                        traitObjectTypeOneBound
                                          traitBound
                                            typePath
                                              typePathSegment
                                                pathIdentSegment
                                                  identifier
                                                    usize
                                    ,
                                    type_
                                      typeNoBounds
                                        traitObjectTypeOneBound
                                          traitBound
                                            typePath
                                              typePathSegment
                                                pathIdentSegment
                                                  identifier
                                                    usize
                                    )
                            >
        )
        blockExpression
          {
          statements
            statement
              letStatement
                let
                patternNoTopAlt
                  patternWithoutRange
                    identifierPattern
                      mut
                      identifier
                        initialized
                =
                expression
                  literalExpression
                    false
                ;
            statement
              expressionStatement
                expression
                  expression
                    pathExpression
                      pathInExpression
                        pathExprSegment
                          pathIdentSegment
                            identifier
                              DTB_BINARY
                  .
                  pathExprSegment
                    pathIdentSegment
                      identifier
                        call_once
                  (
                  callParams
                    expression
                      closureExpression
                        ||
                        expression
                          expressionWithBlock
                            blockExpression
                              {
                              statements
                                statement
                                  expressionStatement
                                    expression
                                      expression
                                        pathExpression
                                          pathInExpression
                                            pathExprSegment
                                              pathIdentSegment
                                                identifier
                                                  initialized
                                      =
                                      expression
                                        literalExpression
                                          true
                                    ;
                                statement
                                  letStatement
                                    let
                                    patternNoTopAlt
                                      patternWithoutRange
                                        identifierPattern
                                          mut
                                          identifier
                                            binary
                                    =
                                    expression
                                      expression
                                        pathExpression
                                          pathInExpression
                                            pathExprSegment
                                              pathIdentSegment
                                                identifier
                                                  Vec
                                            ::
                                            pathExprSegment
                                              pathIdentSegment
                                                identifier
                                                  new
                                      (
                                      )
                                    ;
                                statement
                                  expressionStatement
                                    expression
                                      expressionWithBlock
                                        ifExpression
                                          if
                                          expression
                                            letExpression
                                              let
                                              pattern
                                                patternNoTopAlt
                                                  patternWithoutRange
                                                    tupleStructPattern
                                                      pathInExpression
                                                        pathExprSegment
                                                          pathIdentSegment
                                                            identifier
                                                              Some
                                                      (
                                                      tupleStructItems
                                                        pattern
                                                          patternNoTopAlt
                                                            patternWithoutRange
                                                              tuplePattern
                                                                (
                                                                tuplePatternItems
                                                                  pattern
                                                                    patternNoTopAlt
                                                                      patternWithoutRange
                                                                        identifierPattern
                                                                          identifier
                                                                            dtb_base
                                                                  ,
                                                                  pattern
                                                                    patternNoTopAlt
                                                                      patternWithoutRange
                                                                        identifierPattern
                                                                          identifier
                                                                            dtb_size
                                                                )
                                                      )
                                              =
                                              expression
                                                pathExpression
                                                  pathInExpression
                                                    pathExprSegment
                                                      pathIdentSegment
                                                        identifier
                                                          dtb
                                          blockExpression
                                            {
                                            statements
                                              statement
                                                letStatement
                                                  let
                                                  patternNoTopAlt
                                                    patternWithoutRange
                                                      identifierPattern
                                                        identifier
                                                          data
                                                  =
                                                  expression
                                                    expressionWithBlock
                                                      unsafeBlockExpression
                                                        unsafe
                                                        blockExpression
                                                          {
                                                          statements
                                                            expression
                                                              expression
                                                                pathExpression
                                                                  pathInExpression
                                                                    pathExprSegment
                                                                      pathIdentSegment
                                                                        identifier
                                                                          slice
                                                                    ::
                                                                    pathExprSegment
                                                                      pathIdentSegment
                                                                        identifier
                                                                          from_raw_parts
                                                              (
                                                              callParams
                                                                expression
                                                                  expression
                                                                    pathExpression
                                                                      pathInExpression
                                                                        pathExprSegment
                                                                          pathIdentSegment
                                                                            identifier
                                                                              dtb_base
                                                                  as
                                                                  typeNoBounds
                                                                    rawPointerType
                                                                      *
                                                                      const
                                                                      typeNoBounds
                                                                        traitObjectTypeOneBound
                                                                          traitBound
                                                                            typePath
                                                                              typePathSegment
                                                                                pathIdentSegment
                                                                                  identifier
                                                                                    u8
                                                                ,
                                                                expression
                                                                  pathExpression
                                                                    pathInExpression
                                                                      pathExprSegment
                                                                        pathIdentSegment
                                                                          identifier
                                                                            dtb_size
                                                              )
                                                          }
                                                  ;
                                              statement
                                                expressionStatement
                                                  expression
                                                    expression
                                                      pathExpression
                                                        pathInExpression
                                                          pathExprSegment
                                                            pathIdentSegment
                                                              identifier
                                                                binary
                                                    .
                                                    pathExprSegment
                                                      pathIdentSegment
                                                        identifier
                                                          extend
                                                    (
                                                    callParams
                                                      expression
                                                        pathExpression
                                                          pathInExpression
                                                            pathExprSegment
                                                              pathIdentSegment
                                                                identifier
                                                                  data
                                                    )
                                                  ;
                                            }
                                    ;
                                expression
                                  pathExpression
                                    pathInExpression
                                      pathExprSegment
                                        pathIdentSegment
                                          identifier
                                            binary
                              }
                  )
                ;
            statement
              expressionStatement
                expressionWithBlock
                  ifExpression
                    if
                    expression
                      !
                      expression
                        pathExpression
                          pathInExpression
                            pathExprSegment
                              pathIdentSegment
                                identifier
                                  initialized
                    blockExpression
                      {
                      statements
                        statement
                          item
                            macroItem
                              macroInvocationSemi
                                simplePath
                                  simplePathSegment
                                    identifier
                                      println
                                !
                                (
                                tokenTree
                                  tokenTreeToken
                                    macroLiteralToken
                                      literalExpression
                                        "DTB_BINARY INIT TWICE!"
                                )
                                ;
                      }
          }
  item
    visItem
      visibility
        pub
      function_
        functionQualifiers
        fn
        identifier
          travel_interrupt_ctrl
        (
        functionParameters
          functionParam
            functionParamPattern
              pattern
                patternNoTopAlt
                  patternWithoutRange
                    identifierPattern
                      identifier
                        fdt
              :
              type_
                typeNoBounds
                  referenceType
                    &
                    typeNoBounds
                      traitObjectTypeOneBound
                        traitBound
                          typePath
                            typePathSegment
                              pathIdentSegment
                                identifier
                                  Fdt
        )
        blockExpression
          {
          statements
            statement
              expressionStatement
                expressionWithBlock
                  ifExpression
                    if
                    expression
                      letExpression
                        let
                        pattern
                          patternNoTopAlt
                            patternWithoutRange
                              tupleStructPattern
                                pathInExpression
                                  pathExprSegment
                                    pathIdentSegment
                                      identifier
                                        Some
                                (
                                tupleStructItems
                                  pattern
                                    patternNoTopAlt
                                      patternWithoutRange
                                        identifierPattern
                                          identifier
                                            root_intr_parent
                                )
                        =
                        expression
                          expression
                            expression
                              expression
                                pathExpression
                                  pathInExpression
                                    pathExprSegment
                                      pathIdentSegment
                                        identifier
                                          fdt
                              .
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    root
                              (
                              )
                            .
                            pathExprSegment
                              pathIdentSegment
                                identifier
                                  property
                            (
                            callParams
                              expression
                                literalExpression
                                  "interrupt-parent"
                            )
                          .
                          pathExprSegment
                            pathIdentSegment
                              identifier
                                and_then
                          (
                          callParams
                            expression
                              pathExpression
                                pathInExpression
                                  pathExprSegment
                                    pathIdentSegment
                                      identifier
                                        NodeProperty
                                  ::
                                  pathExprSegment
                                    pathIdentSegment
                                      identifier
                                        as_usize
                          )
                    blockExpression
                      {
                      statements
                        statement
                          item
                            macroItem
                              macroInvocationSemi
                                simplePath
                                  simplePathSegment
                                    identifier
                                      debug
                                !
                                (
                                tokenTree
                                  tokenTreeToken
                                    macroLiteralToken
                                      literalExpression
                                        "root parent = 0x{:08x}"
                                  tokenTreeToken
                                    macroPunctuationToken
                                      ,
                                  tokenTreeToken
                                    macroIdentifierLikeToken
                                      identifier
                                        root_intr_parent
                                )
                                ;
                      }
            statement
              expressionStatement
                expressionWithBlock
                  loopExpression
                    iteratorLoopExpression
                      for
                      pattern
                        patternNoTopAlt
                          patternWithoutRange
                            identifierPattern
                              identifier
                                node
                      in
                      expression
                        expression
                          pathExpression
                            pathInExpression
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    fdt
                        .
                        pathExprSegment
                          pathIdentSegment
                            identifier
                              all_nodes
                        (
                        )
                      blockExpression
                        {
                        statements
                          statement
                            expressionStatement
                              expressionWithBlock
                                ifExpression
                                  if
                                  expression
                                    expression
                                      expression
                                        pathExpression
                                          pathInExpression
                                            pathExprSegment
                                              pathIdentSegment
                                                identifier
                                                  node
                                      .
                                      pathExprSegment
                                        pathIdentSegment
                                          identifier
                                            property
                                      (
                                      callParams
                                        expression
                                          literalExpression
                                            "interrupt-controller"
                                      )
                                    .
                                    pathExprSegment
                                      pathIdentSegment
                                        identifier
                                          is_some
                                    (
                                    )
                                  blockExpression
                                    {
                                    statements
                                      statement
                                        letStatement
                                          let
                                          patternNoTopAlt
                                            patternWithoutRange
                                              identifierPattern
                                                identifier
                                                  compatible
                                          =
                                          expression
                                            expression
                                              expression
                                                expression
                                                  expression
                                                    pathExpression
                                                      pathInExpression
                                                        pathExprSegment
                                                          pathIdentSegment
                                                            identifier
                                                              node
                                                  .
                                                  pathExprSegment
                                                    pathIdentSegment
                                                      identifier
                                                        property
                                                  (
                                                  callParams
                                                    expression
                                                      literalExpression
                                                        "compatible"
                                                  )
                                                .
                                                pathExprSegment
                                                  pathIdentSegment
                                                    identifier
                                                      unwrap
                                                (
                                                )
                                              .
                                              pathExprSegment
                                                pathIdentSegment
                                                  identifier
                                                    as_str
                                              (
                                              )
                                            .
                                            pathExprSegment
                                              pathIdentSegment
                                                identifier
                                                  unwrap
                                            (
                                            )
                                          ;
                                      statement
                                        letStatement
                                          let
                                          patternNoTopAlt
                                            patternWithoutRange
                                              identifierPattern
                                                identifier
                                                  phandle
                                          =
                                          expression
                                            expression
                                              expression
                                                expression
                                                  expression
                                                    pathExpression
                                                      pathInExpression
                                                        pathExprSegment
                                                          pathIdentSegment
                                                            identifier
                                                              node
                                                  .
                                                  pathExprSegment
                                                    pathIdentSegment
                                                      identifier
                                                        property
                                                  (
                                                  callParams
                                                    expression
                                                      literalExpression
                                                        "phandle"
                                                  )
                                                .
                                                pathExprSegment
                                                  pathIdentSegment
                                                    identifier
                                                      unwrap
                                                (
                                                )
                                              .
                                              pathExprSegment
                                                pathIdentSegment
                                                  identifier
                                                    as_usize
                                              (
                                              )
                                            .
                                            pathExprSegment
                                              pathIdentSegment
                                                identifier
                                                  unwrap
                                            (
                                            )
                                          ;
                                      statement
                                        letStatement
                                          let
                                          patternNoTopAlt
                                            patternWithoutRange
                                              identifierPattern
                                                identifier
                                                  intr_cells
                                          =
                                          expression
                                            expression
                                              expression
                                                pathExpression
                                                  pathInExpression
                                                    pathExprSegment
                                                      pathIdentSegment
                                                        identifier
                                                          node
                                              .
                                              pathExprSegment
                                                pathIdentSegment
                                                  identifier
                                                    interrupt_cells
                                              (
                                              )
                                            .
                                            pathExprSegment
                                              pathIdentSegment
                                                identifier
                                                  unwrap
                                            (
                                            )
                                          ;
                                      statement
                                        letStatement
                                          let
                                          patternNoTopAlt
                                            patternWithoutRange
                                              identifierPattern
                                                identifier
                                                  _intr
                                          =
                                          expression
                                            expression
                                              expression
                                                pathExpression
                                                  pathInExpression
                                                    pathExprSegment
                                                      pathIdentSegment
                                                        identifier
                                                          node
                                              .
                                              pathExprSegment
                                                pathIdentSegment
                                                  identifier
                                                    property
                                              (
                                              callParams
                                                expression
                                                  literalExpression
                                                    "interrupt-parent"
                                              )
                                            .
                                            pathExprSegment
                                              pathIdentSegment
                                                identifier
                                                  and_then
                                            (
                                            callParams
                                              expression
                                                pathExpression
                                                  pathInExpression
                                                    pathExprSegment
                                                      pathIdentSegment
                                                        identifier
                                                          NodeProperty
                                                    ::
                                                    pathExprSegment
                                                      pathIdentSegment
                                                        identifier
                                                          as_usize
                                            )
                                          ;
                                      statement
                                        letStatement
                                          let
                                          patternNoTopAlt
                                            patternWithoutRange
                                              identifierPattern
                                                identifier
                                                  _intr_data
                                          =
                                          expression
                                            expression
                                              pathExpression
                                                pathInExpression
                                                  pathExprSegment
                                                    pathIdentSegment
                                                      identifier
                                                        node
                                            .
                                            pathExprSegment
                                              pathIdentSegment
                                                identifier
                                                  property
                                            (
                                            callParams
                                              expression
                                                literalExpression
                                                  "interrupts"
                                            )
                                          ;
                                      statement
                                        item
                                          macroItem
                                            macroInvocationSemi
                                              simplePath
                                                simplePathSegment
                                                  identifier
                                                    debug
                                              !
                                              (
                                              tokenTree
                                                tokenTreeToken
                                                  macroLiteralToken
                                                    literalExpression
                                                      "{}, compatible = {}, #interrupt-cells = 0x{:08x}, phandle = 0x{:08x}"
                                                tokenTreeToken
                                                  macroPunctuationToken
                                                    ,
                                                tokenTreeToken
                                                  macroIdentifierLikeToken
                                                    identifier
                                                      node
                                                tokenTreeToken
                                                  macroPunctuationToken
                                                    .
                                                tokenTreeToken
                                                  macroIdentifierLikeToken
                                                    identifier
                                                      name
                                                tokenTreeToken
                                                  macroPunctuationToken
                                                    ,
                                                tokenTreeToken
                                                  macroIdentifierLikeToken
                                                    identifier
                                                      compatible
                                                tokenTreeToken
                                                  macroPunctuationToken
                                                    ,
                                                tokenTreeToken
                                                  macroIdentifierLikeToken
                                                    identifier
                                                      intr_cells
                                                tokenTreeToken
                                                  macroPunctuationToken
                                                    ,
                                                tokenTreeToken
                                                  macroIdentifierLikeToken
                                                    identifier
                                                      phandle
                                              )
                                              ;
                                      statement
                                        expressionStatement
                                          expressionWithBlock
                                            ifExpression
                                              if
                                              expression
                                                letExpression
                                                  let
                                                  pattern
                                                    patternNoTopAlt
                                                      patternWithoutRange
                                                        tupleStructPattern
                                                          pathInExpression
                                                            pathExprSegment
                                                              pathIdentSegment
                                                                identifier
                                                                  Some
                                                          (
                                                          tupleStructItems
                                                            pattern
                                                              patternNoTopAlt
                                                                patternWithoutRange
                                                                  identifierPattern
                                                                    identifier
                                                                      intr
                                                          )
                                                  =
                                                  expression
                                                    pathExpression
                                                      pathInExpression
                                                        pathExprSegment
                                                          pathIdentSegment
                                                            identifier
                                                              _intr
                                              blockExpression
                                                {
                                                statements
                                                  statement
                                                    expressionStatement
                                                      expressionWithBlock
                                                        ifExpression
                                                          if
                                                          expression
                                                            letExpression
                                                              let
                                                              pattern
                                                                patternNoTopAlt
                                                                  patternWithoutRange
                                                                    tupleStructPattern
                                                                      pathInExpression
                                                                        pathExprSegment
                                                                          pathIdentSegment
                                                                            identifier
                                                                              Some
                                                                      (
                                                                      tupleStructItems
                                                                        pattern
                                                                          patternNoTopAlt
                                                                            patternWithoutRange
                                                                              identifierPattern
                                                                                identifier
                                                                                  intr_data
                                                                      )
                                                              =
                                                              expression
                                                                pathExpression
                                                                  pathInExpression
                                                                    pathExprSegment
                                                                      pathIdentSegment
                                                                        identifier
                                                                          _intr_data
                                                          blockExpression
                                                            {
                                                            statements
                                                              statement
                                                                item
                                                                  macroItem
                                                                    macroInvocationSemi
                                                                      simplePath
                                                                        simplePathSegment
                                                                          identifier
                                                                            debug
                                                                      !
                                                                      (
                                                                      tokenTree
                                                                        tokenTreeToken
                                                                          macroLiteralToken
                                                                            literalExpression
                                                                              "interrupt-parent = 0x{:08x}"
                                                                        tokenTreeToken
                                                                          macroPunctuationToken
                                                                            ,
                                                                        tokenTreeToken
                                                                          macroIdentifierLikeToken
                                                                            identifier
                                                                              intr
                                                                      )
                                                                      ;
                                                              statement
                                                                item
                                                                  macroItem
                                                                    macroInvocationSemi
                                                                      simplePath
                                                                        simplePathSegment
                                                                          identifier
                                                                            debug
                                                                      !
                                                                      (
                                                                      tokenTree
                                                                        tokenTreeToken
                                                                          macroLiteralToken
                                                                            literalExpression
                                                                              "interrupts begin:"
                                                                      )
                                                                      ;
                                                              statement
                                                                expressionStatement
                                                                  expressionWithBlock
                                                                    loopExpression
                                                                      iteratorLoopExpression
                                                                        for
                                                                        pattern
                                                                          patternNoTopAlt
                                                                            patternWithoutRange
                                                                              identifierPattern
                                                                                identifier
                                                                                  chunk
                                                                        in
                                                                        expression
                                                                          expression
                                                                            expression
                                                                              pathExpression
                                                                                pathInExpression
                                                                                  pathExprSegment
                                                                                    pathIdentSegment
                                                                                      identifier
                                                                                        intr_data
                                                                            .
                                                                            identifier
                                                                              value
                                                                          .
                                                                          pathExprSegment
                                                                            pathIdentSegment
                                                                              identifier
                                                                                chunks
                                                                          (
                                                                          callParams
                                                                            expression
                                                                              literalExpression
                                                                                4
                                                                          )
                                                                        blockExpression
                                                                          {
                                                                          statements
                                                                            statement
                                                                              item
                                                                                macroItem
                                                                                  macroInvocationSemi
                                                                                    simplePath
                                                                                      simplePathSegment
                                                                                        identifier
                                                                                          debug
                                                                                    !
                                                                                    (
                                                                                    tokenTree
                                                                                      tokenTreeToken
                                                                                        macroLiteralToken
                                                                                          literalExpression
                                                                                            "0x{:08x}, "
                                                                                      tokenTreeToken
                                                                                        macroPunctuationToken
                                                                                          ,
                                                                                      tokenTreeToken
                                                                                        macroIdentifierLikeToken
                                                                                          identifier
                                                                                            BE
                                                                                      tokenTreeToken
                                                                                        macroPunctuationToken
                                                                                          ::
                                                                                      tokenTreeToken
                                                                                        macroIdentifierLikeToken
                                                                                          identifier
                                                                                            read_u32
                                                                                    tokenTree
                                                                                      delimTokenTree
                                                                                        (
                                                                                        tokenTree
                                                                                          tokenTreeToken
                                                                                            macroIdentifierLikeToken
                                                                                              identifier
                                                                                                chunk
                                                                                        )
                                                                                    )
                                                                                    ;
                                                                          }
                                                              statement
                                                                item
                                                                  macroItem
                                                                    macroInvocationSemi
                                                                      simplePath
                                                                        simplePathSegment
                                                                          identifier
                                                                            debug
                                                                      !
                                                                      (
                                                                      tokenTree
                                                                        tokenTreeToken
                                                                          macroLiteralToken
                                                                            literalExpression
                                                                              "interrupts end"
                                                                      )
                                                                      ;
                                                            }
                                                }
                                    }
                        }
          }
  item
    outerAttribute
      #
      [
      attr
        simplePath
          simplePathSegment
            identifier
              allow
        attrInput
          delimTokenTree
            (
            tokenTree
              tokenTreeToken
                macroIdentifierLikeToken
                  identifier
                    unused
            )
      ]
    visItem
      visibility
        pub
      function_
        functionQualifiers
        fn
        identifier
          register_memory_ranges
        (
        functionParameters
          functionParam
            functionParamPattern
              pattern
                patternNoTopAlt
                  patternWithoutRange
                    identifierPattern
                      identifier
                        dt
              :
              type_
                typeNoBounds
                  referenceType
                    &
                    typeNoBounds
                      traitObjectTypeOneBound
                        traitBound
                          typePath
                            typePathSegment
                              pathIdentSegment
                                identifier
                                  Fdt
        )
        blockExpression
          {
          statements
            statement
              expressionStatement
                expressionWithBlock
                  loopExpression
                    iteratorLoopExpression
                      for
                      pattern
                        patternNoTopAlt
                          patternWithoutRange
                            identifierPattern
                              identifier
                                chunk
                      in
                      expression
                        expression
                          expression
                            pathExpression
                              pathInExpression
                                pathExprSegment
                                  pathIdentSegment
                                    identifier
                                      dt
                          .
                          pathExprSegment
                            pathIdentSegment
                              identifier
                                memory
                          (
                          )
                        .
                        pathExprSegment
                          pathIdentSegment
                            identifier
                              regions
                        (
                        )
                      blockExpression
                        {
                        statements
                          statement
                            expressionStatement
                              expressionWithBlock
                                ifExpression
                                  if
                                  expression
                                    letExpression
                                      let
                                      pattern
                                        patternNoTopAlt
                                          patternWithoutRange
                                            tupleStructPattern
                                              pathInExpression
                                                pathExprSegment
                                                  pathIdentSegment
                                                    identifier
                                                      Some
                                              (
                                              tupleStructItems
                                                pattern
                                                  patternNoTopAlt
                                                    patternWithoutRange
                                                      identifierPattern
                                                        identifier
                                                          size
                                              )
                                      =
                                      expression
                                        expression
                                          pathExpression
                                            pathInExpression
                                              pathExprSegment
                                                pathIdentSegment
                                                  identifier
                                                    chunk
                                        .
                                        identifier
                                          size
                                  blockExpression
                                    {
                                    statements
                                      statement
                                        expressionStatement
                                          expression
                                            expression
                                              pathExpression
                                                pathInExpression
                                                  pathExprSegment
                                                    pathIdentSegment
                                                      identifier
                                                        register_memory_region
                                            (
                                            callParams
                                              expression
                                                expression
                                                  expression
                                                    pathExpression
                                                      pathInExpression
                                                        pathExprSegment
                                                          pathIdentSegment
                                                            identifier
                                                              chunk
                                                  .
                                                  identifier
                                                    starting_address
                                                as
                                                typeNoBounds
                                                  traitObjectTypeOneBound
                                                    traitBound
                                                      typePath
                                                        typePathSegment
                                                          pathIdentSegment
                                                            identifier
                                                              usize
                                              ,
                                              expression
                                                pathExpression
                                                  pathInExpression
                                                    pathExprSegment
                                                      pathIdentSegment
                                                        identifier
                                                          size
                                              ,
                                              expression
                                                pathExpression
                                                  pathInExpression
                                                    pathExprSegment
                                                      pathIdentSegment
                                                        identifier
                                                          BootloaderMemoryKind
                                                    ::
                                                    pathExprSegment
                                                      pathIdentSegment
                                                        identifier
                                                          Free
                                              ,
                                            )
                                          ;
                                    }
                        }
          }
  item
    visItem
      visibility
        pub
      function_
        functionQualifiers
        fn
        identifier
          register_dev_memory_ranges
        (
        functionParameters
          functionParam
            functionParamPattern
              pattern
                patternNoTopAlt
                  patternWithoutRange
                    identifierPattern
                      identifier
                        dt
              :
              type_
                typeNoBounds
                  referenceType
                    &
                    typeNoBounds
                      traitObjectTypeOneBound
                        traitBound
                          typePath
                            typePathSegment
                              pathIdentSegment
                                identifier
                                  Fdt
        )
        blockExpression
          {
          statements
            statement
              expressionStatement
                expressionWithBlock
                  ifExpression
                    if
                    expression
                      macroInvocation
                        simplePath
                          simplePathSegment
                            identifier
                              cfg
                        !
                        delimTokenTree
                          (
                          tokenTree
                            tokenTreeToken
                              macroIdentifierLikeToken
                                identifier
                                  target_arch
                            tokenTreeToken
                              macroPunctuationToken
                                =
                            tokenTreeToken
                              macroLiteralToken
                                literalExpression
                                  "aarch64"
                          )
                    blockExpression
                      {
                      statements
                        statement
                          letStatement
                            let
                            patternNoTopAlt
                              patternWithoutRange
                                identifierPattern
                                  identifier
                                    root_node
                            =
                            expression
                              expression
                                pathExpression
                                  pathInExpression
                                    pathExprSegment
                                      pathIdentSegment
                                        identifier
                                          dt
                              .
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    root
                              (
                              )
                            ;
                        statement
                          letStatement
                            let
                            patternNoTopAlt
                              patternWithoutRange
                                identifierPattern
                                  identifier
                                    is_qemu_virt
                            =
                            expression
                              expression
                                expression
                                  pathExpression
                                    pathInExpression
                                      pathExprSegment
                                        pathIdentSegment
                                          identifier
                                            root_node
                                .
                                pathExprSegment
                                  pathIdentSegment
                                    identifier
                                      model
                                (
                                )
                              .
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    contains
                              (
                              callParams
                                expression
                                  literalExpression
                                    "linux,dummy-virt"
                              )
                            ;
                        statement
                          expressionStatement
                            expressionWithBlock
                              ifExpression
                                if
                                expression
                                  pathExpression
                                    pathInExpression
                                      pathExprSegment
                                        pathIdentSegment
                                          identifier
                                            is_qemu_virt
                                blockExpression
                                  {
                                  statements
                                    statement
                                      expressionStatement
                                        expression
                                          expression
                                            pathExpression
                                              pathInExpression
                                                pathExprSegment
                                                  pathIdentSegment
                                                    identifier
                                                      register_memory_region
                                          (
                                          callParams
                                            expression
                                              literalExpression
                                                0x08000000
                                            ,
                                            expression
                                              literalExpression
                                                0x08000000
                                            ,
                                            expression
                                              pathExpression
                                                pathInExpression
                                                  pathExprSegment
                                                    pathIdentSegment
                                                      identifier
                                                        BootloaderMemoryKind
                                                  ::
                                                  pathExprSegment
                                                    pathIdentSegment
                                                      identifier
                                                        Device
                                          )
                                        ;
                                    statement
                                      expressionStatement
                                        expression
                                          expression
                                            pathExpression
                                              pathInExpression
                                                pathExprSegment
                                                  pathIdentSegment
                                                    identifier
                                                      register_memory_region
                                          (
                                          callParams
                                            expression
                                              literalExpression
                                                0x10000000
                                            ,
                                            expression
                                              literalExpression
                                                0x30000000
                                            ,
                                            expression
                                              pathExpression
                                                pathInExpression
                                                  pathExprSegment
                                                    pathIdentSegment
                                                      identifier
                                                        BootloaderMemoryKind
                                                  ::
                                                  pathExprSegment
                                                    pathIdentSegment
                                                      identifier
                                                        Device
                                          )
                                        ;
                                    statement
                                      expressionStatement
                                        expression
                                          return
                                        ;
                                  }
                      }
            statement
              letStatement
                let
                patternNoTopAlt
                  patternWithoutRange
                    tupleStructPattern
                      pathInExpression
                        pathExprSegment
                          pathIdentSegment
                            identifier
                              Some
                      (
                      tupleStructItems
                        pattern
                          patternNoTopAlt
                            patternWithoutRange
                              identifierPattern
                                identifier
                                  soc_node
                      )
                =
                expression
                  expression
                    pathExpression
                      pathInExpression
                        pathExprSegment
                          pathIdentSegment
                            identifier
                              dt
                  .
                  pathExprSegment
                    pathIdentSegment
                      identifier
                        find_node
                  (
                  callParams
                    expression
                      literalExpression
                        "/soc"
                  )
                else
                blockExpression
                  {
                  statements
                    statement
                      item
                        macroItem
                          macroInvocationSemi
                            simplePath
                              simplePathSegment
                                identifier
                                  log
                              ::
                              simplePathSegment
                                identifier
                                  warn
                            !
                            (
                            tokenTree
                              tokenTreeToken
                                macroLiteralToken
                                  literalExpression
                                    "failed to find /soc in devicetree"
                            )
                            ;
                    statement
                      expressionStatement
                        expression
                          return
                        ;
                  }
                ;
            statement
              letStatement
                let
                patternNoTopAlt
                  patternWithoutRange
                    tupleStructPattern
                      pathInExpression
                        pathExprSegment
                          pathIdentSegment
                            identifier
                              Some
                      (
                      tupleStructItems
                        pattern
                          patternNoTopAlt
                            patternWithoutRange
                              identifierPattern
                                identifier
                                  reg
                      )
                =
                expression
                  expression
                    pathExpression
                      pathInExpression
                        pathExprSegment
                          pathIdentSegment
                            identifier
                              soc_node
                  .
                  pathExprSegment
                    pathIdentSegment
                      identifier
                        ranges
                  (
                  )
                else
                blockExpression
                  {
                  statements
                    statement
                      item
                        macroItem
                          macroInvocationSemi
                            simplePath
                              simplePathSegment
                                identifier
                                  log
                              ::
                              simplePathSegment
                                identifier
                                  warn
                            !
                            (
                            tokenTree
                              tokenTreeToken
                                macroLiteralToken
                                  literalExpression
                                    "devicetree /soc has no ranges"
                            )
                            ;
                    statement
                      expressionStatement
                        expression
                          return
                        ;
                  }
                ;
            statement
              expressionStatement
                expressionWithBlock
                  loopExpression
                    iteratorLoopExpression
                      for
                      pattern
                        patternNoTopAlt
                          patternWithoutRange
                            identifierPattern
                              identifier
                                chunk
                      in
                      expression
                        pathExpression
                          pathInExpression
                            pathExprSegment
                              pathIdentSegment
                                identifier
                                  reg
                      blockExpression
                        {
                        statements
                          statement
                            item
                              macroItem
                                macroInvocationSemi
                                  simplePath
                                    simplePathSegment
                                      identifier
                                        log
                                    ::
                                    simplePathSegment
                                      identifier
                                        debug
                                  !
                                  (
                                  tokenTree
                                    tokenTreeToken
                                      macroLiteralToken
                                        literalExpression
                                          "dev mem 0x{:08x} 0x{:08x} 0x{:08x} 0x{:08x}"
                                    tokenTreeToken
                                      macroPunctuationToken
                                        ,
                                    tokenTreeToken
                                      macroIdentifierLikeToken
                                        identifier
                                          chunk
                                    tokenTreeToken
                                      macroPunctuationToken
                                        .
                                    tokenTreeToken
                                      macroIdentifierLikeToken
                                        identifier
                                          child_bus_address_hi
                                    tokenTreeToken
                                      macroPunctuationToken
                                        ,
                                    tokenTreeToken
                                      macroIdentifierLikeToken
                                        identifier
                                          chunk
                                    tokenTreeToken
                                      macroPunctuationToken
                                        .
                                    tokenTreeToken
                                      macroIdentifierLikeToken
                                        identifier
                                          child_bus_address
                                    tokenTreeToken
                                      macroPunctuationToken
                                        ,
                                    tokenTreeToken
                                      macroIdentifierLikeToken
                                        identifier
                                          chunk
                                    tokenTreeToken
                                      macroPunctuationToken
                                        .
                                    tokenTreeToken
                                      macroIdentifierLikeToken
                                        identifier
                                          parent_bus_address
                                    tokenTreeToken
                                      macroPunctuationToken
                                        ,
                                    tokenTreeToken
                                      macroIdentifierLikeToken
                                        identifier
                                          chunk
                                    tokenTreeToken
                                      macroPunctuationToken
                                        .
                                    tokenTreeToken
                                      macroIdentifierLikeToken
                                        identifier
                                          size
                                  )
                                  ;
                          statement
                            expressionStatement
                              expression
                                expression
                                  pathExpression
                                    pathInExpression
                                      pathExprSegment
                                        pathIdentSegment
                                          identifier
                                            register_memory_region
                                (
                                callParams
                                  expression
                                    expression
                                      pathExpression
                                        pathInExpression
                                          pathExprSegment
                                            pathIdentSegment
                                              identifier
                                                chunk
                                    .
                                    identifier
                                      parent_bus_address
                                  ,
                                  expression
                                    expression
                                      pathExpression
                                        pathInExpression
                                          pathExprSegment
                                            pathIdentSegment
                                              identifier
                                                chunk
                                    .
                                    identifier
                                      size
                                  ,
                                  expression
                                    pathExpression
                                      pathInExpression
                                        pathExprSegment
                                          pathIdentSegment
                                            identifier
                                              BootloaderMemoryKind
                                        ::
                                        pathExprSegment
                                          pathIdentSegment
                                            identifier
                                              Device
                                  ,
                                )
                              ;
                        }
            statement
              expressionStatement
                expressionWithBlock
                  loopExpression
                    iteratorLoopExpression
                      for
                      pattern
                        patternNoTopAlt
                          patternWithoutRange
                            identifierPattern
                              identifier
                                device
                      in
                      expression
                        expression
                          pathExpression
                            pathInExpression
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    soc_node
                        .
                        pathExprSegment
                          pathIdentSegment
                            identifier
                              children
                        (
                        )
                      blockExpression
                        {
                        statements
                          statement
                            expressionStatement
                              expressionWithBlock
                                ifExpression
                                  if
                                  expression
                                    letExpression
                                      let
                                      pattern
                                        patternNoTopAlt
                                          patternWithoutRange
                                            tupleStructPattern
                                              pathInExpression
                                                pathExprSegment
                                                  pathIdentSegment
                                                    identifier
                                                      Some
                                              (
                                              tupleStructItems
                                                pattern
                                                  patternNoTopAlt
                                                    patternWithoutRange
                                                      identifierPattern
                                                        identifier
                                                          reg
                                              )
                                      =
                                      expression
                                        expression
                                          pathExpression
                                            pathInExpression
                                              pathExprSegment
                                                pathIdentSegment
                                                  identifier
                                                    device
                                        .
                                        pathExprSegment
                                          pathIdentSegment
                                            identifier
                                              reg
                                        (
                                        )
                                  blockExpression
                                    {
                                    statements
                                      statement
                                        expressionStatement
                                          expressionWithBlock
                                            loopExpression
                                              iteratorLoopExpression
                                                for
                                                pattern
                                                  patternNoTopAlt
                                                    patternWithoutRange
                                                      identifierPattern
                                                        identifier
                                                          entry
                                                in
                                                expression
                                                  pathExpression
                                                    pathInExpression
                                                      pathExprSegment
                                                        pathIdentSegment
                                                          identifier
                                                            reg
                                                blockExpression
                                                  {
                                                  statements
                                                    statement
                                                      expressionStatement
                                                        expressionWithBlock
                                                          ifExpression
                                                            if
                                                            expression
                                                              letExpression
                                                                let
                                                                pattern
                                                                  patternNoTopAlt
                                                                    patternWithoutRange
                                                                      tupleStructPattern
                                                                        pathInExpression
                                                                          pathExprSegment
                                                                            pathIdentSegment
                                                                              identifier
                                                                                Some
                                                                        (
                                                                        tupleStructItems
                                                                          pattern
                                                                            patternNoTopAlt
                                                                              patternWithoutRange
                                                                                identifierPattern
                                                                                  identifier
                                                                                    size
                                                                        )
                                                                =
                                                                expression
                                                                  expression
                                                                    pathExpression
                                                                      pathInExpression
                                                                        pathExprSegment
                                                                          pathIdentSegment
                                                                            identifier
                                                                              entry
                                                                  .
                                                                  identifier
                                                                    size
                                                            blockExpression
                                                              {
                                                              statements
                                                                statement
                                                                  letStatement
                                                                    let
                                                                    patternNoTopAlt
                                                                      patternWithoutRange
                                                                        identifierPattern
                                                                          identifier
                                                                            addr
                                                                    =
                                                                    expression
                                                                      expression
                                                                        expression
                                                                          pathExpression
                                                                            pathInExpression
                                                                              pathExprSegment
                                                                                pathIdentSegment
                                                                                  identifier
                                                                                    entry
                                                                        .
                                                                        identifier
                                                                          starting_address
                                                                      as
                                                                      typeNoBounds
                                                                        traitObjectTypeOneBound
                                                                          traitBound
                                                                            typePath
                                                                              typePathSegment
                                                                                pathIdentSegment
                                                                                  identifier
                                                                                    usize
                                                                    ;
                                                                statement
                                                                  expressionStatement
                                                                    expressionWithBlock
                                                                      ifExpression
                                                                        if
                                                                        expression
                                                                          letExpression
                                                                            let
                                                                            pattern
                                                                              patternNoTopAlt
                                                                                patternWithoutRange
                                                                                  tupleStructPattern
                                                                                    pathInExpression
                                                                                      pathExprSegment
                                                                                        pathIdentSegment
                                                                                          identifier
                                                                                            Some
                                                                                    (
                                                                                    tupleStructItems
                                                                                      pattern
                                                                                        patternNoTopAlt
                                                                                          patternWithoutRange
                                                                                            identifierPattern
                                                                                              identifier
                                                                                                mapped_addr
                                                                                    )
                                                                            =
                                                                            expression
                                                                              expression
                                                                                pathExpression
                                                                                  pathInExpression
                                                                                    pathExprSegment
                                                                                      pathIdentSegment
                                                                                        identifier
                                                                                          get_mmio_address
                                                                              (
                                                                              callParams
                                                                                expression
                                                                                  pathExpression
                                                                                    pathInExpression
                                                                                      pathExprSegment
                                                                                        pathIdentSegment
                                                                                          identifier
                                                                                            dt
                                                                                ,
                                                                                expression
                                                                                  &
                                                                                  expression
                                                                                    pathExpression
                                                                                      pathInExpression
                                                                                        pathExprSegment
                                                                                          pathIdentSegment
                                                                                            identifier
                                                                                              device
                                                                                ,
                                                                                expression
                                                                                  &
                                                                                  expression
                                                                                    pathExpression
                                                                                      pathInExpression
                                                                                        pathExprSegment
                                                                                          pathIdentSegment
                                                                                            identifier
                                                                                              entry
                                                                              )
                                                                        blockExpression
                                                                          {
                                                                          statements
                                                                            statement
                                                                              item
                                                                                macroItem
                                                                                  macroInvocationSemi
                                                                                    simplePath
                                                                                      simplePathSegment
                                                                                        identifier
                                                                                          debug
                                                                                    !
                                                                                    (
                                                                                    tokenTree
                                                                                      tokenTreeToken
                                                                                        macroLiteralToken
                                                                                          literalExpression
                                                                                            "soc device {} 0x{:08x} -> 0x{:08x} size 0x{:08x}"
                                                                                      tokenTreeToken
                                                                                        macroPunctuationToken
                                                                                          ,
                                                                                      tokenTreeToken
                                                                                        macroIdentifierLikeToken
                                                                                          identifier
                                                                                            device
                                                                                      tokenTreeToken
                                                                                        macroPunctuationToken
                                                                                          .
                                                                                      tokenTreeToken
                                                                                        macroIdentifierLikeToken
                                                                                          identifier
                                                                                            name
                                                                                      tokenTreeToken
                                                                                        macroPunctuationToken
                                                                                          ,
                                                                                      tokenTreeToken
                                                                                        macroIdentifierLikeToken
                                                                                          identifier
                                                                                            addr
                                                                                      tokenTreeToken
                                                                                        macroPunctuationToken
                                                                                          ,
                                                                                      tokenTreeToken
                                                                                        macroIdentifierLikeToken
                                                                                          identifier
                                                                                            mapped_addr
                                                                                      tokenTreeToken
                                                                                        macroPunctuationToken
                                                                                          ,
                                                                                      tokenTreeToken
                                                                                        macroIdentifierLikeToken
                                                                                          identifier
                                                                                            size
                                                                                    )
                                                                                    ;
                                                                            statement
                                                                              expressionStatement
                                                                                expression
                                                                                  expression
                                                                                    pathExpression
                                                                                      pathInExpression
                                                                                        pathExprSegment
                                                                                          pathIdentSegment
                                                                                            identifier
                                                                                              register_memory_region
                                                                                  (
                                                                                  callParams
                                                                                    expression
                                                                                      pathExpression
                                                                                        pathInExpression
                                                                                          pathExprSegment
                                                                                            pathIdentSegment
                                                                                              identifier
                                                                                                mapped_addr
                                                                                    ,
                                                                                    expression
                                                                                      pathExpression
                                                                                        pathInExpression
                                                                                          pathExprSegment
                                                                                            pathIdentSegment
                                                                                              identifier
                                                                                                size
                                                                                    ,
                                                                                    expression
                                                                                      pathExpression
                                                                                        pathInExpression
                                                                                          pathExprSegment
                                                                                            pathIdentSegment
                                                                                              identifier
                                                                                                BootloaderMemoryKind
                                                                                          ::
                                                                                          pathExprSegment
                                                                                            pathIdentSegment
                                                                                              identifier
                                                                                                Device
                                                                                  )
                                                                                ;
                                                                          }
                                                              }
                                                  }
                                    }
                        }
          }
  item
    visItem
      visibility
        pub
      function_
        functionQualifiers
        fn
        identifier
          get_mmio_address
        (
        functionParameters
          functionParam
            functionParamPattern
              pattern
                patternNoTopAlt
                  patternWithoutRange
                    identifierPattern
                      identifier
                        fdt
              :
              type_
                typeNoBounds
                  referenceType
                    &
                    typeNoBounds
                      traitObjectTypeOneBound
                        traitBound
                          typePath
                            typePathSegment
                              pathIdentSegment
                                identifier
                                  Fdt
          ,
          functionParam
            functionParamPattern
              pattern
                patternNoTopAlt
                  patternWithoutRange
                    identifierPattern
                      identifier
                        _device
              :
              type_
                typeNoBounds
                  referenceType
                    &
                    typeNoBounds
                      traitObjectTypeOneBound
                        traitBound
                          typePath
                            typePathSegment
                              pathIdentSegment
                                identifier
                                  FdtNode
          ,
          functionParam
            functionParamPattern
              pattern
                patternNoTopAlt
                  patternWithoutRange
                    identifierPattern
                      identifier
                        region
              :
              type_
                typeNoBounds
                  referenceType
                    &
                    typeNoBounds
                      traitObjectTypeOneBound
                        traitBound
                          typePath
                            typePathSegment
                              pathIdentSegment
                                identifier
                                  MemoryRegion
        )
        functionReturnType
          ->
          type_
            typeNoBounds
              traitObjectTypeOneBound
                traitBound
                  typePath
                    typePathSegment
                      pathIdentSegment
                        identifier
                          Option
                      genericArgs
                        <
                        genericArgsTypes
                          type_
                            typeNoBounds
                              traitObjectTypeOneBound
                                traitBound
                                  typePath
                                    typePathSegment
                                      pathIdentSegment
                                        identifier
                                          usize
                        >
        blockExpression
          {
          statements
            statement
              letStatement
                let
                patternNoTopAlt
                  patternWithoutRange
                    identifierPattern
                      mut
                      identifier
                        mapped_addr
                =
                expression
                  expression
                    expression
                      pathExpression
                        pathInExpression
                          pathExprSegment
                            pathIdentSegment
                              identifier
                                region
                    .
                    identifier
                      starting_address
                  as
                  typeNoBounds
                    traitObjectTypeOneBound
                      traitBound
                        typePath
                          typePathSegment
                            pathIdentSegment
                              identifier
                                usize
                ;
            statement
              letStatement
                let
                patternNoTopAlt
                  patternWithoutRange
                    identifierPattern
                      identifier
                        size
                =
                expression
                  expression
                    expression
                      expression
                        pathExpression
                          pathInExpression
                            pathExprSegment
                              pathIdentSegment
                                identifier
                                  region
                      .
                      identifier
                        size
                    .
                    pathExprSegment
                      pathIdentSegment
                        identifier
                          unwrap_or
                    (
                    callParams
                      expression
                        literalExpression
                          0
                    )
                  .
                  pathExprSegment
                    pathIdentSegment
                      identifier
                        saturating_sub
                  (
                  callParams
                    expression
                      literalExpression
                        1
                  )
                ;
            statement
              letStatement
                let
                patternNoTopAlt
                  patternWithoutRange
                    identifierPattern
                      identifier
                        last_address
                =
                expression
                  expression
                    pathExpression
                      pathInExpression
                        pathExprSegment
                          pathIdentSegment
                            identifier
                              mapped_addr
                  .
                  pathExprSegment
                    pathIdentSegment
                      identifier
                        saturating_add
                  (
                  callParams
                    expression
                      pathExpression
                        pathInExpression
                          pathExprSegment
                            pathIdentSegment
                              identifier
                                size
                  )
                ;
            statement
              expressionStatement
                expressionWithBlock
                  ifExpression
                    if
                    expression
                      letExpression
                        let
                        pattern
                          patternNoTopAlt
                            patternWithoutRange
                              tupleStructPattern
                                pathInExpression
                                  pathExprSegment
                                    pathIdentSegment
                                      identifier
                                        Some
                                (
                                tupleStructItems
                                  pattern
                                    patternNoTopAlt
                                      patternWithoutRange
                                        identifierPattern
                                          identifier
                                            parent
                                )
                        =
                        expression
                          expression
                            pathExpression
                              pathInExpression
                                pathExprSegment
                                  pathIdentSegment
                                    identifier
                                      fdt
                          .
                          pathExprSegment
                            pathIdentSegment
                              identifier
                                find_node
                          (
                          callParams
                            expression
                              literalExpression
                                "/soc"
                          )
                    blockExpression
                      {
                      statements
                        statement
                          letStatement
                            let
                            patternNoTopAlt
                              patternWithoutRange
                                identifierPattern
                                  mut
                                  identifier
                                    ranges
                            =
                            expression
                              expression
                                expression
                                  expression
                                    pathExpression
                                      pathInExpression
                                        pathExprSegment
                                          pathIdentSegment
                                            identifier
                                              parent
                                  .
                                  pathExprSegment
                                    pathIdentSegment
                                      identifier
                                        ranges
                                  (
                                  )
                                .
                                pathExprSegment
                                  pathIdentSegment
                                    identifier
                                      map
                                (
                                callParams
                                  expression
                                    closureExpression
                                      |
                                      closureParameters
                                        closureParam
                                          pattern
                                            patternNoTopAlt
                                              patternWithoutRange
                                                identifierPattern
                                                  identifier
                                                    f
                                      |
                                      expression
                                        expression
                                          pathExpression
                                            pathInExpression
                                              pathExprSegment
                                                pathIdentSegment
                                                  identifier
                                                    f
                                        .
                                        pathExprSegment
                                          pathIdentSegment
                                            identifier
                                              peekable
                                        (
                                        )
                                )
                              ?
                            ;
                        statement
                          expressionStatement
                            expressionWithBlock
                              ifExpression
                                if
                                expression
                                  expression
                                    expression
                                      pathExpression
                                        pathInExpression
                                          pathExprSegment
                                            pathIdentSegment
                                              identifier
                                                ranges
                                    .
                                    pathExprSegment
                                      pathIdentSegment
                                        identifier
                                          peek
                                    (
                                    )
                                  .
                                  pathExprSegment
                                    pathIdentSegment
                                      identifier
                                        is_some
                                  (
                                  )
                                blockExpression
                                  {
                                  statements
                                    statement
                                      letStatement
                                        let
                                        patternNoTopAlt
                                          patternWithoutRange
                                            identifierPattern
                                              identifier
                                                parent_range
                                        =
                                        expression
                                          expression
                                            expression
                                              pathExpression
                                                pathInExpression
                                                  pathExprSegment
                                                    pathIdentSegment
                                                      identifier
                                                        ranges
                                            .
                                            pathExprSegment
                                              pathIdentSegment
                                                identifier
                                                  find
                                            (
                                            callParams
                                              expression
                                                closureExpression
                                                  |
                                                  closureParameters
                                                    closureParam
                                                      pattern
                                                        patternNoTopAlt
                                                          patternWithoutRange
                                                            identifierPattern
                                                              identifier
                                                                x
                                                  |
                                                  expression
                                                    expressionWithBlock
                                                      blockExpression
                                                        {
                                                        statements
                                                          expression
                                                            expression
                                                              expression
                                                                expression
                                                                  pathExpression
                                                                    pathInExpression
                                                                      pathExprSegment
                                                                        pathIdentSegment
                                                                          identifier
                                                                            x
                                                                .
                                                                identifier
                                                                  child_bus_address
                                                              comparisonOperator
                                                                <=
                                                              expression
                                                                pathExpression
                                                                  pathInExpression
                                                                    pathExprSegment
                                                                      pathIdentSegment
                                                                        identifier
                                                                          mapped_addr
                                                            &&
                                                            expression
                                                              expression
                                                                expression
                                                                  pathExpression
                                                                    pathInExpression
                                                                      pathExprSegment
                                                                        pathIdentSegment
                                                                          identifier
                                                                            last_address
                                                                -
                                                                expression
                                                                  expression
                                                                    pathExpression
                                                                      pathInExpression
                                                                        pathExprSegment
                                                                          pathIdentSegment
                                                                            identifier
                                                                              x
                                                                  .
                                                                  identifier
                                                                    child_bus_address
                                                              comparisonOperator
                                                                <=
                                                              expression
                                                                expression
                                                                  pathExpression
                                                                    pathInExpression
                                                                      pathExprSegment
                                                                        pathIdentSegment
                                                                          identifier
                                                                            x
                                                                .
                                                                identifier
                                                                  size
                                                        }
                                            )
                                          ?
                                        ;
                                    statement
                                      expressionStatement
                                        expression
                                          expression
                                            pathExpression
                                              pathInExpression
                                                pathExprSegment
                                                  pathIdentSegment
                                                    identifier
                                                      mapped_addr
                                          =
                                          expression
                                            expression
                                              expression
                                                expression
                                                  pathExpression
                                                    pathInExpression
                                                      pathExprSegment
                                                        pathIdentSegment
                                                          identifier
                                                            parent_range
                                                .
                                                identifier
                                                  parent_bus_address
                                              .
                                              pathExprSegment
                                                pathIdentSegment
                                                  identifier
                                                    checked_add
                                              (
                                              callParams
                                                expression
                                                  expression
                                                    pathExpression
                                                      pathInExpression
                                                        pathExprSegment
                                                          pathIdentSegment
                                                            identifier
                                                              mapped_addr
                                                  -
                                                  expression
                                                    expression
                                                      pathExpression
                                                        pathInExpression
                                                          pathExprSegment
                                                            pathIdentSegment
                                                              identifier
                                                                parent_range
                                                    .
                                                    identifier
                                                      child_bus_address
                                              )
                                            ?
                                        ;
                                    statement
                                      letStatement
                                        let
                                        patternNoTopAlt
                                          patternWithoutRange
                                            wildcardPattern
                                              _
                                        =
                                        expression
                                          expression
                                            expression
                                              pathExpression
                                                pathInExpression
                                                  pathExprSegment
                                                    pathIdentSegment
                                                      identifier
                                                        mapped_addr
                                            .
                                            pathExprSegment
                                              pathIdentSegment
                                                identifier
                                                  checked_add
                                            (
                                            callParams
                                              expression
                                                pathExpression
                                                  pathInExpression
                                                    pathExprSegment
                                                      pathIdentSegment
                                                        identifier
                                                          size
                                            )
                                          ?
                                        ;
                                  }
                      }
            expression
              expression
                pathExpression
                  pathInExpression
                    pathExprSegment
                      pathIdentSegment
                        identifier
                          Some
              (
              callParams
                expression
                  pathExpression
                    pathInExpression
                      pathExprSegment
                        pathIdentSegment
                          identifier
                            mapped_addr
              )
          }
  item
    visItem
      visibility
        pub
      function_
        functionQualifiers
        fn
        identifier
          interrupt_parent
        genericParams
          <
          genericParam
            lifetimeParam
              'a
          >
        (
        functionParameters
          functionParam
            functionParamPattern
              pattern
                patternNoTopAlt
                  patternWithoutRange
                    identifierPattern
                      identifier
                        fdt
              :
              type_
                typeNoBounds
                  referenceType
                    &
                    lifetime
                      'a
                    typeNoBounds
                      traitObjectTypeOneBound
                        traitBound
                          typePath
                            typePathSegment
                              pathIdentSegment
                                identifier
                                  Fdt
          ,
          functionParam
            functionParamPattern
              pattern
                patternNoTopAlt
                  patternWithoutRange
                    identifierPattern
                      identifier
                        node
              :
              type_
                typeNoBounds
                  referenceType
                    &
                    lifetime
                      'a
                    typeNoBounds
                      traitObjectTypeOneBound
                        traitBound
                          typePath
                            typePathSegment
                              pathIdentSegment
                                identifier
                                  FdtNode
        )
        functionReturnType
          ->
          type_
            typeNoBounds
              traitObjectTypeOneBound
                traitBound
                  typePath
                    typePathSegment
                      pathIdentSegment
                        identifier
                          Option
                      genericArgs
                        <
                        genericArgsTypes
                          type_
                            typeNoBounds
                              traitObjectTypeOneBound
                                traitBound
                                  typePath
                                    typePathSegment
                                      pathIdentSegment
                                        identifier
                                          FdtNode
                                      genericArgs
                                        <
                                        genericArgsLifetimes
                                          lifetime
                                            'a
                                          ,
                                          lifetime
                                            'a
                                        >
                        >
        blockExpression
          {
          statements
            expression
              expression
                expression
                  expression
                    pathExpression
                      pathInExpression
                        pathExprSegment
                          pathIdentSegment
                            identifier
                              node
                  .
                  pathExprSegment
                    pathIdentSegment
                      identifier
                        interrupt_parent
                  (
                  )
                .
                pathExprSegment
                  pathIdentSegment
                    identifier
                      or_else
                (
                callParams
                  expression
                    closureExpression
                      ||
                      expression
                        expression
                          expression
                            pathExpression
                              pathInExpression
                                pathExprSegment
                                  pathIdentSegment
                                    identifier
                                      fdt
                          .
                          pathExprSegment
                            pathIdentSegment
                              identifier
                                find_node
                          (
                          callParams
                            expression
                              literalExpression
                                "/soc"
                          )
                        .
                        pathExprSegment
                          pathIdentSegment
                            identifier
                              and_then
                        (
                        callParams
                          expression
                            closureExpression
                              |
                              closureParameters
                                closureParam
                                  pattern
                                    patternNoTopAlt
                                      patternWithoutRange
                                        identifierPattern
                                          identifier
                                            soc
                              |
                              expression
                                expression
                                  pathExpression
                                    pathInExpression
                                      pathExprSegment
                                        pathIdentSegment
                                          identifier
                                            soc
                                .
                                pathExprSegment
                                  pathIdentSegment
                                    identifier
                                      interrupt_parent
                                (
                                )
                        )
                )
              .
              pathExprSegment
                pathIdentSegment
                  identifier
                    or_else
              (
              callParams
                expression
                  closureExpression
                    ||
                    expression
                      expression
                        expression
                          pathExpression
                            pathInExpression
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    fdt
                        .
                        pathExprSegment
                          pathIdentSegment
                            identifier
                              find_node
                        (
                        callParams
                          expression
                            literalExpression
                              "/"
                        )
                      .
                      pathExprSegment
                        pathIdentSegment
                          identifier
                            and_then
                      (
                      callParams
                        expression
                          closureExpression
                            |
                            closureParameters
                              closureParam
                                pattern
                                  patternNoTopAlt
                                    patternWithoutRange
                                      identifierPattern
                                        identifier
                                          node
                            |
                            expression
                              expression
                                pathExpression
                                  pathInExpression
                                    pathExprSegment
                                      pathIdentSegment
                                        identifier
                                          node
                              .
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    interrupt_parent
                              (
                              )
                      )
              )
          }
  item
    visItem
      visibility
        pub
      function_
        functionQualifiers
        fn
        identifier
          get_interrupt
        (
        functionParameters
          functionParam
            functionParamPattern
              pattern
                patternNoTopAlt
                  patternWithoutRange
                    identifierPattern
                      identifier
                        fdt
              :
              type_
                typeNoBounds
                  referenceType
                    &
                    typeNoBounds
                      traitObjectTypeOneBound
                        traitBound
                          typePath
                            typePathSegment
                              pathIdentSegment
                                identifier
                                  Fdt
          ,
          functionParam
            functionParamPattern
              pattern
                patternNoTopAlt
                  patternWithoutRange
                    identifierPattern
                      identifier
                        node
              :
              type_
                typeNoBounds
                  referenceType
                    &
                    typeNoBounds
                      traitObjectTypeOneBound
                        traitBound
                          typePath
                            typePathSegment
                              pathIdentSegment
                                identifier
                                  FdtNode
          ,
          functionParam
            functionParamPattern
              pattern
                patternNoTopAlt
                  patternWithoutRange
                    identifierPattern
                      identifier
                        idx
              :
              type_
                typeNoBounds
                  traitObjectTypeOneBound
                    traitBound
                      typePath
                        typePathSegment
                          pathIdentSegment
                            identifier
                              usize
        )
        functionReturnType
          ->
          type_
            typeNoBounds
              traitObjectTypeOneBound
                traitBound
                  typePath
                    typePathSegment
                      pathIdentSegment
                        identifier
                          Option
                      genericArgs
                        <
                        genericArgsTypes
                          type_
                            typeNoBounds
                              traitObjectTypeOneBound
                                traitBound
                                  typePath
                                    typePathSegment
                                      pathIdentSegment
                                        identifier
                                          IrqCell
                        >
        blockExpression
          {
          statements
            statement
              letStatement
                let
                patternNoTopAlt
                  patternWithoutRange
                    identifierPattern
                      identifier
                        interrupts
                =
                expression
                  expression
                    expression
                      pathExpression
                        pathInExpression
                          pathExprSegment
                            pathIdentSegment
                              identifier
                                node
                    .
                    pathExprSegment
                      pathIdentSegment
                        identifier
                          property
                    (
                    callParams
                      expression
                        literalExpression
                          "interrupts"
                    )
                  .
                  pathExprSegment
                    pathIdentSegment
                      identifier
                        unwrap
                  (
                  )
                ;
            statement
              letStatement
                let
                patternNoTopAlt
                  patternWithoutRange
                    identifierPattern
                      identifier
                        parent_interrupt_cells
                =
                expression
                  expression
                    expression
                      expression
                        expression
                          pathExpression
                            pathInExpression
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    interrupt_parent
                        (
                        callParams
                          expression
                            pathExpression
                              pathInExpression
                                pathExprSegment
                                  pathIdentSegment
                                    identifier
                                      fdt
                          ,
                          expression
                            pathExpression
                              pathInExpression
                                pathExprSegment
                                  pathIdentSegment
                                    identifier
                                      node
                        )
                      .
                      pathExprSegment
                        pathIdentSegment
                          identifier
                            unwrap
                      (
                      )
                    .
                    pathExprSegment
                      pathIdentSegment
                        identifier
                          interrupt_cells
                    (
                    )
                  .
                  pathExprSegment
                    pathIdentSegment
                      identifier
                        unwrap
                  (
                  )
                ;
            statement
              letStatement
                let
                patternNoTopAlt
                  patternWithoutRange
                    identifierPattern
                      mut
                      identifier
                        intr
                =
                expression
                  expression
                    expression
                      expression
                        expression
                          pathExpression
                            pathInExpression
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    interrupts
                        .
                        identifier
                          value
                      .
                      pathExprSegment
                        pathIdentSegment
                          identifier
                            array_chunks
                        ::
                        genericArgs
                          <
                          genericArg
                            genericArgsConst
                              literalExpression
                                4
                          >
                      (
                      )
                    .
                    pathExprSegment
                      pathIdentSegment
                        identifier
                          map
                    (
                    callParams
                      expression
                        closureExpression
                          |
                          closureParameters
                            closureParam
                              pattern
                                patternNoTopAlt
                                  patternWithoutRange
                                    identifierPattern
                                      identifier
                                        f
                          |
                          expression
                            expression
                              pathExpression
                                pathInExpression
                                  pathExprSegment
                                    pathIdentSegment
                                      identifier
                                        BE
                                  ::
                                  pathExprSegment
                                    pathIdentSegment
                                      identifier
                                        read_u32
                            (
                            callParams
                              expression
                                pathExpression
                                  pathInExpression
                                    pathExprSegment
                                      pathIdentSegment
                                        identifier
                                          f
                            )
                    )
                  .
                  pathExprSegment
                    pathIdentSegment
                      identifier
                        skip
                  (
                  callParams
                    expression
                      expression
                        pathExpression
                          pathInExpression
                            pathExprSegment
                              pathIdentSegment
                                identifier
                                  parent_interrupt_cells
                      *
                      expression
                        pathExpression
                          pathInExpression
                            pathExprSegment
                              pathIdentSegment
                                identifier
                                  idx
                  )
                ;
            statement
              expressionStatement
                expressionWithBlock
                  matchExpression
                    match
                    expression
                      pathExpression
                        pathInExpression
                          pathExprSegment
                            pathIdentSegment
                              identifier
                                parent_interrupt_cells
                    {
                    matchArms
                      matchArm
                        pattern
                          patternNoTopAlt
                            patternWithoutRange
                              literalPattern
                                1
                      =>
                      matchArmExpression
                        expression
                          expression
                            pathExpression
                              pathInExpression
                                pathExprSegment
                                  pathIdentSegment
                                    identifier
                                      Some
                          (
                          callParams
                            expression
                              expression
                                pathExpression
                                  pathInExpression
                                    pathExprSegment
                                      pathIdentSegment
                                        identifier
                                          IrqCell
                                    ::
                                    pathExprSegment
                                      pathIdentSegment
                                        identifier
                                          L1
                              (
                              callParams
                                expression
                                  expression
                                    expression
                                      pathExpression
                                        pathInExpression
                                          pathExprSegment
                                            pathIdentSegment
                                              identifier
                                                intr
                                    .
                                    pathExprSegment
                                      pathIdentSegment
                                        identifier
                                          next
                                    (
                                    )
                                  ?
                              )
                          )
                        ,
                      matchArm
                        pattern
                          patternNoTopAlt
                            patternWithoutRange
                              literalPattern
                                2
                        matchArmGuard
                          if
                          expression
                            letExpression
                              let
                              pattern
                                patternNoTopAlt
                                  patternWithoutRange
                                    tupleStructPattern
                                      pathInExpression
                                        pathExprSegment
                                          pathIdentSegment
                                            identifier
                                              Ok
                                      (
                                      tupleStructItems
                                        pattern
                                          patternNoTopAlt
                                            patternWithoutRange
                                              slicePattern
                                                [
                                                slicePatternItems
                                                  pattern
                                                    patternNoTopAlt
                                                      patternWithoutRange
                                                        identifierPattern
                                                          identifier
                                                            a
                                                  ,
                                                  pattern
                                                    patternNoTopAlt
                                                      patternWithoutRange
                                                        identifierPattern
                                                          identifier
                                                            b
                                                ]
                                      )
                              =
                              expression
                                expression
                                  pathExpression
                                    pathInExpression
                                      pathExprSegment
                                        pathIdentSegment
                                          identifier
                                            intr
                                .
                                pathExprSegment
                                  pathIdentSegment
                                    identifier
                                      next_chunk
                                (
                                )
                      =>
                      matchArmExpression
                        expression
                          expression
                            pathExpression
                              pathInExpression
                                pathExprSegment
                                  pathIdentSegment
                                    identifier
                                      Some
                          (
                          callParams
                            expression
                              expression
                                pathExpression
                                  pathInExpression
                                    pathExprSegment
                                      pathIdentSegment
                                        identifier
                                          IrqCell
                                    ::
                                    pathExprSegment
                                      pathIdentSegment
                                        identifier
                                          L2
                              (
                              callParams
                                expression
                                  pathExpression
                                    pathInExpression
                                      pathExprSegment
                                        pathIdentSegment
                                          identifier
                                            a
                                ,
                                expression
                                  pathExpression
                                    pathInExpression
                                      pathExprSegment
                                        pathIdentSegment
                                          identifier
                                            b
                              )
                          )
                        ,
                      matchArm
                        pattern
                          patternNoTopAlt
                            patternWithoutRange
                              literalPattern
                                3
                        matchArmGuard
                          if
                          expression
                            letExpression
                              let
                              pattern
                                patternNoTopAlt
                                  patternWithoutRange
                                    tupleStructPattern
                                      pathInExpression
                                        pathExprSegment
                                          pathIdentSegment
                                            identifier
                                              Ok
                                      (
                                      tupleStructItems
                                        pattern
                                          patternNoTopAlt
                                            patternWithoutRange
                                              slicePattern
                                                [
                                                slicePatternItems
                                                  pattern
                                                    patternNoTopAlt
                                                      patternWithoutRange
                                                        identifierPattern
                                                          identifier
                                                            a
                                                  ,
                                                  pattern
                                                    patternNoTopAlt
                                                      patternWithoutRange
                                                        identifierPattern
                                                          identifier
                                                            b
                                                  ,
                                                  pattern
                                                    patternNoTopAlt
                                                      patternWithoutRange
                                                        identifierPattern
                                                          identifier
                                                            c
                                                ]
                                      )
                              =
                              expression
                                expression
                                  pathExpression
                                    pathInExpression
                                      pathExprSegment
                                        pathIdentSegment
                                          identifier
                                            intr
                                .
                                pathExprSegment
                                  pathIdentSegment
                                    identifier
                                      next_chunk
                                (
                                )
                      =>
                      matchArmExpression
                        expression
                          expression
                            pathExpression
                              pathInExpression
                                pathExprSegment
                                  pathIdentSegment
                                    identifier
                                      Some
                          (
                          callParams
                            expression
                              expression
                                pathExpression
                                  pathInExpression
                                    pathExprSegment
                                      pathIdentSegment
                                        identifier
                                          IrqCell
                                    ::
                                    pathExprSegment
                                      pathIdentSegment
                                        identifier
                                          L3
                              (
                              callParams
                                expression
                                  pathExpression
                                    pathInExpression
                                      pathExprSegment
                                        pathIdentSegment
                                          identifier
                                            a
                                ,
                                expression
                                  pathExpression
                                    pathInExpression
                                      pathExprSegment
                                        pathIdentSegment
                                          identifier
                                            b
                                ,
                                expression
                                  pathExpression
                                    pathInExpression
                                      pathExprSegment
                                        pathIdentSegment
                                          identifier
                                            c
                              )
                          )
                        ,
                      matchArm
                        pattern
                          patternNoTopAlt
                            patternWithoutRange
                              wildcardPattern
                                _
                      =>
                      expression
                        pathExpression
                          pathInExpression
                            pathExprSegment
                              pathIdentSegment
                                identifier
                                  None
                      ,
                    }
          }
  item
    visItem
      visibility
        pub
      function_
        functionQualifiers
        fn
        identifier
          diag_uart_range
        genericParams
          <
          genericParam
            lifetimeParam
              'a
          >
        (
        functionParameters
          functionParam
            functionParamPattern
              pattern
                patternNoTopAlt
                  patternWithoutRange
                    identifierPattern
                      identifier
                        dtb
              :
              type_
                typeNoBounds
                  referenceType
                    &
                    lifetime
                      'a
                    typeNoBounds
                      traitObjectTypeOneBound
                        traitBound
                          typePath
                            typePathSegment
                              pathIdentSegment
                                identifier
                                  Fdt
        )
        functionReturnType
          ->
          type_
            typeNoBounds
              traitObjectTypeOneBound
                traitBound
                  typePath
                    typePathSegment
                      pathIdentSegment
                        identifier
                          Option
                      genericArgs
                        <
                        genericArgsTypes
                          type_
                            typeNoBounds
                              tupleType
                                (
                                type_
                                  typeNoBounds
                                    traitObjectTypeOneBound
                                      traitBound
                                        typePath
                                          typePathSegment
                                            pathIdentSegment
                                              identifier
                                                usize
                                ,
                                type_
                                  typeNoBounds
                                    traitObjectTypeOneBound
                                      traitBound
                                        typePath
                                          typePathSegment
                                            pathIdentSegment
                                              identifier
                                                usize
                                ,
                                type_
                                  typeNoBounds
                                    traitObjectTypeOneBound
                                      traitBound
                                        typePath
                                          typePathSegment
                                            pathIdentSegment
                                              identifier
                                                bool
                                ,
                                type_
                                  typeNoBounds
                                    traitObjectTypeOneBound
                                      traitBound
                                        typePath
                                          typePathSegment
                                            pathIdentSegment
                                              identifier
                                                bool
                                ,
                                type_
                                  typeNoBounds
                                    referenceType
                                      &
                                      lifetime
                                        'a
                                      typeNoBounds
                                        traitObjectTypeOneBound
                                          traitBound
                                            typePath
                                              typePathSegment
                                                pathIdentSegment
                                                  identifier
                                                    str
                                )
                        >
        blockExpression
          {
          statements
            statement
              letStatement
                let
                patternNoTopAlt
                  patternWithoutRange
                    identifierPattern
                      identifier
                        stdout_path
                =
                expression
                  expression
                    expression
                      expression
                        pathExpression
                          pathInExpression
                            pathExprSegment
                              pathIdentSegment
                                identifier
                                  dtb
                      .
                      pathExprSegment
                        pathIdentSegment
                          identifier
                            chosen
                      (
                      )
                    .
                    pathExprSegment
                      pathIdentSegment
                        identifier
                          stdout
                    (
                    )
                  ?
                ;
            statement
              letStatement
                let
                patternNoTopAlt
                  patternWithoutRange
                    identifierPattern
                      identifier
                        uart_node
                =
                expression
                  expression
                    pathExpression
                      pathInExpression
                        pathExprSegment
                          pathIdentSegment
                            identifier
                              stdout_path
                  .
                  pathExprSegment
                    pathIdentSegment
                      identifier
                        node
                  (
                  )
                ;
            statement
              letStatement
                let
                patternNoTopAlt
                  patternWithoutRange
                    identifierPattern
                      identifier
                        skip_init
                =
                expression
                  expression
                    expression
                      pathExpression
                        pathInExpression
                          pathExprSegment
                            pathIdentSegment
                              identifier
                                uart_node
                    .
                    pathExprSegment
                      pathIdentSegment
                        identifier
                          property
                    (
                    callParams
                      expression
                        literalExpression
                          "skip-init"
                    )
                  .
                  pathExprSegment
                    pathIdentSegment
                      identifier
                        is_some
                  (
                  )
                ;
            statement
              letStatement
                let
                patternNoTopAlt
                  patternWithoutRange
                    identifierPattern
                      identifier
                        cts_event_walkaround
                =
                expression
                  expression
                    expression
                      pathExpression
                        pathInExpression
                          pathExprSegment
                            pathIdentSegment
                              identifier
                                uart_node
                    .
                    pathExprSegment
                      pathIdentSegment
                        identifier
                          property
                    (
                    callParams
                      expression
                        literalExpression
                          "cts-event-walkaround"
                    )
                  .
                  pathExprSegment
                    pathIdentSegment
                      identifier
                        is_some
                  (
                  )
                ;
            statement
              letStatement
                let
                patternNoTopAlt
                  patternWithoutRange
                    identifierPattern
                      identifier
                        compatible
                =
                expression
                  expression
                    expression
                      expression
                        pathExpression
                          pathInExpression
                            pathExprSegment
                              pathIdentSegment
                                identifier
                                  uart_node
                      .
                      pathExprSegment
                        pathIdentSegment
                          identifier
                            property
                      (
                      callParams
                        expression
                          literalExpression
                            "compatible"
                      )
                    .
                    pathExprSegment
                      pathIdentSegment
                        identifier
                          and_then
                    (
                    callParams
                      expression
                        pathExpression
                          pathInExpression
                            pathExprSegment
                              pathIdentSegment
                                identifier
                                  NodeProperty
                            ::
                            pathExprSegment
                              pathIdentSegment
                                identifier
                                  as_str
                    )
                  ?
                ;
            statement
              letStatement
                let
                patternNoTopAlt
                  patternWithoutRange
                    identifierPattern
                      mut
                      identifier
                        reg
                =
                expression
                  expression
                    expression
                      pathExpression
                        pathInExpression
                          pathExprSegment
                            pathIdentSegment
                              identifier
                                uart_node
                    .
                    pathExprSegment
                      pathIdentSegment
                        identifier
                          reg
                    (
                    )
                  ?
                ;
            statement
              letStatement
                let
                patternNoTopAlt
                  patternWithoutRange
                    identifierPattern
                      identifier
                        memory
                =
                expression
                  expression
                    expression
                      pathExpression
                        pathInExpression
                          pathExprSegment
                            pathIdentSegment
                              identifier
                                reg
                    .
                    pathExprSegment
                      pathIdentSegment
                        identifier
                          nth
                    (
                    callParams
                      expression
                        literalExpression
                          0
                    )
                  ?
                ;
            statement
              letStatement
                let
                patternNoTopAlt
                  patternWithoutRange
                    identifierPattern
                      identifier
                        address
                =
                expression
                  expression
                    expression
                      pathExpression
                        pathInExpression
                          pathExprSegment
                            pathIdentSegment
                              identifier
                                get_mmio_address
                    (
                    callParams
                      expression
                        pathExpression
                          pathInExpression
                            pathExprSegment
                              pathIdentSegment
                                identifier
                                  dtb
                      ,
                      expression
                        &
                        expression
                          pathExpression
                            pathInExpression
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    uart_node
                      ,
                      expression
                        &
                        expression
                          pathExpression
                            pathInExpression
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    memory
                    )
                  ?
                ;
            expression
              expression
                pathExpression
                  pathInExpression
                    pathExprSegment
                      pathIdentSegment
                        identifier
                          Some
              (
              callParams
                expression
                  (
                  tupleElements
                    expression
                      pathExpression
                        pathInExpression
                          pathExprSegment
                            pathIdentSegment
                              identifier
                                address
                    ,
                    expression
                      expression
                        expression
                          pathExpression
                            pathInExpression
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    memory
                        .
                        identifier
                          size
                      ?
                    ,
                    expression
                      pathExpression
                        pathInExpression
                          pathExprSegment
                            pathIdentSegment
                              identifier
                                skip_init
                    ,
                    expression
                      pathExpression
                        pathInExpression
                          pathExprSegment
                            pathIdentSegment
                              identifier
                                cts_event_walkaround
                    ,
                    expression
                      pathExpression
                        pathInExpression
                          pathExprSegment
                            pathIdentSegment
                              identifier
                                compatible
                    ,
                  )
              )
          }
  item
    outerAttribute
      #
      [
      attr
        simplePath
          simplePathSegment
            identifier
              allow
        attrInput
          delimTokenTree
            (
            tokenTree
              tokenTreeToken
                macroIdentifierLikeToken
                  identifier
                    unused
            )
      ]
    visItem
      visibility
        pub
      function_
        functionQualifiers
        fn
        identifier
          fill_env_data
        (
        functionParameters
          functionParam
            functionParamPattern
              pattern
                patternNoTopAlt
                  patternWithoutRange
                    identifierPattern
                      identifier
                        dt
              :
              type_
                typeNoBounds
                  referenceType
                    &
                    typeNoBounds
                      traitObjectTypeOneBound
                        traitBound
                          typePath
                            typePathSegment
                              pathIdentSegment
                                identifier
                                  Fdt
          ,
          functionParam
            functionParamPattern
              pattern
                patternNoTopAlt
                  patternWithoutRange
                    identifierPattern
                      identifier
                        env_base
              :
              type_
                typeNoBounds
                  traitObjectTypeOneBound
                    traitBound
                      typePath
                        typePathSegment
                          pathIdentSegment
                            identifier
                              usize
        )
        functionReturnType
          ->
          type_
            typeNoBounds
              traitObjectTypeOneBound
                traitBound
                  typePath
                    typePathSegment
                      pathIdentSegment
                        identifier
                          usize
        blockExpression
          {
          statements
            statement
              expressionStatement
                expressionWithBlock
                  ifExpression
                    if
                    expression
                      letExpression
                        let
                        pattern
                          patternNoTopAlt
                            patternWithoutRange
                              tupleStructPattern
                                pathInExpression
                                  pathExprSegment
                                    pathIdentSegment
                                      identifier
                                        Some
                                (
                                tupleStructItems
                                  pattern
                                    patternNoTopAlt
                                      patternWithoutRange
                                        identifierPattern
                                          identifier
                                            bootargs
                                )
                        =
                        expression
                          expression
                            expression
                              pathExpression
                                pathInExpression
                                  pathExprSegment
                                    pathIdentSegment
                                      identifier
                                        dt
                            .
                            pathExprSegment
                              pathIdentSegment
                                identifier
                                  chosen
                            (
                            )
                          .
                          pathExprSegment
                            pathIdentSegment
                              identifier
                                bootargs
                          (
                          )
                    blockExpression
                      {
                      statements
                        statement
                          letStatement
                            let
                            patternNoTopAlt
                              patternWithoutRange
                                identifierPattern
                                  identifier
                                    bootargs_len
                            =
                            expression
                              expression
                                pathExpression
                                  pathInExpression
                                    pathExprSegment
                                      pathIdentSegment
                                        identifier
                                          bootargs
                              .
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    len
                              (
                              )
                            ;
                        statement
                          letStatement
                            let
                            patternNoTopAlt
                              patternWithoutRange
                                identifierPattern
                                  identifier
                                    env_base_slice
                            =
                            expression
                              expressionWithBlock
                                unsafeBlockExpression
                                  unsafe
                                  blockExpression
                                    {
                                    statements
                                      expression
                                        expression
                                          pathExpression
                                            pathInExpression
                                              pathExprSegment
                                                pathIdentSegment
                                                  identifier
                                                    slice
                                              ::
                                              pathExprSegment
                                                pathIdentSegment
                                                  identifier
                                                    from_raw_parts_mut
                                        (
                                        callParams
                                          expression
                                            expression
                                              pathExpression
                                                pathInExpression
                                                  pathExprSegment
                                                    pathIdentSegment
                                                      identifier
                                                        env_base
                                            as
                                            typeNoBounds
                                              rawPointerType
                                                *
                                                mut
                                                typeNoBounds
                                                  traitObjectTypeOneBound
                                                    traitBound
                                                      typePath
                                                        typePathSegment
                                                          pathIdentSegment
                                                            identifier
                                                              u8
                                          ,
                                          expression
                                            pathExpression
                                              pathInExpression
                                                pathExprSegment
                                                  pathIdentSegment
                                                    identifier
                                                      bootargs_len
                                        )
                                    }
                            ;
                        statement
                          expressionStatement
                            expression
                              expression
                                expression
                                  pathExpression
                                    pathInExpression
                                      pathExprSegment
                                        pathIdentSegment
                                          identifier
                                            env_base_slice
                                [
                                expression
                                  ..
                                  expression
                                    pathExpression
                                      pathInExpression
                                        pathExprSegment
                                          pathIdentSegment
                                            identifier
                                              bootargs_len
                                ]
                              .
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    clone_from_slice
                              (
                              callParams
                                expression
                                  expression
                                    pathExpression
                                      pathInExpression
                                        pathExprSegment
                                          pathIdentSegment
                                            identifier
                                              bootargs
                                  .
                                  pathExprSegment
                                    pathIdentSegment
                                      identifier
                                        as_bytes
                                  (
                                  )
                              )
                            ;
                        expression
                          pathExpression
                            pathInExpression
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    bootargs_len
                      }
                    else
                    blockExpression
                      {
                      statements
                        expression
                          literalExpression
                            0
                      }
          }
  <EOF>

File: /home/socub/U/tesis/rust_repos/foo_2/memory.rs
crate
  item
    outerAttribute
      #
      [
      attr
        simplePath
          simplePathSegment
            identifier
              test
      ]
    visItem
      function_
        functionQualifiers
        fn
        identifier
          should_store_defaults
        (
        )
        blockExpression
          {
          statements
            statement
              item
                outerAttribute
                  #
                  [
                  attr
                    simplePath
                      simplePathSegment
                        identifier
                          derive
                    attrInput
                      delimTokenTree
                        (
                        tokenTree
                          tokenTreeToken
                            macroIdentifierLikeToken
                              identifier
                                Reflect
                        )
                  ]
                visItem
                  struct_
                    tupleStruct
                      struct
                      identifier
                        Test
                      genericParams
                        <
                        genericParam
                          typeParam
                            identifier
                              T
                        ,
                        genericParam
                          typeParam
                            identifier
                              U
                            :
                            typeParamBounds
                              typeParamBound
                                traitBound
                                  typePath
                                    typePathSegment
                                      pathIdentSegment
                                        identifier
                                          Debug
                            =
                            type_
                              typeNoBounds
                                traitObjectTypeOneBound
                                  traitBound
                                    typePath
                                      typePathSegment
                                        pathIdentSegment
                                          identifier
                                            String
                        ,
                        genericParam
                          constParam
                            const
                            identifier
                              N
                            :
                            type_
                              typeNoBounds
                                traitObjectTypeOneBound
                                  traitBound
                                    typePath
                                      typePathSegment
                                        pathIdentSegment
                                          identifier
                                            usize
                            =
                            literalExpression
                              10
                        >
                      (
                      tupleFields
                        tupleField
                          type_
                            typeNoBounds
                              arrayType
                                [
                                type_
                                  typeNoBounds
                                    tupleType
                                      (
                                      type_
                                        typeNoBounds
                                          traitObjectTypeOneBound
                                            traitBound
                                              typePath
                                                typePathSegment
                                                  pathIdentSegment
                                                    identifier
                                                      T
                                      ,
                                      type_
                                        typeNoBounds
                                          traitObjectTypeOneBound
                                            traitBound
                                              typePath
                                                typePathSegment
                                                  pathIdentSegment
                                                    identifier
                                                      U
                                      )
                                ;
                                expression
                                  pathExpression
                                    pathInExpression
                                      pathExprSegment
                                        pathIdentSegment
                                          identifier
                                            N
                                ]
                      )
                      ;
            statement
              letStatement
                let
                patternNoTopAlt
                  patternWithoutRange
                    identifierPattern
                      identifier
                        generics
                =
                expression
                  expression
                    expression
                      expression
                        expression
                          pathExpression
                            qualifiedPathInExpression
                              qualifiedPathType
                                <
                                type_
                                  typeNoBounds
                                    traitObjectTypeOneBound
                                      traitBound
                                        typePath
                                          typePathSegment
                                            pathIdentSegment
                                              identifier
                                                Test
                                            genericArgs
                                              <
                                              genericArgsTypes
                                                type_
                                                  typeNoBounds
                                                    traitObjectTypeOneBound
                                                      traitBound
                                                        typePath
                                                          typePathSegment
                                                            pathIdentSegment
                                                              identifier
                                                                f32
                                              >
                                as
                                typePath
                                  typePathSegment
                                    pathIdentSegment
                                      identifier
                                        Typed
                                >
                              ::
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    type_info
                        (
                        )
                      .
                      pathExprSegment
                        pathIdentSegment
                          identifier
                            as_tuple_struct
                      (
                      )
                    .
                    pathExprSegment
                      pathIdentSegment
                        identifier
                          unwrap
                    (
                    )
                  .
                  pathExprSegment
                    pathIdentSegment
                      identifier
                        generics
                  (
                  )
                ;
            statement
              letStatement
                let
                patternNoTopAlt
                  patternWithoutRange
                    tupleStructPattern
                      pathInExpression
                        pathExprSegment
                          pathIdentSegment
                            identifier
                              GenericInfo
                        ::
                        pathExprSegment
                          pathIdentSegment
                            identifier
                              Type
                      (
                      tupleStructItems
                        pattern
                          patternNoTopAlt
                            patternWithoutRange
                              identifierPattern
                                identifier
                                  u
                      )
                =
                expression
                  expression
                    expression
                      pathExpression
                        pathInExpression
                          pathExprSegment
                            pathIdentSegment
                              identifier
                                generics
                    .
                    pathExprSegment
                      pathIdentSegment
                        identifier
                          get_named
                    (
                    callParams
                      expression
                        literalExpression
                          "U"
                    )
                  .
                  pathExprSegment
                    pathIdentSegment
                      identifier
                        unwrap
                  (
                  )
                else
                blockExpression
                  {
                  statements
                    statement
                      item
                        macroItem
                          macroInvocationSemi
                            simplePath
                              simplePathSegment
                                identifier
                                  panic
                            !
                            (
                            tokenTree
                              tokenTreeToken
                                macroLiteralToken
                                  literalExpression
                                    "expected a type parameter"
                            )
                            ;
                  }
                ;
            statement
              item
                macroItem
                  macroInvocationSemi
                    simplePath
                      simplePathSegment
                        identifier
                          assert_eq
                    !
                    (
                    tokenTree
                      tokenTreeToken
                        macroIdentifierLikeToken
                          identifier
                            u
                      tokenTreeToken
                        macroPunctuationToken
                          .
                      tokenTreeToken
                        macroIdentifierLikeToken
                          identifier
                            default
                    tokenTree
                      delimTokenTree
                        (
                        )
                    tokenTree
                      tokenTreeToken
                        macroPunctuationToken
                          .
                      tokenTreeToken
                        macroIdentifierLikeToken
                          identifier
                            unwrap
                    tokenTree
                      delimTokenTree
                        (
                        )
                    tokenTree
                      tokenTreeToken
                        macroPunctuationToken
                          ,
                      tokenTreeToken
                        macroPunctuationToken
                          &
                      tokenTreeToken
                        macroIdentifierLikeToken
                          identifier
                            Type
                      tokenTreeToken
                        macroPunctuationToken
                          ::
                      tokenTreeToken
                        macroIdentifierLikeToken
                          identifier
                            of
                      tokenTreeToken
                        macroPunctuationToken
                          ::
                      tokenTreeToken
                        macroPunctuationToken
                          <
                      tokenTreeToken
                        macroIdentifierLikeToken
                          identifier
                            String
                      tokenTreeToken
                        macroPunctuationToken
                          >
                    tokenTree
                      delimTokenTree
                        (
                        )
                    )
                    ;
            statement
              letStatement
                let
                patternNoTopAlt
                  patternWithoutRange
                    tupleStructPattern
                      pathInExpression
                        pathExprSegment
                          pathIdentSegment
                            identifier
                              GenericInfo
                        ::
                        pathExprSegment
                          pathIdentSegment
                            identifier
                              Const
                      (
                      tupleStructItems
                        pattern
                          patternNoTopAlt
                            patternWithoutRange
                              identifierPattern
                                identifier
                                  n
                      )
                =
                expression
                  expression
                    expression
                      pathExpression
                        pathInExpression
                          pathExprSegment
                            pathIdentSegment
                              identifier
                                generics
                    .
                    pathExprSegment
                      pathIdentSegment
                        identifier
                          get_named
                    (
                    callParams
                      expression
                        literalExpression
                          "N"
                    )
                  .
                  pathExprSegment
                    pathIdentSegment
                      identifier
                        unwrap
                  (
                  )
                else
                blockExpression
                  {
                  statements
                    statement
                      item
                        macroItem
                          macroInvocationSemi
                            simplePath
                              simplePathSegment
                                identifier
                                  panic
                            !
                            (
                            tokenTree
                              tokenTreeToken
                                macroLiteralToken
                                  literalExpression
                                    "expected a const parameter"
                            )
                            ;
                  }
                ;
            statement
              item
                macroItem
                  macroInvocationSemi
                    simplePath
                      simplePathSegment
                        identifier
                          assert_eq
                    !
                    (
                    tokenTree
                      tokenTreeToken
                        macroIdentifierLikeToken
                          identifier
                            n
                      tokenTreeToken
                        macroPunctuationToken
                          .
                      tokenTreeToken
                        macroIdentifierLikeToken
                          identifier
                            default
                    tokenTree
                      delimTokenTree
                        (
                        )
                    tokenTree
                      tokenTreeToken
                        macroPunctuationToken
                          .
                      tokenTreeToken
                        macroIdentifierLikeToken
                          identifier
                            unwrap
                    tokenTree
                      delimTokenTree
                        (
                        )
                    tokenTree
                      tokenTreeToken
                        macroPunctuationToken
                          .
                      tokenTreeToken
                        macroIdentifierLikeToken
                          identifier
                            downcast_ref
                      tokenTreeToken
                        macroPunctuationToken
                          ::
                      tokenTreeToken
                        macroPunctuationToken
                          <
                      tokenTreeToken
                        macroIdentifierLikeToken
                          identifier
                            usize
                      tokenTreeToken
                        macroPunctuationToken
                          >
                    tokenTree
                      delimTokenTree
                        (
                        )
                    tokenTree
                      tokenTreeToken
                        macroPunctuationToken
                          .
                      tokenTreeToken
                        macroIdentifierLikeToken
                          identifier
                            unwrap
                    tokenTree
                      delimTokenTree
                        (
                        )
                    tokenTree
                      tokenTreeToken
                        macroPunctuationToken
                          ,
                      tokenTreeToken
                        macroPunctuationToken
                          &
                      tokenTreeToken
                        macroLiteralToken
                          literalExpression
                            10
                    )
                    ;
          }
  <EOF>

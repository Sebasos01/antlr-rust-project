File: /home/socub/U/tesis/foo_2/memory.rs
crate
  item
    visItem
      useDeclaration
        use
        useTree
          simplePath
            simplePathSegment
              identifier
                std
          ::
          {
          useTree
            simplePath
              simplePathSegment
                identifier
                  cell
              ::
              simplePathSegment
                identifier
                  RefCell
          ,
          useTree
            simplePath
              simplePathSegment
                identifier
                  pin
              ::
              simplePathSegment
                identifier
                  Pin
          ,
          useTree
            simplePath
              simplePathSegment
                identifier
                  rc
              ::
              simplePathSegment
                identifier
                  Rc
          ,
          useTree
            simplePath
              simplePathSegment
                identifier
                  task
            ::
            {
            useTree
              simplePath
                simplePathSegment
                  identifier
                    Context
            ,
            useTree
              simplePath
                simplePathSegment
                  identifier
                    Poll
            }
          ,
          }
        ;
  item
    visItem
      useDeclaration
        use
        useTree
          simplePath
            simplePathSegment
              identifier
                actix_web
          ::
          {
          useTree
            simplePath
              simplePathSegment
                identifier
                  dev
          ,
          useTree
            simplePath
              simplePathSegment
                identifier
                  error
            ::
            {
            useTree
              simplePath
                simplePathSegment
                  identifier
                    ParseError
            ,
            useTree
              simplePath
                simplePathSegment
                  identifier
                    PayloadError
            }
          ,
          useTree
            simplePath
              simplePathSegment
                identifier
                  http
              ::
              simplePathSegment
                identifier
                  header
            ::
            {
            useTree
              simplePath
                simplePathSegment
                  self
            ,
            useTree
              simplePath
                simplePathSegment
                  identifier
                    ContentDisposition
            ,
            useTree
              simplePath
                simplePathSegment
                  identifier
                    HeaderMap
            ,
            useTree
              simplePath
                simplePathSegment
                  identifier
                    HeaderName
            ,
            useTree
              simplePath
                simplePathSegment
                  identifier
                    HeaderValue
            }
          ,
          useTree
            simplePath
              simplePathSegment
                identifier
                  web
              ::
              simplePathSegment
                identifier
                  Bytes
          ,
          useTree
            simplePath
              simplePathSegment
                identifier
                  HttpRequest
          ,
          }
        ;
  item
    visItem
      useDeclaration
        use
        useTree
          simplePath
            simplePathSegment
              identifier
                futures_core
            ::
            simplePathSegment
              identifier
                stream
            ::
            simplePathSegment
              identifier
                Stream
        ;
  item
    visItem
      useDeclaration
        use
        useTree
          simplePath
            simplePathSegment
              identifier
                mime
            ::
            simplePathSegment
              identifier
                Mime
        ;
  item
    visItem
      useDeclaration
        use
        useTree
          simplePath
            simplePathSegment
              crate
          ::
          {
          useTree
            simplePath
              simplePathSegment
                identifier
                  error
              ::
              simplePathSegment
                identifier
                  Error
          ,
          useTree
            simplePath
              simplePathSegment
                identifier
                  field
              ::
              simplePathSegment
                identifier
                  InnerField
          ,
          useTree
            simplePath
              simplePathSegment
                identifier
                  payload
            ::
            {
            useTree
              simplePath
                simplePathSegment
                  identifier
                    PayloadBuffer
            ,
            useTree
              simplePath
                simplePathSegment
                  identifier
                    PayloadRef
            }
          ,
          useTree
            simplePath
              simplePathSegment
                identifier
                  safety
              ::
              simplePathSegment
                identifier
                  Safety
          ,
          useTree
            simplePath
              simplePathSegment
                identifier
                  Field
          ,
          }
        ;
  item
    visItem
      constantItem
        const
        identifier
          MAX_HEADERS
        :
        type_
          typeNoBounds
            traitObjectTypeOneBound
              traitBound
                typePath
                  typePathSegment
                    pathIdentSegment
                      identifier
                        usize
        =
        expression
          literalExpression
            32
        ;
  item
    visItem
      visibility
        pub
      struct_
        structStruct
          struct
          identifier
            Multipart
          {
          structFields
            structField
              identifier
                flow
              :
              type_
                typeNoBounds
                  traitObjectTypeOneBound
                    traitBound
                      typePath
                        typePathSegment
                          pathIdentSegment
                            identifier
                              Flow
            ,
            structField
              identifier
                safety
              :
              type_
                typeNoBounds
                  traitObjectTypeOneBound
                    traitBound
                      typePath
                        typePathSegment
                          pathIdentSegment
                            identifier
                              Safety
            ,
          }
  item
    visItem
      enumeration
        enum
        identifier
          Flow
        {
        enumItems
          enumItem
            identifier
              InFlight
            enumItemTuple
              (
              tupleFields
                tupleField
                  type_
                    typeNoBounds
                      traitObjectTypeOneBound
                        traitBound
                          typePath
                            typePathSegment
                              pathIdentSegment
                                identifier
                                  Inner
              )
          ,
          enumItem
            identifier
              Error
            enumItemTuple
              (
              tupleFields
                tupleField
                  type_
                    typeNoBounds
                      traitObjectTypeOneBound
                        traitBound
                          typePath
                            typePathSegment
                              pathIdentSegment
                                identifier
                                  Option
                              genericArgs
                                <
                                genericArgsTypes
                                  type_
                                    typeNoBounds
                                      traitObjectTypeOneBound
                                        traitBound
                                          typePath
                                            typePathSegment
                                              pathIdentSegment
                                                identifier
                                                  Error
                                >
              )
          ,
        }
  item
    visItem
      implementation
        inherentImpl
          impl
          type_
            typeNoBounds
              traitObjectTypeOneBound
                traitBound
                  typePath
                    typePathSegment
                      pathIdentSegment
                        identifier
                          Multipart
          {
          associatedItem
            visibility
              pub
            function_
              functionQualifiers
              fn
              identifier
                new
              genericParams
                <
                genericParam
                  typeParam
                    identifier
                      S
                >
              (
              functionParameters
                functionParam
                  functionParamPattern
                    pattern
                      patternNoTopAlt
                        patternWithoutRange
                          identifierPattern
                            identifier
                              headers
                    :
                    type_
                      typeNoBounds
                        referenceType
                          &
                          typeNoBounds
                            traitObjectTypeOneBound
                              traitBound
                                typePath
                                  typePathSegment
                                    pathIdentSegment
                                      identifier
                                        HeaderMap
                ,
                functionParam
                  functionParamPattern
                    pattern
                      patternNoTopAlt
                        patternWithoutRange
                          identifierPattern
                            identifier
                              stream
                    :
                    type_
                      typeNoBounds
                        traitObjectTypeOneBound
                          traitBound
                            typePath
                              typePathSegment
                                pathIdentSegment
                                  identifier
                                    S
              )
              functionReturnType
                ->
                type_
                  typeNoBounds
                    traitObjectTypeOneBound
                      traitBound
                        typePath
                          typePathSegment
                            pathIdentSegment
                              Self
              whereClause
                where
                whereClauseItem
                  typeBoundWhereClauseItem
                    type_
                      typeNoBounds
                        traitObjectTypeOneBound
                          traitBound
                            typePath
                              typePathSegment
                                pathIdentSegment
                                  identifier
                                    S
                    :
                    typeParamBounds
                      typeParamBound
                        traitBound
                          typePath
                            typePathSegment
                              pathIdentSegment
                                identifier
                                  Stream
                              genericArgs
                                <
                                genericArg
                                  genericArgsBinding
                                    identifier
                                      Item
                                    =
                                    type_
                                      typeNoBounds
                                        traitObjectTypeOneBound
                                          traitBound
                                            typePath
                                              typePathSegment
                                                pathIdentSegment
                                                  identifier
                                                    Result
                                                genericArgs
                                                  <
                                                  genericArgsTypes
                                                    type_
                                                      typeNoBounds
                                                        traitObjectTypeOneBound
                                                          traitBound
                                                            typePath
                                                              typePathSegment
                                                                pathIdentSegment
                                                                  identifier
                                                                    Bytes
                                                    ,
                                                    type_
                                                      typeNoBounds
                                                        traitObjectTypeOneBound
                                                          traitBound
                                                            typePath
                                                              typePathSegment
                                                                pathIdentSegment
                                                                  identifier
                                                                    PayloadError
                                                  >
                                >
                      +
                      typeParamBound
                        lifetime
                          'static
                ,
              blockExpression
                {
                statements
                  statement
                    expressionStatement
                      expressionWithBlock
                        matchExpression
                          match
                          expression
                            expression
                              pathExpression
                                pathInExpression
                                  pathExprSegment
                                    pathIdentSegment
                                      Self
                                  ::
                                  pathExprSegment
                                    pathIdentSegment
                                      identifier
                                        find_ct_and_boundary
                            (
                            callParams
                              expression
                                pathExpression
                                  pathInExpression
                                    pathExprSegment
                                      pathIdentSegment
                                        identifier
                                          headers
                            )
                          {
                          matchArms
                            matchArm
                              pattern
                                patternNoTopAlt
                                  patternWithoutRange
                                    tupleStructPattern
                                      pathInExpression
                                        pathExprSegment
                                          pathIdentSegment
                                            identifier
                                              Ok
                                      (
                                      tupleStructItems
                                        pattern
                                          patternNoTopAlt
                                            patternWithoutRange
                                              tuplePattern
                                                (
                                                tuplePatternItems
                                                  pattern
                                                    patternNoTopAlt
                                                      patternWithoutRange
                                                        identifierPattern
                                                          identifier
                                                            ct
                                                  ,
                                                  pattern
                                                    patternNoTopAlt
                                                      patternWithoutRange
                                                        identifierPattern
                                                          identifier
                                                            boundary
                                                )
                                      )
                            =>
                            matchArmExpression
                              expression
                                expression
                                  pathExpression
                                    pathInExpression
                                      pathExprSegment
                                        pathIdentSegment
                                          Self
                                      ::
                                      pathExprSegment
                                        pathIdentSegment
                                          identifier
                                            from_ct_and_boundary
                                (
                                callParams
                                  expression
                                    pathExpression
                                      pathInExpression
                                        pathExprSegment
                                          pathIdentSegment
                                            identifier
                                              ct
                                  ,
                                  expression
                                    pathExpression
                                      pathInExpression
                                        pathExprSegment
                                          pathIdentSegment
                                            identifier
                                              boundary
                                  ,
                                  expression
                                    pathExpression
                                      pathInExpression
                                        pathExprSegment
                                          pathIdentSegment
                                            identifier
                                              stream
                                )
                              ,
                            matchArm
                              pattern
                                patternNoTopAlt
                                  patternWithoutRange
                                    tupleStructPattern
                                      pathInExpression
                                        pathExprSegment
                                          pathIdentSegment
                                            identifier
                                              Err
                                      (
                                      tupleStructItems
                                        pattern
                                          patternNoTopAlt
                                            patternWithoutRange
                                              identifierPattern
                                                identifier
                                                  err
                                      )
                            =>
                            expression
                              expression
                                pathExpression
                                  pathInExpression
                                    pathExprSegment
                                      pathIdentSegment
                                        Self
                                    ::
                                    pathExprSegment
                                      pathIdentSegment
                                        identifier
                                          from_error
                              (
                              callParams
                                expression
                                  pathExpression
                                    pathInExpression
                                      pathExprSegment
                                        pathIdentSegment
                                          identifier
                                            err
                              )
                            ,
                          }
                }
          associatedItem
            visibility
              pub
              (
              crate
              )
            function_
              functionQualifiers
              fn
              identifier
                from_req
              (
              functionParameters
                functionParam
                  functionParamPattern
                    pattern
                      patternNoTopAlt
                        patternWithoutRange
                          identifierPattern
                            identifier
                              req
                    :
                    type_
                      typeNoBounds
                        referenceType
                          &
                          typeNoBounds
                            traitObjectTypeOneBound
                              traitBound
                                typePath
                                  typePathSegment
                                    pathIdentSegment
                                      identifier
                                        HttpRequest
                ,
                functionParam
                  functionParamPattern
                    pattern
                      patternNoTopAlt
                        patternWithoutRange
                          identifierPattern
                            identifier
                              payload
                    :
                    type_
                      typeNoBounds
                        referenceType
                          &
                          mut
                          typeNoBounds
                            traitObjectTypeOneBound
                              traitBound
                                typePath
                                  typePathSegment
                                    pathIdentSegment
                                      identifier
                                        dev
                                  ::
                                  typePathSegment
                                    pathIdentSegment
                                      identifier
                                        Payload
              )
              functionReturnType
                ->
                type_
                  typeNoBounds
                    traitObjectTypeOneBound
                      traitBound
                        typePath
                          typePathSegment
                            pathIdentSegment
                              Self
              blockExpression
                {
                statements
                  statement
                    expressionStatement
                      expressionWithBlock
                        matchExpression
                          match
                          expression
                            expression
                              pathExpression
                                pathInExpression
                                  pathExprSegment
                                    pathIdentSegment
                                      Self
                                  ::
                                  pathExprSegment
                                    pathIdentSegment
                                      identifier
                                        find_ct_and_boundary
                            (
                            callParams
                              expression
                                expression
                                  pathExpression
                                    pathInExpression
                                      pathExprSegment
                                        pathIdentSegment
                                          identifier
                                            req
                                .
                                pathExprSegment
                                  pathIdentSegment
                                    identifier
                                      headers
                                (
                                )
                            )
                          {
                          matchArms
                            matchArm
                              pattern
                                patternNoTopAlt
                                  patternWithoutRange
                                    tupleStructPattern
                                      pathInExpression
                                        pathExprSegment
                                          pathIdentSegment
                                            identifier
                                              Ok
                                      (
                                      tupleStructItems
                                        pattern
                                          patternNoTopAlt
                                            patternWithoutRange
                                              tuplePattern
                                                (
                                                tuplePatternItems
                                                  pattern
                                                    patternNoTopAlt
                                                      patternWithoutRange
                                                        identifierPattern
                                                          identifier
                                                            ct
                                                  ,
                                                  pattern
                                                    patternNoTopAlt
                                                      patternWithoutRange
                                                        identifierPattern
                                                          identifier
                                                            boundary
                                                )
                                      )
                            =>
                            matchArmExpression
                              expression
                                expression
                                  pathExpression
                                    pathInExpression
                                      pathExprSegment
                                        pathIdentSegment
                                          Self
                                      ::
                                      pathExprSegment
                                        pathIdentSegment
                                          identifier
                                            from_ct_and_boundary
                                (
                                callParams
                                  expression
                                    pathExpression
                                      pathInExpression
                                        pathExprSegment
                                          pathIdentSegment
                                            identifier
                                              ct
                                  ,
                                  expression
                                    pathExpression
                                      pathInExpression
                                        pathExprSegment
                                          pathIdentSegment
                                            identifier
                                              boundary
                                  ,
                                  expression
                                    expression
                                      pathExpression
                                        pathInExpression
                                          pathExprSegment
                                            pathIdentSegment
                                              identifier
                                                payload
                                    .
                                    pathExprSegment
                                      pathIdentSegment
                                        identifier
                                          take
                                    (
                                    )
                                )
                              ,
                            matchArm
                              pattern
                                patternNoTopAlt
                                  patternWithoutRange
                                    tupleStructPattern
                                      pathInExpression
                                        pathExprSegment
                                          pathIdentSegment
                                            identifier
                                              Err
                                      (
                                      tupleStructItems
                                        pattern
                                          patternNoTopAlt
                                            patternWithoutRange
                                              identifierPattern
                                                identifier
                                                  err
                                      )
                            =>
                            expression
                              expression
                                pathExpression
                                  pathInExpression
                                    pathExprSegment
                                      pathIdentSegment
                                        Self
                                    ::
                                    pathExprSegment
                                      pathIdentSegment
                                        identifier
                                          from_error
                              (
                              callParams
                                expression
                                  pathExpression
                                    pathInExpression
                                      pathExprSegment
                                        pathIdentSegment
                                          identifier
                                            err
                              )
                            ,
                          }
                }
          associatedItem
            visibility
              pub
              (
              crate
              )
            function_
              functionQualifiers
              fn
              identifier
                find_ct_and_boundary
              (
              functionParameters
                functionParam
                  functionParamPattern
                    pattern
                      patternNoTopAlt
                        patternWithoutRange
                          identifierPattern
                            identifier
                              headers
                    :
                    type_
                      typeNoBounds
                        referenceType
                          &
                          typeNoBounds
                            traitObjectTypeOneBound
                              traitBound
                                typePath
                                  typePathSegment
                                    pathIdentSegment
                                      identifier
                                        HeaderMap
              )
              functionReturnType
                ->
                type_
                  typeNoBounds
                    traitObjectTypeOneBound
                      traitBound
                        typePath
                          typePathSegment
                            pathIdentSegment
                              identifier
                                Result
                            genericArgs
                              <
                              genericArgsTypes
                                type_
                                  typeNoBounds
                                    tupleType
                                      (
                                      type_
                                        typeNoBounds
                                          traitObjectTypeOneBound
                                            traitBound
                                              typePath
                                                typePathSegment
                                                  pathIdentSegment
                                                    identifier
                                                      Mime
                                      ,
                                      type_
                                        typeNoBounds
                                          traitObjectTypeOneBound
                                            traitBound
                                              typePath
                                                typePathSegment
                                                  pathIdentSegment
                                                    identifier
                                                      String
                                      )
                                ,
                                type_
                                  typeNoBounds
                                    traitObjectTypeOneBound
                                      traitBound
                                        typePath
                                          typePathSegment
                                            pathIdentSegment
                                              identifier
                                                Error
                              >
              blockExpression
                {
                statements
                  statement
                    letStatement
                      let
                      patternNoTopAlt
                        patternWithoutRange
                          identifierPattern
                            identifier
                              content_type
                      =
                      expression
                        expression
                          expression
                            expression
                              expression
                                expression
                                  expression
                                    expression
                                      expression
                                        pathExpression
                                          pathInExpression
                                            pathExprSegment
                                              pathIdentSegment
                                                identifier
                                                  headers
                                      .
                                      pathExprSegment
                                        pathIdentSegment
                                          identifier
                                            get
                                      (
                                      callParams
                                        expression
                                          &
                                          expression
                                            pathExpression
                                              pathInExpression
                                                pathExprSegment
                                                  pathIdentSegment
                                                    identifier
                                                      header
                                                ::
                                                pathExprSegment
                                                  pathIdentSegment
                                                    identifier
                                                      CONTENT_TYPE
                                      )
                                    .
                                    pathExprSegment
                                      pathIdentSegment
                                        identifier
                                          ok_or
                                    (
                                    callParams
                                      expression
                                        pathExpression
                                          pathInExpression
                                            pathExprSegment
                                              pathIdentSegment
                                                identifier
                                                  Error
                                            ::
                                            pathExprSegment
                                              pathIdentSegment
                                                identifier
                                                  ContentTypeMissing
                                    )
                                  ?
                                .
                                pathExprSegment
                                  pathIdentSegment
                                    identifier
                                      to_str
                                (
                                )
                              .
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    ok
                              (
                              )
                            .
                            pathExprSegment
                              pathIdentSegment
                                identifier
                                  and_then
                            (
                            callParams
                              expression
                                closureExpression
                                  |
                                  closureParameters
                                    closureParam
                                      pattern
                                        patternNoTopAlt
                                          patternWithoutRange
                                            identifierPattern
                                              identifier
                                                content_type
                                  |
                                  expression
                                    expression
                                      expression
                                        pathExpression
                                          pathInExpression
                                            pathExprSegment
                                              pathIdentSegment
                                                identifier
                                                  content_type
                                      .
                                      pathExprSegment
                                        pathIdentSegment
                                          identifier
                                            parse
                                        ::
                                        genericArgs
                                          <
                                          genericArgsTypes
                                            type_
                                              typeNoBounds
                                                traitObjectTypeOneBound
                                                  traitBound
                                                    typePath
                                                      typePathSegment
                                                        pathIdentSegment
                                                          identifier
                                                            Mime
                                          >
                                      (
                                      )
                                    .
                                    pathExprSegment
                                      pathIdentSegment
                                        identifier
                                          ok
                                    (
                                    )
                            )
                          .
                          pathExprSegment
                            pathIdentSegment
                              identifier
                                ok_or
                          (
                          callParams
                            expression
                              pathExpression
                                pathInExpression
                                  pathExprSegment
                                    pathIdentSegment
                                      identifier
                                        Error
                                  ::
                                  pathExprSegment
                                    pathIdentSegment
                                      identifier
                                        ContentTypeParse
                          )
                        ?
                      ;
                  statement
                    expressionStatement
                      expressionWithBlock
                        ifExpression
                          if
                          expression
                            expression
                              expression
                                pathExpression
                                  pathInExpression
                                    pathExprSegment
                                      pathIdentSegment
                                        identifier
                                          content_type
                              .
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    type_
                              (
                              )
                            comparisonOperator
                              !=
                            expression
                              pathExpression
                                pathInExpression
                                  pathExprSegment
                                    pathIdentSegment
                                      identifier
                                        mime
                                  ::
                                  pathExprSegment
                                    pathIdentSegment
                                      identifier
                                        MULTIPART
                          blockExpression
                            {
                            statements
                              statement
                                expressionStatement
                                  expression
                                    return
                                    expression
                                      expression
                                        pathExpression
                                          pathInExpression
                                            pathExprSegment
                                              pathIdentSegment
                                                identifier
                                                  Err
                                      (
                                      callParams
                                        expression
                                          pathExpression
                                            pathInExpression
                                              pathExprSegment
                                                pathIdentSegment
                                                  identifier
                                                    Error
                                              ::
                                              pathExprSegment
                                                pathIdentSegment
                                                  identifier
                                                    ContentTypeIncompatible
                                      )
                                  ;
                            }
                  statement
                    letStatement
                      let
                      patternNoTopAlt
                        patternWithoutRange
                          identifierPattern
                            identifier
                              boundary
                      =
                      expression
                        expression
                          expression
                            expression
                              expression
                                expression
                                  pathExpression
                                    pathInExpression
                                      pathExprSegment
                                        pathIdentSegment
                                          identifier
                                            content_type
                                .
                                pathExprSegment
                                  pathIdentSegment
                                    identifier
                                      get_param
                                (
                                callParams
                                  expression
                                    pathExpression
                                      pathInExpression
                                        pathExprSegment
                                          pathIdentSegment
                                            identifier
                                              mime
                                        ::
                                        pathExprSegment
                                          pathIdentSegment
                                            identifier
                                              BOUNDARY
                                )
                              .
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    ok_or
                              (
                              callParams
                                expression
                                  pathExpression
                                    pathInExpression
                                      pathExprSegment
                                        pathIdentSegment
                                          identifier
                                            Error
                                      ::
                                      pathExprSegment
                                        pathIdentSegment
                                          identifier
                                            BoundaryMissing
                              )
                            ?
                          .
                          pathExprSegment
                            pathIdentSegment
                              identifier
                                as_str
                          (
                          )
                        .
                        pathExprSegment
                          pathIdentSegment
                            identifier
                              to_owned
                        (
                        )
                      ;
                  expression
                    expression
                      pathExpression
                        pathInExpression
                          pathExprSegment
                            pathIdentSegment
                              identifier
                                Ok
                    (
                    callParams
                      expression
                        (
                        tupleElements
                          expression
                            pathExpression
                              pathInExpression
                                pathExprSegment
                                  pathIdentSegment
                                    identifier
                                      content_type
                          ,
                          expression
                            pathExpression
                              pathInExpression
                                pathExprSegment
                                  pathIdentSegment
                                    identifier
                                      boundary
                        )
                    )
                }
          associatedItem
            visibility
              pub
              (
              crate
              )
            function_
              functionQualifiers
              fn
              identifier
                from_ct_and_boundary
              genericParams
                <
                genericParam
                  typeParam
                    identifier
                      S
                >
              (
              functionParameters
                functionParam
                  functionParamPattern
                    pattern
                      patternNoTopAlt
                        patternWithoutRange
                          identifierPattern
                            identifier
                              ct
                    :
                    type_
                      typeNoBounds
                        traitObjectTypeOneBound
                          traitBound
                            typePath
                              typePathSegment
                                pathIdentSegment
                                  identifier
                                    Mime
                ,
                functionParam
                  functionParamPattern
                    pattern
                      patternNoTopAlt
                        patternWithoutRange
                          identifierPattern
                            identifier
                              boundary
                    :
                    type_
                      typeNoBounds
                        traitObjectTypeOneBound
                          traitBound
                            typePath
                              typePathSegment
                                pathIdentSegment
                                  identifier
                                    String
                ,
                functionParam
                  functionParamPattern
                    pattern
                      patternNoTopAlt
                        patternWithoutRange
                          identifierPattern
                            identifier
                              stream
                    :
                    type_
                      typeNoBounds
                        traitObjectTypeOneBound
                          traitBound
                            typePath
                              typePathSegment
                                pathIdentSegment
                                  identifier
                                    S
              )
              functionReturnType
                ->
                type_
                  typeNoBounds
                    traitObjectTypeOneBound
                      traitBound
                        typePath
                          typePathSegment
                            pathIdentSegment
                              identifier
                                Multipart
              whereClause
                where
                whereClauseItem
                  typeBoundWhereClauseItem
                    type_
                      typeNoBounds
                        traitObjectTypeOneBound
                          traitBound
                            typePath
                              typePathSegment
                                pathIdentSegment
                                  identifier
                                    S
                    :
                    typeParamBounds
                      typeParamBound
                        traitBound
                          typePath
                            typePathSegment
                              pathIdentSegment
                                identifier
                                  Stream
                              genericArgs
                                <
                                genericArg
                                  genericArgsBinding
                                    identifier
                                      Item
                                    =
                                    type_
                                      typeNoBounds
                                        traitObjectTypeOneBound
                                          traitBound
                                            typePath
                                              typePathSegment
                                                pathIdentSegment
                                                  identifier
                                                    Result
                                                genericArgs
                                                  <
                                                  genericArgsTypes
                                                    type_
                                                      typeNoBounds
                                                        traitObjectTypeOneBound
                                                          traitBound
                                                            typePath
                                                              typePathSegment
                                                                pathIdentSegment
                                                                  identifier
                                                                    Bytes
                                                    ,
                                                    type_
                                                      typeNoBounds
                                                        traitObjectTypeOneBound
                                                          traitBound
                                                            typePath
                                                              typePathSegment
                                                                pathIdentSegment
                                                                  identifier
                                                                    PayloadError
                                                  >
                                >
                      +
                      typeParamBound
                        lifetime
                          'static
                ,
              blockExpression
                {
                statements
                  expression
                    structExpression
                      structExprStruct
                        pathInExpression
                          pathExprSegment
                            pathIdentSegment
                              identifier
                                Multipart
                        {
                        structExprFields
                          structExprField
                            identifier
                              safety
                            :
                            expression
                              expression
                                pathExpression
                                  pathInExpression
                                    pathExprSegment
                                      pathIdentSegment
                                        identifier
                                          Safety
                                    ::
                                    pathExprSegment
                                      pathIdentSegment
                                        identifier
                                          new
                              (
                              )
                          ,
                          structExprField
                            identifier
                              flow
                            :
                            expression
                              expression
                                pathExpression
                                  pathInExpression
                                    pathExprSegment
                                      pathIdentSegment
                                        identifier
                                          Flow
                                    ::
                                    pathExprSegment
                                      pathIdentSegment
                                        identifier
                                          InFlight
                              (
                              callParams
                                expression
                                  structExpression
                                    structExprStruct
                                      pathInExpression
                                        pathExprSegment
                                          pathIdentSegment
                                            identifier
                                              Inner
                                      {
                                      structExprFields
                                        structExprField
                                          identifier
                                            payload
                                          :
                                          expression
                                            expression
                                              pathExpression
                                                pathInExpression
                                                  pathExprSegment
                                                    pathIdentSegment
                                                      identifier
                                                        PayloadRef
                                                  ::
                                                  pathExprSegment
                                                    pathIdentSegment
                                                      identifier
                                                        new
                                            (
                                            callParams
                                              expression
                                                expression
                                                  pathExpression
                                                    pathInExpression
                                                      pathExprSegment
                                                        pathIdentSegment
                                                          identifier
                                                            PayloadBuffer
                                                      ::
                                                      pathExprSegment
                                                        pathIdentSegment
                                                          identifier
                                                            new
                                                (
                                                callParams
                                                  expression
                                                    pathExpression
                                                      pathInExpression
                                                        pathExprSegment
                                                          pathIdentSegment
                                                            identifier
                                                              stream
                                                )
                                            )
                                        ,
                                        structExprField
                                          identifier
                                            content_type
                                          :
                                          expression
                                            pathExpression
                                              pathInExpression
                                                pathExprSegment
                                                  pathIdentSegment
                                                    identifier
                                                      ct
                                        ,
                                        structExprField
                                          identifier
                                            boundary
                                        ,
                                        structExprField
                                          identifier
                                            state
                                          :
                                          expression
                                            pathExpression
                                              pathInExpression
                                                pathExprSegment
                                                  pathIdentSegment
                                                    identifier
                                                      State
                                                ::
                                                pathExprSegment
                                                  pathIdentSegment
                                                    identifier
                                                      FirstBoundary
                                        ,
                                        structExprField
                                          identifier
                                            item
                                          :
                                          expression
                                            pathExpression
                                              pathInExpression
                                                pathExprSegment
                                                  pathIdentSegment
                                                    identifier
                                                      Item
                                                ::
                                                pathExprSegment
                                                  pathIdentSegment
                                                    identifier
                                                      None
                                        ,
                                      }
                              )
                          ,
                        }
                }
          associatedItem
            visibility
              pub
              (
              crate
              )
            function_
              functionQualifiers
              fn
              identifier
                from_error
              (
              functionParameters
                functionParam
                  functionParamPattern
                    pattern
                      patternNoTopAlt
                        patternWithoutRange
                          identifierPattern
                            identifier
                              err
                    :
                    type_
                      typeNoBounds
                        traitObjectTypeOneBound
                          traitBound
                            typePath
                              typePathSegment
                                pathIdentSegment
                                  identifier
                                    Error
              )
              functionReturnType
                ->
                type_
                  typeNoBounds
                    traitObjectTypeOneBound
                      traitBound
                        typePath
                          typePathSegment
                            pathIdentSegment
                              identifier
                                Multipart
              blockExpression
                {
                statements
                  expression
                    structExpression
                      structExprStruct
                        pathInExpression
                          pathExprSegment
                            pathIdentSegment
                              identifier
                                Multipart
                        {
                        structExprFields
                          structExprField
                            identifier
                              flow
                            :
                            expression
                              expression
                                pathExpression
                                  pathInExpression
                                    pathExprSegment
                                      pathIdentSegment
                                        identifier
                                          Flow
                                    ::
                                    pathExprSegment
                                      pathIdentSegment
                                        identifier
                                          Error
                              (
                              callParams
                                expression
                                  expression
                                    pathExpression
                                      pathInExpression
                                        pathExprSegment
                                          pathIdentSegment
                                            identifier
                                              Some
                                  (
                                  callParams
                                    expression
                                      pathExpression
                                        pathInExpression
                                          pathExprSegment
                                            pathIdentSegment
                                              identifier
                                                err
                                  )
                              )
                          ,
                          structExprField
                            identifier
                              safety
                            :
                            expression
                              expression
                                pathExpression
                                  pathInExpression
                                    pathExprSegment
                                      pathIdentSegment
                                        identifier
                                          Safety
                                    ::
                                    pathExprSegment
                                      pathIdentSegment
                                        identifier
                                          new
                              (
                              )
                          ,
                        }
                }
          associatedItem
            visibility
              pub
              (
              crate
              )
            function_
              functionQualifiers
              fn
              identifier
                content_type_or_bail
              (
              functionParameters
                selfParam
                  shorthandSelf
                    &
                    mut
                    self
              )
              functionReturnType
                ->
                type_
                  typeNoBounds
                    traitObjectTypeOneBound
                      traitBound
                        typePath
                          typePathSegment
                            pathIdentSegment
                              identifier
                                Result
                            genericArgs
                              <
                              genericArgsTypes
                                type_
                                  typeNoBounds
                                    traitObjectTypeOneBound
                                      traitBound
                                        typePath
                                          typePathSegment
                                            pathIdentSegment
                                              identifier
                                                mime
                                          ::
                                          typePathSegment
                                            pathIdentSegment
                                              identifier
                                                Mime
                                ,
                                type_
                                  typeNoBounds
                                    traitObjectTypeOneBound
                                      traitBound
                                        typePath
                                          typePathSegment
                                            pathIdentSegment
                                              identifier
                                                Error
                              >
              blockExpression
                {
                statements
                  statement
                    expressionStatement
                      expressionWithBlock
                        matchExpression
                          match
                          expression
                            expression
                              pathExpression
                                pathInExpression
                                  pathExprSegment
                                    pathIdentSegment
                                      self
                            .
                            identifier
                              flow
                          {
                          matchArms
                            matchArm
                              pattern
                                patternNoTopAlt
                                  patternWithoutRange
                                    tupleStructPattern
                                      pathInExpression
                                        pathExprSegment
                                          pathIdentSegment
                                            identifier
                                              Flow
                                        ::
                                        pathExprSegment
                                          pathIdentSegment
                                            identifier
                                              InFlight
                                      (
                                      tupleStructItems
                                        pattern
                                          patternNoTopAlt
                                            patternWithoutRange
                                              identifierPattern
                                                ref
                                                identifier
                                                  inner
                                      )
                            =>
                            matchArmExpression
                              expression
                                expression
                                  pathExpression
                                    pathInExpression
                                      pathExprSegment
                                        pathIdentSegment
                                          identifier
                                            Ok
                                (
                                callParams
                                  expression
                                    expression
                                      expression
                                        pathExpression
                                          pathInExpression
                                            pathExprSegment
                                              pathIdentSegment
                                                identifier
                                                  inner
                                      .
                                      identifier
                                        content_type
                                    .
                                    pathExprSegment
                                      pathIdentSegment
                                        identifier
                                          clone
                                    (
                                    )
                                )
                              ,
                            matchArm
                              pattern
                                patternNoTopAlt
                                  patternWithoutRange
                                    tupleStructPattern
                                      pathInExpression
                                        pathExprSegment
                                          pathIdentSegment
                                            identifier
                                              Flow
                                        ::
                                        pathExprSegment
                                          pathIdentSegment
                                            identifier
                                              Error
                                      (
                                      tupleStructItems
                                        pattern
                                          patternNoTopAlt
                                            patternWithoutRange
                                              identifierPattern
                                                ref
                                                mut
                                                identifier
                                                  err
                                      )
                            =>
                            expression
                              expression
                                pathExpression
                                  pathInExpression
                                    pathExprSegment
                                      pathIdentSegment
                                        identifier
                                          Err
                              (
                              callParams
                                expression
                                  expression
                                    expression
                                      pathExpression
                                        pathInExpression
                                          pathExprSegment
                                            pathIdentSegment
                                              identifier
                                                err
                                    .
                                    pathExprSegment
                                      pathIdentSegment
                                        identifier
                                          take
                                    (
                                    )
                                  .
                                  pathExprSegment
                                    pathIdentSegment
                                      identifier
                                        expect
                                  (
                                  callParams
                                    expression
                                      literalExpression
                                        "error should not be taken after it was returned"
                                  )
                              )
                            ,
                          }
                }
          }
  item
    visItem
      implementation
        traitImpl
          impl
          typePath
            typePathSegment
              pathIdentSegment
                identifier
                  Stream
          for
          type_
            typeNoBounds
              traitObjectTypeOneBound
                traitBound
                  typePath
                    typePathSegment
                      pathIdentSegment
                        identifier
                          Multipart
          {
          associatedItem
            typeAlias
              type
              identifier
                Item
              =
              type_
                typeNoBounds
                  traitObjectTypeOneBound
                    traitBound
                      typePath
                        typePathSegment
                          pathIdentSegment
                            identifier
                              Result
                          genericArgs
                            <
                            genericArgsTypes
                              type_
                                typeNoBounds
                                  traitObjectTypeOneBound
                                    traitBound
                                      typePath
                                        typePathSegment
                                          pathIdentSegment
                                            identifier
                                              Field
                              ,
                              type_
                                typeNoBounds
                                  traitObjectTypeOneBound
                                    traitBound
                                      typePath
                                        typePathSegment
                                          pathIdentSegment
                                            identifier
                                              Error
                            >
              ;
          associatedItem
            function_
              functionQualifiers
              fn
              identifier
                poll_next
              (
              functionParameters
                selfParam
                  typedSelf
                    self
                    :
                    type_
                      typeNoBounds
                        traitObjectTypeOneBound
                          traitBound
                            typePath
                              typePathSegment
                                pathIdentSegment
                                  identifier
                                    Pin
                                genericArgs
                                  <
                                  genericArgsTypes
                                    type_
                                      typeNoBounds
                                        referenceType
                                          &
                                          mut
                                          typeNoBounds
                                            traitObjectTypeOneBound
                                              traitBound
                                                typePath
                                                  typePathSegment
                                                    pathIdentSegment
                                                      Self
                                  >
                ,
                functionParam
                  functionParamPattern
                    pattern
                      patternNoTopAlt
                        patternWithoutRange
                          identifierPattern
                            identifier
                              cx
                    :
                    type_
                      typeNoBounds
                        referenceType
                          &
                          mut
                          typeNoBounds
                            traitObjectTypeOneBound
                              traitBound
                                typePath
                                  typePathSegment
                                    pathIdentSegment
                                      identifier
                                        Context
                                    genericArgs
                                      <
                                      genericArgsLifetimes
                                        lifetime
                                          '_
                                      >
              )
              functionReturnType
                ->
                type_
                  typeNoBounds
                    traitObjectTypeOneBound
                      traitBound
                        typePath
                          typePathSegment
                            pathIdentSegment
                              identifier
                                Poll
                            genericArgs
                              <
                              genericArgsTypes
                                type_
                                  typeNoBounds
                                    traitObjectTypeOneBound
                                      traitBound
                                        typePath
                                          typePathSegment
                                            pathIdentSegment
                                              identifier
                                                Option
                                            genericArgs
                                              <
                                              genericArgsTypes
                                                type_
                                                  typeNoBounds
                                                    traitObjectTypeOneBound
                                                      traitBound
                                                        typePath
                                                          typePathSegment
                                                            pathIdentSegment
                                                              Self
                                                          ::
                                                          typePathSegment
                                                            pathIdentSegment
                                                              identifier
                                                                Item
                                              >
                              >
              blockExpression
                {
                statements
                  statement
                    letStatement
                      let
                      patternNoTopAlt
                        patternWithoutRange
                          identifierPattern
                            identifier
                              this
                      =
                      expression
                        expression
                          pathExpression
                            pathInExpression
                              pathExprSegment
                                pathIdentSegment
                                  self
                        .
                        pathExprSegment
                          pathIdentSegment
                            identifier
                              get_mut
                        (
                        )
                      ;
                  statement
                    expressionStatement
                      expressionWithBlock
                        matchExpression
                          match
                          expression
                            expression
                              pathExpression
                                pathInExpression
                                  pathExprSegment
                                    pathIdentSegment
                                      identifier
                                        this
                            .
                            identifier
                              flow
                          {
                          matchArms
                            matchArm
                              pattern
                                patternNoTopAlt
                                  patternWithoutRange
                                    tupleStructPattern
                                      pathInExpression
                                        pathExprSegment
                                          pathIdentSegment
                                            identifier
                                              Flow
                                        ::
                                        pathExprSegment
                                          pathIdentSegment
                                            identifier
                                              InFlight
                                      (
                                      tupleStructItems
                                        pattern
                                          patternNoTopAlt
                                            patternWithoutRange
                                              identifierPattern
                                                ref
                                                mut
                                                identifier
                                                  inner
                                      )
                            =>
                            matchArmExpression
                              expressionWithBlock
                                blockExpression
                                  {
                                  statements
                                    statement
                                      expressionStatement
                                        expressionWithBlock
                                          ifLetExpression
                                            if
                                            let
                                            pattern
                                              patternNoTopAlt
                                                patternWithoutRange
                                                  tupleStructPattern
                                                    pathInExpression
                                                      pathExprSegment
                                                        pathIdentSegment
                                                          identifier
                                                            Some
                                                    (
                                                    tupleStructItems
                                                      pattern
                                                        patternNoTopAlt
                                                          patternWithoutRange
                                                            identifierPattern
                                                              mut
                                                              identifier
                                                                buffer
                                                    )
                                            =
                                            expression
                                              expression
                                                expression
                                                  pathExpression
                                                    pathInExpression
                                                      pathExprSegment
                                                        pathIdentSegment
                                                          identifier
                                                            inner
                                                .
                                                identifier
                                                  payload
                                              .
                                              pathExprSegment
                                                pathIdentSegment
                                                  identifier
                                                    get_mut
                                              (
                                              callParams
                                                expression
                                                  &
                                                  expression
                                                    expression
                                                      pathExpression
                                                        pathInExpression
                                                          pathExprSegment
                                                            pathIdentSegment
                                                              identifier
                                                                this
                                                    .
                                                    identifier
                                                      safety
                                              )
                                            blockExpression
                                              {
                                              statements
                                                statement
                                                  expressionStatement
                                                    expression
                                                      expression
                                                        expression
                                                          pathExpression
                                                            pathInExpression
                                                              pathExprSegment
                                                                pathIdentSegment
                                                                  identifier
                                                                    buffer
                                                        .
                                                        pathExprSegment
                                                          pathIdentSegment
                                                            identifier
                                                              poll_stream
                                                        (
                                                        callParams
                                                          expression
                                                            pathExpression
                                                              pathInExpression
                                                                pathExprSegment
                                                                  pathIdentSegment
                                                                    identifier
                                                                      cx
                                                        )
                                                      ?
                                                    ;
                                              }
                                            else
                                            ifExpression
                                              if
                                              expression
                                                !
                                                expression
                                                  expression
                                                    expression
                                                      pathExpression
                                                        pathInExpression
                                                          pathExprSegment
                                                            pathIdentSegment
                                                              identifier
                                                                this
                                                    .
                                                    identifier
                                                      safety
                                                  .
                                                  pathExprSegment
                                                    pathIdentSegment
                                                      identifier
                                                        is_clean
                                                  (
                                                  )
                                              blockExpression
                                                {
                                                statements
                                                  statement
                                                    expressionStatement
                                                      expression
                                                        return
                                                        expression
                                                          expression
                                                            pathExpression
                                                              pathInExpression
                                                                pathExprSegment
                                                                  pathIdentSegment
                                                                    identifier
                                                                      Poll
                                                                ::
                                                                pathExprSegment
                                                                  pathIdentSegment
                                                                    identifier
                                                                      Ready
                                                          (
                                                          callParams
                                                            expression
                                                              expression
                                                                pathExpression
                                                                  pathInExpression
                                                                    pathExprSegment
                                                                      pathIdentSegment
                                                                        identifier
                                                                          Some
                                                              (
                                                              callParams
                                                                expression
                                                                  expression
                                                                    pathExpression
                                                                      pathInExpression
                                                                        pathExprSegment
                                                                          pathIdentSegment
                                                                            identifier
                                                                              Err
                                                                  (
                                                                  callParams
                                                                    expression
                                                                      pathExpression
                                                                        pathInExpression
                                                                          pathExprSegment
                                                                            pathIdentSegment
                                                                              identifier
                                                                                Error
                                                                          ::
                                                                          pathExprSegment
                                                                            pathIdentSegment
                                                                              identifier
                                                                                NotConsumed
                                                                  )
                                                              )
                                                          )
                                                      ;
                                                }
                                              else
                                              blockExpression
                                                {
                                                statements
                                                  statement
                                                    expressionStatement
                                                      expression
                                                        return
                                                        expression
                                                          pathExpression
                                                            pathInExpression
                                                              pathExprSegment
                                                                pathIdentSegment
                                                                  identifier
                                                                    Poll
                                                              ::
                                                              pathExprSegment
                                                                pathIdentSegment
                                                                  identifier
                                                                    Pending
                                                      ;
                                                }
                                    expression
                                      expression
                                        pathExpression
                                          pathInExpression
                                            pathExprSegment
                                              pathIdentSegment
                                                identifier
                                                  inner
                                      .
                                      pathExprSegment
                                        pathIdentSegment
                                          identifier
                                            poll
                                      (
                                      callParams
                                        expression
                                          &
                                          expression
                                            expression
                                              pathExpression
                                                pathInExpression
                                                  pathExprSegment
                                                    pathIdentSegment
                                                      identifier
                                                        this
                                            .
                                            identifier
                                              safety
                                        ,
                                        expression
                                          pathExpression
                                            pathInExpression
                                              pathExprSegment
                                                pathIdentSegment
                                                  identifier
                                                    cx
                                      )
                                  }
                            matchArm
                              pattern
                                patternNoTopAlt
                                  patternWithoutRange
                                    tupleStructPattern
                                      pathInExpression
                                        pathExprSegment
                                          pathIdentSegment
                                            identifier
                                              Flow
                                        ::
                                        pathExprSegment
                                          pathIdentSegment
                                            identifier
                                              Error
                                      (
                                      tupleStructItems
                                        pattern
                                          patternNoTopAlt
                                            patternWithoutRange
                                              identifierPattern
                                                ref
                                                mut
                                                identifier
                                                  err
                                      )
                            =>
                            expression
                              expression
                                pathExpression
                                  pathInExpression
                                    pathExprSegment
                                      pathIdentSegment
                                        identifier
                                          Poll
                                    ::
                                    pathExprSegment
                                      pathIdentSegment
                                        identifier
                                          Ready
                              (
                              callParams
                                expression
                                  expression
                                    pathExpression
                                      pathInExpression
                                        pathExprSegment
                                          pathIdentSegment
                                            identifier
                                              Some
                                  (
                                  callParams
                                    expression
                                      expression
                                        pathExpression
                                          pathInExpression
                                            pathExprSegment
                                              pathIdentSegment
                                                identifier
                                                  Err
                                      (
                                      callParams
                                        expression
                                          expression
                                            expression
                                              pathExpression
                                                pathInExpression
                                                  pathExprSegment
                                                    pathIdentSegment
                                                      identifier
                                                        err
                                            .
                                            pathExprSegment
                                              pathIdentSegment
                                                identifier
                                                  take
                                            (
                                            )
                                          .
                                          pathExprSegment
                                            pathIdentSegment
                                              identifier
                                                expect
                                          (
                                          callParams
                                            expression
                                              literalExpression
                                                "Multipart polled after finish"
                                          )
                                      )
                                  )
                              )
                            ,
                          }
                }
          }
  item
    outerAttribute
      #
      [
      attr
        simplePath
          simplePathSegment
            identifier
              derive
        attrInput
          delimTokenTree
            (
            tokenTree
              tokenTreeToken
                macroIdentifierLikeToken
                  identifier
                    PartialEq
              tokenTreeToken
                macroPunctuationToken
                  ,
              tokenTreeToken
                macroIdentifierLikeToken
                  identifier
                    Debug
            )
      ]
    visItem
      enumeration
        enum
        identifier
          State
        {
        enumItems
          enumItem
            identifier
              FirstBoundary
          ,
          enumItem
            identifier
              Boundary
          ,
          enumItem
            identifier
              Headers
          ,
          enumItem
            identifier
              Eof
          ,
        }
  item
    visItem
      enumeration
        enum
        identifier
          Item
        {
        enumItems
          enumItem
            identifier
              None
          ,
          enumItem
            identifier
              Field
            enumItemTuple
              (
              tupleFields
                tupleField
                  type_
                    typeNoBounds
                      traitObjectTypeOneBound
                        traitBound
                          typePath
                            typePathSegment
                              pathIdentSegment
                                identifier
                                  Rc
                              genericArgs
                                <
                                genericArgsTypes
                                  type_
                                    typeNoBounds
                                      traitObjectTypeOneBound
                                        traitBound
                                          typePath
                                            typePathSegment
                                              pathIdentSegment
                                                identifier
                                                  RefCell
                                              genericArgs
                                                <
                                                genericArgsTypes
                                                  type_
                                                    typeNoBounds
                                                      traitObjectTypeOneBound
                                                        traitBound
                                                          typePath
                                                            typePathSegment
                                                              pathIdentSegment
                                                                identifier
                                                                  InnerField
                                                >
                                >
              )
          ,
        }
  item
    visItem
      struct_
        structStruct
          struct
          identifier
            Inner
          {
          structFields
            structField
              identifier
                payload
              :
              type_
                typeNoBounds
                  traitObjectTypeOneBound
                    traitBound
                      typePath
                        typePathSegment
                          pathIdentSegment
                            identifier
                              PayloadRef
            ,
            structField
              identifier
                content_type
              :
              type_
                typeNoBounds
                  traitObjectTypeOneBound
                    traitBound
                      typePath
                        typePathSegment
                          pathIdentSegment
                            identifier
                              Mime
            ,
            structField
              identifier
                boundary
              :
              type_
                typeNoBounds
                  traitObjectTypeOneBound
                    traitBound
                      typePath
                        typePathSegment
                          pathIdentSegment
                            identifier
                              String
            ,
            structField
              identifier
                state
              :
              type_
                typeNoBounds
                  traitObjectTypeOneBound
                    traitBound
                      typePath
                        typePathSegment
                          pathIdentSegment
                            identifier
                              State
            ,
            structField
              identifier
                item
              :
              type_
                typeNoBounds
                  traitObjectTypeOneBound
                    traitBound
                      typePath
                        typePathSegment
                          pathIdentSegment
                            identifier
                              Item
            ,
          }
  item
    visItem
      implementation
        inherentImpl
          impl
          type_
            typeNoBounds
              traitObjectTypeOneBound
                traitBound
                  typePath
                    typePathSegment
                      pathIdentSegment
                        identifier
                          Inner
          {
          associatedItem
            function_
              functionQualifiers
              fn
              identifier
                read_field_headers
              (
              functionParameters
                functionParam
                  functionParamPattern
                    pattern
                      patternNoTopAlt
                        patternWithoutRange
                          identifierPattern
                            identifier
                              payload
                    :
                    type_
                      typeNoBounds
                        referenceType
                          &
                          mut
                          typeNoBounds
                            traitObjectTypeOneBound
                              traitBound
                                typePath
                                  typePathSegment
                                    pathIdentSegment
                                      identifier
                                        PayloadBuffer
              )
              functionReturnType
                ->
                type_
                  typeNoBounds
                    traitObjectTypeOneBound
                      traitBound
                        typePath
                          typePathSegment
                            pathIdentSegment
                              identifier
                                Result
                            genericArgs
                              <
                              genericArgsTypes
                                type_
                                  typeNoBounds
                                    traitObjectTypeOneBound
                                      traitBound
                                        typePath
                                          typePathSegment
                                            pathIdentSegment
                                              identifier
                                                Option
                                            genericArgs
                                              <
                                              genericArgsTypes
                                                type_
                                                  typeNoBounds
                                                    traitObjectTypeOneBound
                                                      traitBound
                                                        typePath
                                                          typePathSegment
                                                            pathIdentSegment
                                                              identifier
                                                                HeaderMap
                                              >
                                ,
                                type_
                                  typeNoBounds
                                    traitObjectTypeOneBound
                                      traitBound
                                        typePath
                                          typePathSegment
                                            pathIdentSegment
                                              identifier
                                                Error
                              >
              blockExpression
                {
                statements
                  statement
                    expressionStatement
                      expressionWithBlock
                        matchExpression
                          match
                          expression
                            expression
                              expression
                                pathExpression
                                  pathInExpression
                                    pathExprSegment
                                      pathIdentSegment
                                        identifier
                                          payload
                              .
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    read_until
                              (
                              callParams
                                expression
                                  literalExpression
                                    b"\r\n\r\n"
                              )
                            ?
                          {
                          matchArms
                            matchArm
                              pattern
                                patternNoTopAlt
                                  patternWithoutRange
                                    identifierPattern
                                      identifier
                                        None
                            =>
                            matchArmExpression
                              expressionWithBlock
                                blockExpression
                                  {
                                  statements
                                    statement
                                      expressionStatement
                                        expressionWithBlock
                                          ifExpression
                                            if
                                            expression
                                              expression
                                                pathExpression
                                                  pathInExpression
                                                    pathExprSegment
                                                      pathIdentSegment
                                                        identifier
                                                          payload
                                              .
                                              identifier
                                                eof
                                            blockExpression
                                              {
                                              statements
                                                expression
                                                  expression
                                                    pathExpression
                                                      pathInExpression
                                                        pathExprSegment
                                                          pathIdentSegment
                                                            identifier
                                                              Err
                                                  (
                                                  callParams
                                                    expression
                                                      pathExpression
                                                        pathInExpression
                                                          pathExprSegment
                                                            pathIdentSegment
                                                              identifier
                                                                Error
                                                          ::
                                                          pathExprSegment
                                                            pathIdentSegment
                                                              identifier
                                                                Incomplete
                                                  )
                                              }
                                            else
                                            blockExpression
                                              {
                                              statements
                                                expression
                                                  expression
                                                    pathExpression
                                                      pathInExpression
                                                        pathExprSegment
                                                          pathIdentSegment
                                                            identifier
                                                              Ok
                                                  (
                                                  callParams
                                                    expression
                                                      pathExpression
                                                        pathInExpression
                                                          pathExprSegment
                                                            pathIdentSegment
                                                              identifier
                                                                None
                                                  )
                                              }
                                  }
                            matchArm
                              pattern
                                patternNoTopAlt
                                  patternWithoutRange
                                    tupleStructPattern
                                      pathInExpression
                                        pathExprSegment
                                          pathIdentSegment
                                            identifier
                                              Some
                                      (
                                      tupleStructItems
                                        pattern
                                          patternNoTopAlt
                                            patternWithoutRange
                                              identifierPattern
                                                identifier
                                                  bytes
                                      )
                            =>
                            expression
                              expressionWithBlock
                                blockExpression
                                  {
                                  statements
                                    statement
                                      letStatement
                                        let
                                        patternNoTopAlt
                                          patternWithoutRange
                                            identifierPattern
                                              mut
                                              identifier
                                                hdrs
                                        =
                                        expression
                                          [
                                          arrayElements
                                            expression
                                              pathExpression
                                                pathInExpression
                                                  pathExprSegment
                                                    pathIdentSegment
                                                      identifier
                                                        httparse
                                                  ::
                                                  pathExprSegment
                                                    pathIdentSegment
                                                      identifier
                                                        EMPTY_HEADER
                                            ;
                                            expression
                                              pathExpression
                                                pathInExpression
                                                  pathExprSegment
                                                    pathIdentSegment
                                                      identifier
                                                        MAX_HEADERS
                                          ]
                                        ;
                                    statement
                                      expressionStatement
                                        expressionWithBlock
                                          matchExpression
                                            match
                                            expression
                                              expression
                                                expression
                                                  expression
                                                    pathExpression
                                                      pathInExpression
                                                        pathExprSegment
                                                          pathIdentSegment
                                                            identifier
                                                              httparse
                                                        ::
                                                        pathExprSegment
                                                          pathIdentSegment
                                                            identifier
                                                              parse_headers
                                                  (
                                                  callParams
                                                    expression
                                                      &
                                                      expression
                                                        pathExpression
                                                          pathInExpression
                                                            pathExprSegment
                                                              pathIdentSegment
                                                                identifier
                                                                  bytes
                                                    ,
                                                    expression
                                                      &
                                                      mut
                                                      expression
                                                        pathExpression
                                                          pathInExpression
                                                            pathExprSegment
                                                              pathIdentSegment
                                                                identifier
                                                                  hdrs
                                                  )
                                                .
                                                pathExprSegment
                                                  pathIdentSegment
                                                    identifier
                                                      map_err
                                                (
                                                callParams
                                                  expression
                                                    pathExpression
                                                      pathInExpression
                                                        pathExprSegment
                                                          pathIdentSegment
                                                            identifier
                                                              ParseError
                                                        ::
                                                        pathExprSegment
                                                          pathIdentSegment
                                                            identifier
                                                              from
                                                )
                                              ?
                                            {
                                            matchArms
                                              matchArm
                                                pattern
                                                  patternNoTopAlt
                                                    patternWithoutRange
                                                      tupleStructPattern
                                                        pathInExpression
                                                          pathExprSegment
                                                            pathIdentSegment
                                                              identifier
                                                                httparse
                                                          ::
                                                          pathExprSegment
                                                            pathIdentSegment
                                                              identifier
                                                                Status
                                                          ::
                                                          pathExprSegment
                                                            pathIdentSegment
                                                              identifier
                                                                Complete
                                                        (
                                                        tupleStructItems
                                                          pattern
                                                            patternNoTopAlt
                                                              patternWithoutRange
                                                                tuplePattern
                                                                  (
                                                                  tuplePatternItems
                                                                    pattern
                                                                      patternNoTopAlt
                                                                        patternWithoutRange
                                                                          wildcardPattern
                                                                            _
                                                                    ,
                                                                    pattern
                                                                      patternNoTopAlt
                                                                        patternWithoutRange
                                                                          identifierPattern
                                                                            identifier
                                                                              hdrs
                                                                  )
                                                        )
                                              =>
                                              matchArmExpression
                                                expressionWithBlock
                                                  blockExpression
                                                    {
                                                    statements
                                                      statement
                                                        letStatement
                                                          let
                                                          patternNoTopAlt
                                                            patternWithoutRange
                                                              identifierPattern
                                                                mut
                                                                identifier
                                                                  headers
                                                          =
                                                          expression
                                                            expression
                                                              pathExpression
                                                                pathInExpression
                                                                  pathExprSegment
                                                                    pathIdentSegment
                                                                      identifier
                                                                        HeaderMap
                                                                  ::
                                                                  pathExprSegment
                                                                    pathIdentSegment
                                                                      identifier
                                                                        with_capacity
                                                            (
                                                            callParams
                                                              expression
                                                                expression
                                                                  pathExpression
                                                                    pathInExpression
                                                                      pathExprSegment
                                                                        pathIdentSegment
                                                                          identifier
                                                                            hdrs
                                                                .
                                                                pathExprSegment
                                                                  pathIdentSegment
                                                                    identifier
                                                                      len
                                                                (
                                                                )
                                                            )
                                                          ;
                                                      statement
                                                        expressionStatement
                                                          expressionWithBlock
                                                            loopExpression
                                                              iteratorLoopExpression
                                                                for
                                                                pattern
                                                                  patternNoTopAlt
                                                                    patternWithoutRange
                                                                      identifierPattern
                                                                        identifier
                                                                          h
                                                                in
                                                                expression
                                                                  pathExpression
                                                                    pathInExpression
                                                                      pathExprSegment
                                                                        pathIdentSegment
                                                                          identifier
                                                                            hdrs
                                                                blockExpression
                                                                  {
                                                                  statements
                                                                    statement
                                                                      letStatement
                                                                        let
                                                                        patternNoTopAlt
                                                                          patternWithoutRange
                                                                            identifierPattern
                                                                              identifier
                                                                                name
                                                                        =
                                                                        expression
                                                                          expression
                                                                            expression
                                                                              expression
                                                                                pathExpression
                                                                                  pathInExpression
                                                                                    pathExprSegment
                                                                                      pathIdentSegment
                                                                                        identifier
                                                                                          HeaderName
                                                                                    ::
                                                                                    pathExprSegment
                                                                                      pathIdentSegment
                                                                                        identifier
                                                                                          try_from
                                                                              (
                                                                              callParams
                                                                                expression
                                                                                  expression
                                                                                    pathExpression
                                                                                      pathInExpression
                                                                                        pathExprSegment
                                                                                          pathIdentSegment
                                                                                            identifier
                                                                                              h
                                                                                  .
                                                                                  identifier
                                                                                    name
                                                                              )
                                                                            .
                                                                            pathExprSegment
                                                                              pathIdentSegment
                                                                                identifier
                                                                                  map_err
                                                                            (
                                                                            callParams
                                                                              expression
                                                                                closureExpression
                                                                                  |
                                                                                  closureParameters
                                                                                    closureParam
                                                                                      pattern
                                                                                        patternNoTopAlt
                                                                                          patternWithoutRange
                                                                                            wildcardPattern
                                                                                              _
                                                                                  |
                                                                                  expression
                                                                                    pathExpression
                                                                                      pathInExpression
                                                                                        pathExprSegment
                                                                                          pathIdentSegment
                                                                                            identifier
                                                                                              ParseError
                                                                                        ::
                                                                                        pathExprSegment
                                                                                          pathIdentSegment
                                                                                            identifier
                                                                                              Header
                                                                            )
                                                                          ?
                                                                        ;
                                                                    statement
                                                                      letStatement
                                                                        let
                                                                        patternNoTopAlt
                                                                          patternWithoutRange
                                                                            identifierPattern
                                                                              identifier
                                                                                value
                                                                        =
                                                                        expression
                                                                          expression
                                                                            expression
                                                                              expression
                                                                                pathExpression
                                                                                  pathInExpression
                                                                                    pathExprSegment
                                                                                      pathIdentSegment
                                                                                        identifier
                                                                                          HeaderValue
                                                                                    ::
                                                                                    pathExprSegment
                                                                                      pathIdentSegment
                                                                                        identifier
                                                                                          try_from
                                                                              (
                                                                              callParams
                                                                                expression
                                                                                  expression
                                                                                    pathExpression
                                                                                      pathInExpression
                                                                                        pathExprSegment
                                                                                          pathIdentSegment
                                                                                            identifier
                                                                                              h
                                                                                  .
                                                                                  identifier
                                                                                    value
                                                                              )
                                                                            .
                                                                            pathExprSegment
                                                                              pathIdentSegment
                                                                                identifier
                                                                                  map_err
                                                                            (
                                                                            callParams
                                                                              expression
                                                                                closureExpression
                                                                                  |
                                                                                  closureParameters
                                                                                    closureParam
                                                                                      pattern
                                                                                        patternNoTopAlt
                                                                                          patternWithoutRange
                                                                                            wildcardPattern
                                                                                              _
                                                                                  |
                                                                                  expression
                                                                                    pathExpression
                                                                                      pathInExpression
                                                                                        pathExprSegment
                                                                                          pathIdentSegment
                                                                                            identifier
                                                                                              ParseError
                                                                                        ::
                                                                                        pathExprSegment
                                                                                          pathIdentSegment
                                                                                            identifier
                                                                                              Header
                                                                            )
                                                                          ?
                                                                        ;
                                                                    statement
                                                                      expressionStatement
                                                                        expression
                                                                          expression
                                                                            pathExpression
                                                                              pathInExpression
                                                                                pathExprSegment
                                                                                  pathIdentSegment
                                                                                    identifier
                                                                                      headers
                                                                          .
                                                                          pathExprSegment
                                                                            pathIdentSegment
                                                                              identifier
                                                                                append
                                                                          (
                                                                          callParams
                                                                            expression
                                                                              pathExpression
                                                                                pathInExpression
                                                                                  pathExprSegment
                                                                                    pathIdentSegment
                                                                                      identifier
                                                                                        name
                                                                            ,
                                                                            expression
                                                                              pathExpression
                                                                                pathInExpression
                                                                                  pathExprSegment
                                                                                    pathIdentSegment
                                                                                      identifier
                                                                                        value
                                                                          )
                                                                        ;
                                                                  }
                                                      expression
                                                        expression
                                                          pathExpression
                                                            pathInExpression
                                                              pathExprSegment
                                                                pathIdentSegment
                                                                  identifier
                                                                    Ok
                                                        (
                                                        callParams
                                                          expression
                                                            expression
                                                              pathExpression
                                                                pathInExpression
                                                                  pathExprSegment
                                                                    pathIdentSegment
                                                                      identifier
                                                                        Some
                                                            (
                                                            callParams
                                                              expression
                                                                pathExpression
                                                                  pathInExpression
                                                                    pathExprSegment
                                                                      pathIdentSegment
                                                                        identifier
                                                                          headers
                                                            )
                                                        )
                                                    }
                                              matchArm
                                                pattern
                                                  patternNoTopAlt
                                                    patternWithoutRange
                                                      pathPattern
                                                        pathInExpression
                                                          pathExprSegment
                                                            pathIdentSegment
                                                              identifier
                                                                httparse
                                                          ::
                                                          pathExprSegment
                                                            pathIdentSegment
                                                              identifier
                                                                Status
                                                          ::
                                                          pathExprSegment
                                                            pathIdentSegment
                                                              identifier
                                                                Partial
                                              =>
                                              expression
                                                expression
                                                  pathExpression
                                                    pathInExpression
                                                      pathExprSegment
                                                        pathIdentSegment
                                                          identifier
                                                            Err
                                                (
                                                callParams
                                                  expression
                                                    expression
                                                      pathExpression
                                                        pathInExpression
                                                          pathExprSegment
                                                            pathIdentSegment
                                                              identifier
                                                                ParseError
                                                          ::
                                                          pathExprSegment
                                                            pathIdentSegment
                                                              identifier
                                                                Header
                                                    .
                                                    pathExprSegment
                                                      pathIdentSegment
                                                        identifier
                                                          into
                                                    (
                                                    )
                                                )
                                              ,
                                            }
                                  }
                          }
                }
          associatedItem
            function_
              functionQualifiers
              fn
              identifier
                read_boundary
              (
              functionParameters
                functionParam
                  functionParamPattern
                    pattern
                      patternNoTopAlt
                        patternWithoutRange
                          identifierPattern
                            identifier
                              payload
                    :
                    type_
                      typeNoBounds
                        referenceType
                          &
                          mut
                          typeNoBounds
                            traitObjectTypeOneBound
                              traitBound
                                typePath
                                  typePathSegment
                                    pathIdentSegment
                                      identifier
                                        PayloadBuffer
                ,
                functionParam
                  functionParamPattern
                    pattern
                      patternNoTopAlt
                        patternWithoutRange
                          identifierPattern
                            identifier
                              boundary
                    :
                    type_
                      typeNoBounds
                        referenceType
                          &
                          typeNoBounds
                            traitObjectTypeOneBound
                              traitBound
                                typePath
                                  typePathSegment
                                    pathIdentSegment
                                      identifier
                                        str
              )
              functionReturnType
                ->
                type_
                  typeNoBounds
                    traitObjectTypeOneBound
                      traitBound
                        typePath
                          typePathSegment
                            pathIdentSegment
                              identifier
                                Result
                            genericArgs
                              <
                              genericArgsTypes
                                type_
                                  typeNoBounds
                                    traitObjectTypeOneBound
                                      traitBound
                                        typePath
                                          typePathSegment
                                            pathIdentSegment
                                              identifier
                                                Option
                                            genericArgs
                                              <
                                              genericArgsTypes
                                                type_
                                                  typeNoBounds
                                                    traitObjectTypeOneBound
                                                      traitBound
                                                        typePath
                                                          typePathSegment
                                                            pathIdentSegment
                                                              identifier
                                                                bool
                                              >
                                ,
                                type_
                                  typeNoBounds
                                    traitObjectTypeOneBound
                                      traitBound
                                        typePath
                                          typePathSegment
                                            pathIdentSegment
                                              identifier
                                                Error
                              >
              blockExpression
                {
                statements
                  statement
                    letStatement
                      let
                      patternNoTopAlt
                        patternWithoutRange
                          identifierPattern
                            identifier
                              chunk
                      =
                      expression
                        expressionWithBlock
                          matchExpression
                            match
                            expression
                              expression
                                expression
                                  pathExpression
                                    pathInExpression
                                      pathExprSegment
                                        pathIdentSegment
                                          identifier
                                            payload
                                .
                                pathExprSegment
                                  pathIdentSegment
                                    identifier
                                      readline_or_eof
                                (
                                )
                              ?
                            {
                            matchArms
                              matchArm
                                pattern
                                  patternNoTopAlt
                                    patternWithoutRange
                                      identifierPattern
                                        identifier
                                          None
                              =>
                              matchArmExpression
                                expression
                                  return
                                  expression
                                    expression
                                      pathExpression
                                        pathInExpression
                                          pathExprSegment
                                            pathIdentSegment
                                              identifier
                                                Ok
                                    (
                                    callParams
                                      expression
                                        expression
                                          expression
                                            pathExpression
                                              pathInExpression
                                                pathExprSegment
                                                  pathIdentSegment
                                                    identifier
                                                      payload
                                          .
                                          identifier
                                            eof
                                        .
                                        pathExprSegment
                                          pathIdentSegment
                                            identifier
                                              then_some
                                        (
                                        callParams
                                          expression
                                            literalExpression
                                              true
                                        )
                                    )
                                ,
                              matchArm
                                pattern
                                  patternNoTopAlt
                                    patternWithoutRange
                                      tupleStructPattern
                                        pathInExpression
                                          pathExprSegment
                                            pathIdentSegment
                                              identifier
                                                Some
                                        (
                                        tupleStructItems
                                          pattern
                                            patternNoTopAlt
                                              patternWithoutRange
                                                identifierPattern
                                                  identifier
                                                    chunk
                                        )
                              =>
                              expression
                                pathExpression
                                  pathInExpression
                                    pathExprSegment
                                      pathIdentSegment
                                        identifier
                                          chunk
                              ,
                            }
                      ;
                  statement
                    item
                      visItem
                        constantItem
                          const
                          identifier
                            BOUNDARY_MARKER
                          :
                          type_
                            typeNoBounds
                              referenceType
                                &
                                typeNoBounds
                                  sliceType
                                    [
                                    type_
                                      typeNoBounds
                                        traitObjectTypeOneBound
                                          traitBound
                                            typePath
                                              typePathSegment
                                                pathIdentSegment
                                                  identifier
                                                    u8
                                    ]
                          =
                          expression
                            literalExpression
                              b"--"
                          ;
                  statement
                    item
                      visItem
                        constantItem
                          const
                          identifier
                            LINE_BREAK
                          :
                          type_
                            typeNoBounds
                              referenceType
                                &
                                typeNoBounds
                                  sliceType
                                    [
                                    type_
                                      typeNoBounds
                                        traitObjectTypeOneBound
                                          traitBound
                                            typePath
                                              typePathSegment
                                                pathIdentSegment
                                                  identifier
                                                    u8
                                    ]
                          =
                          expression
                            literalExpression
                              b"\r\n"
                          ;
                  statement
                    letStatement
                      let
                      patternNoTopAlt
                        patternWithoutRange
                          identifierPattern
                            identifier
                              boundary_len
                      =
                      expression
                        expression
                          pathExpression
                            pathInExpression
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    boundary
                        .
                        pathExprSegment
                          pathIdentSegment
                            identifier
                              len
                        (
                        )
                      ;
                  statement
                    expressionStatement
                      expressionWithBlock
                        ifExpression
                          if
                          expression
                            expression
                              expression
                                expression
                                  expression
                                    pathExpression
                                      pathInExpression
                                        pathExprSegment
                                          pathIdentSegment
                                            identifier
                                              chunk
                                  .
                                  pathExprSegment
                                    pathIdentSegment
                                      identifier
                                        len
                                  (
                                  )
                                comparisonOperator
                                  <
                                expression
                                  expression
                                    expression
                                      pathExpression
                                        pathInExpression
                                          pathExprSegment
                                            pathIdentSegment
                                              identifier
                                                boundary_len
                                    +
                                    expression
                                      literalExpression
                                        2
                                  +
                                  expression
                                    literalExpression
                                      2
                              ||
                              expression
                                !
                                expression
                                  expression
                                    pathExpression
                                      pathInExpression
                                        pathExprSegment
                                          pathIdentSegment
                                            identifier
                                              chunk
                                  .
                                  pathExprSegment
                                    pathIdentSegment
                                      identifier
                                        starts_with
                                  (
                                  callParams
                                    expression
                                      pathExpression
                                        pathInExpression
                                          pathExprSegment
                                            pathIdentSegment
                                              identifier
                                                BOUNDARY_MARKER
                                  )
                            ||
                            expression
                              expression
                                &
                                expression
                                  expression
                                    pathExpression
                                      pathInExpression
                                        pathExprSegment
                                          pathIdentSegment
                                            identifier
                                              chunk
                                  [
                                  expression
                                    expression
                                      literalExpression
                                        2
                                    ..
                                    expression
                                      expression
                                        pathExpression
                                          pathInExpression
                                            pathExprSegment
                                              pathIdentSegment
                                                identifier
                                                  boundary_len
                                      +
                                      expression
                                        literalExpression
                                          2
                                  ]
                              comparisonOperator
                                !=
                              expression
                                expression
                                  pathExpression
                                    pathInExpression
                                      pathExprSegment
                                        pathIdentSegment
                                          identifier
                                            boundary
                                .
                                pathExprSegment
                                  pathIdentSegment
                                    identifier
                                      as_bytes
                                (
                                )
                          blockExpression
                            {
                            statements
                              statement
                                expressionStatement
                                  expression
                                    return
                                    expression
                                      expression
                                        pathExpression
                                          pathInExpression
                                            pathExprSegment
                                              pathIdentSegment
                                                identifier
                                                  Err
                                      (
                                      callParams
                                        expression
                                          pathExpression
                                            pathInExpression
                                              pathExprSegment
                                                pathIdentSegment
                                                  identifier
                                                    Error
                                              ::
                                              pathExprSegment
                                                pathIdentSegment
                                                  identifier
                                                    BoundaryMissing
                                      )
                                  ;
                            }
                  statement
                    expressionStatement
                      expressionWithBlock
                        ifExpression
                          if
                          expression
                            expression
                              &
                              expression
                                expression
                                  pathExpression
                                    pathInExpression
                                      pathExprSegment
                                        pathIdentSegment
                                          identifier
                                            chunk
                                [
                                expression
                                  expression
                                    expression
                                      pathExpression
                                        pathInExpression
                                          pathExprSegment
                                            pathIdentSegment
                                              identifier
                                                boundary_len
                                    +
                                    expression
                                      literalExpression
                                        2
                                  ..
                                ]
                            comparisonOperator
                              ==
                            expression
                              pathExpression
                                pathInExpression
                                  pathExprSegment
                                    pathIdentSegment
                                      identifier
                                        LINE_BREAK
                          blockExpression
                            {
                            statements
                              statement
                                expressionStatement
                                  expression
                                    return
                                    expression
                                      expression
                                        pathExpression
                                          pathInExpression
                                            pathExprSegment
                                              pathIdentSegment
                                                identifier
                                                  Ok
                                      (
                                      callParams
                                        expression
                                          expression
                                            pathExpression
                                              pathInExpression
                                                pathExprSegment
                                                  pathIdentSegment
                                                    identifier
                                                      Some
                                          (
                                          callParams
                                            expression
                                              literalExpression
                                                false
                                          )
                                      )
                                  ;
                            }
                  statement
                    expressionStatement
                      expressionWithBlock
                        ifExpression
                          if
                          expression
                            expression
                              expression
                                &
                                expression
                                  expression
                                    pathExpression
                                      pathInExpression
                                        pathExprSegment
                                          pathIdentSegment
                                            identifier
                                              chunk
                                  [
                                  expression
                                    expression
                                      expression
                                        pathExpression
                                          pathInExpression
                                            pathExprSegment
                                              pathIdentSegment
                                                identifier
                                                  boundary_len
                                      +
                                      expression
                                        literalExpression
                                          2
                                    ..
                                    expression
                                      expression
                                        pathExpression
                                          pathInExpression
                                            pathExprSegment
                                              pathIdentSegment
                                                identifier
                                                  boundary_len
                                      +
                                      expression
                                        literalExpression
                                          4
                                  ]
                              comparisonOperator
                                ==
                              expression
                                pathExpression
                                  pathInExpression
                                    pathExprSegment
                                      pathIdentSegment
                                        identifier
                                          BOUNDARY_MARKER
                            &&
                            expression
                              (
                              expression
                                expression
                                  expression
                                    expression
                                      pathExpression
                                        pathInExpression
                                          pathExprSegment
                                            pathIdentSegment
                                              identifier
                                                chunk
                                    .
                                    pathExprSegment
                                      pathIdentSegment
                                        identifier
                                          len
                                    (
                                    )
                                  comparisonOperator
                                    ==
                                  expression
                                    expression
                                      expression
                                        pathExpression
                                          pathInExpression
                                            pathExprSegment
                                              pathIdentSegment
                                                identifier
                                                  boundary_len
                                      +
                                      expression
                                        literalExpression
                                          2
                                    +
                                    expression
                                      literalExpression
                                        2
                                ||
                                expression
                                  expression
                                    &
                                    expression
                                      expression
                                        pathExpression
                                          pathInExpression
                                            pathExprSegment
                                              pathIdentSegment
                                                identifier
                                                  chunk
                                      [
                                      expression
                                        expression
                                          expression
                                            pathExpression
                                              pathInExpression
                                                pathExprSegment
                                                  pathIdentSegment
                                                    identifier
                                                      boundary_len
                                          +
                                          expression
                                            literalExpression
                                              4
                                        ..
                                      ]
                                  comparisonOperator
                                    ==
                                  expression
                                    pathExpression
                                      pathInExpression
                                        pathExprSegment
                                          pathIdentSegment
                                            identifier
                                              LINE_BREAK
                              )
                          blockExpression
                            {
                            statements
                              statement
                                expressionStatement
                                  expression
                                    return
                                    expression
                                      expression
                                        pathExpression
                                          pathInExpression
                                            pathExprSegment
                                              pathIdentSegment
                                                identifier
                                                  Ok
                                      (
                                      callParams
                                        expression
                                          expression
                                            pathExpression
                                              pathInExpression
                                                pathExprSegment
                                                  pathIdentSegment
                                                    identifier
                                                      Some
                                          (
                                          callParams
                                            expression
                                              literalExpression
                                                true
                                          )
                                      )
                                  ;
                            }
                  expression
                    expression
                      pathExpression
                        pathInExpression
                          pathExprSegment
                            pathIdentSegment
                              identifier
                                Err
                    (
                    callParams
                      expression
                        pathExpression
                          pathInExpression
                            pathExprSegment
                              pathIdentSegment
                                identifier
                                  Error
                            ::
                            pathExprSegment
                              pathIdentSegment
                                identifier
                                  BoundaryMissing
                    )
                }
          associatedItem
            function_
              functionQualifiers
              fn
              identifier
                skip_until_boundary
              (
              functionParameters
                functionParam
                  functionParamPattern
                    pattern
                      patternNoTopAlt
                        patternWithoutRange
                          identifierPattern
                            identifier
                              payload
                    :
                    type_
                      typeNoBounds
                        referenceType
                          &
                          mut
                          typeNoBounds
                            traitObjectTypeOneBound
                              traitBound
                                typePath
                                  typePathSegment
                                    pathIdentSegment
                                      identifier
                                        PayloadBuffer
                ,
                functionParam
                  functionParamPattern
                    pattern
                      patternNoTopAlt
                        patternWithoutRange
                          identifierPattern
                            identifier
                              boundary
                    :
                    type_
                      typeNoBounds
                        referenceType
                          &
                          typeNoBounds
                            traitObjectTypeOneBound
                              traitBound
                                typePath
                                  typePathSegment
                                    pathIdentSegment
                                      identifier
                                        str
                ,
              )
              functionReturnType
                ->
                type_
                  typeNoBounds
                    traitObjectTypeOneBound
                      traitBound
                        typePath
                          typePathSegment
                            pathIdentSegment
                              identifier
                                Result
                            genericArgs
                              <
                              genericArgsTypes
                                type_
                                  typeNoBounds
                                    traitObjectTypeOneBound
                                      traitBound
                                        typePath
                                          typePathSegment
                                            pathIdentSegment
                                              identifier
                                                Option
                                            genericArgs
                                              <
                                              genericArgsTypes
                                                type_
                                                  typeNoBounds
                                                    traitObjectTypeOneBound
                                                      traitBound
                                                        typePath
                                                          typePathSegment
                                                            pathIdentSegment
                                                              identifier
                                                                bool
                                              >
                                ,
                                type_
                                  typeNoBounds
                                    traitObjectTypeOneBound
                                      traitBound
                                        typePath
                                          typePathSegment
                                            pathIdentSegment
                                              identifier
                                                Error
                              >
              blockExpression
                {
                statements
                  statement
                    letStatement
                      let
                      patternNoTopAlt
                        patternWithoutRange
                          identifierPattern
                            mut
                            identifier
                              eof
                      =
                      expression
                        literalExpression
                          false
                      ;
                  statement
                    expressionStatement
                      expressionWithBlock
                        loopExpression
                          infiniteLoopExpression
                            loop
                            blockExpression
                              {
                              statements
                                statement
                                  expressionStatement
                                    expressionWithBlock
                                      matchExpression
                                        match
                                        expression
                                          expression
                                            expression
                                              pathExpression
                                                pathInExpression
                                                  pathExprSegment
                                                    pathIdentSegment
                                                      identifier
                                                        payload
                                            .
                                            pathExprSegment
                                              pathIdentSegment
                                                identifier
                                                  readline
                                            (
                                            )
                                          ?
                                        {
                                        matchArms
                                          matchArm
                                            pattern
                                              patternNoTopAlt
                                                patternWithoutRange
                                                  tupleStructPattern
                                                    pathInExpression
                                                      pathExprSegment
                                                        pathIdentSegment
                                                          identifier
                                                            Some
                                                    (
                                                    tupleStructItems
                                                      pattern
                                                        patternNoTopAlt
                                                          patternWithoutRange
                                                            identifierPattern
                                                              identifier
                                                                chunk
                                                    )
                                          =>
                                          matchArmExpression
                                            expressionWithBlock
                                              blockExpression
                                                {
                                                statements
                                                  statement
                                                    expressionStatement
                                                      expressionWithBlock
                                                        ifExpression
                                                          if
                                                          expression
                                                            expression
                                                              pathExpression
                                                                pathInExpression
                                                                  pathExprSegment
                                                                    pathIdentSegment
                                                                      identifier
                                                                        chunk
                                                            .
                                                            pathExprSegment
                                                              pathIdentSegment
                                                                identifier
                                                                  is_empty
                                                            (
                                                            )
                                                          blockExpression
                                                            {
                                                            statements
                                                              statement
                                                                expressionStatement
                                                                  expression
                                                                    return
                                                                    expression
                                                                      expression
                                                                        pathExpression
                                                                          pathInExpression
                                                                            pathExprSegment
                                                                              pathIdentSegment
                                                                                identifier
                                                                                  Err
                                                                      (
                                                                      callParams
                                                                        expression
                                                                          pathExpression
                                                                            pathInExpression
                                                                              pathExprSegment
                                                                                pathIdentSegment
                                                                                  identifier
                                                                                    Error
                                                                              ::
                                                                              pathExprSegment
                                                                                pathIdentSegment
                                                                                  identifier
                                                                                    BoundaryMissing
                                                                      )
                                                                  ;
                                                            }
                                                  statement
                                                    expressionStatement
                                                      expressionWithBlock
                                                        ifExpression
                                                          if
                                                          expression
                                                            expression
                                                              expression
                                                                pathExpression
                                                                  pathInExpression
                                                                    pathExprSegment
                                                                      pathIdentSegment
                                                                        identifier
                                                                          chunk
                                                              .
                                                              pathExprSegment
                                                                pathIdentSegment
                                                                  identifier
                                                                    len
                                                              (
                                                              )
                                                            comparisonOperator
                                                              <
                                                            expression
                                                              expression
                                                                pathExpression
                                                                  pathInExpression
                                                                    pathExprSegment
                                                                      pathIdentSegment
                                                                        identifier
                                                                          boundary
                                                              .
                                                              pathExprSegment
                                                                pathIdentSegment
                                                                  identifier
                                                                    len
                                                              (
                                                              )
                                                          blockExpression
                                                            {
                                                            statements
                                                              statement
                                                                expressionStatement
                                                                  expression
                                                                    continue
                                                                  ;
                                                            }
                                                  statement
                                                    expressionStatement
                                                      expressionWithBlock
                                                        ifExpression
                                                          if
                                                          expression
                                                            expression
                                                              expression
                                                                &
                                                                expression
                                                                  expression
                                                                    pathExpression
                                                                      pathInExpression
                                                                        pathExprSegment
                                                                          pathIdentSegment
                                                                            identifier
                                                                              chunk
                                                                  [
                                                                  expression
                                                                    ..
                                                                    expression
                                                                      literalExpression
                                                                        2
                                                                  ]
                                                              comparisonOperator
                                                                ==
                                                              expression
                                                                literalExpression
                                                                  b"--"
                                                            &&
                                                            expression
                                                              expression
                                                                &
                                                                expression
                                                                  expression
                                                                    pathExpression
                                                                      pathInExpression
                                                                        pathExprSegment
                                                                          pathIdentSegment
                                                                            identifier
                                                                              chunk
                                                                  [
                                                                  expression
                                                                    expression
                                                                      literalExpression
                                                                        2
                                                                    ..
                                                                    expression
                                                                      expression
                                                                        expression
                                                                          pathExpression
                                                                            pathInExpression
                                                                              pathExprSegment
                                                                                pathIdentSegment
                                                                                  identifier
                                                                                    chunk
                                                                        .
                                                                        pathExprSegment
                                                                          pathIdentSegment
                                                                            identifier
                                                                              len
                                                                        (
                                                                        )
                                                                      -
                                                                      expression
                                                                        literalExpression
                                                                          2
                                                                  ]
                                                              comparisonOperator
                                                                ==
                                                              expression
                                                                expression
                                                                  pathExpression
                                                                    pathInExpression
                                                                      pathExprSegment
                                                                        pathIdentSegment
                                                                          identifier
                                                                            boundary
                                                                .
                                                                pathExprSegment
                                                                  pathIdentSegment
                                                                    identifier
                                                                      as_bytes
                                                                (
                                                                )
                                                          blockExpression
                                                            {
                                                            statements
                                                              statement
                                                                expressionStatement
                                                                  expression
                                                                    break
                                                                  ;
                                                            }
                                                          else
                                                          blockExpression
                                                            {
                                                            statements
                                                              statement
                                                                expressionStatement
                                                                  expressionWithBlock
                                                                    ifExpression
                                                                      if
                                                                      expression
                                                                        expression
                                                                          expression
                                                                            pathExpression
                                                                              pathInExpression
                                                                                pathExprSegment
                                                                                  pathIdentSegment
                                                                                    identifier
                                                                                      chunk
                                                                          .
                                                                          pathExprSegment
                                                                            pathIdentSegment
                                                                              identifier
                                                                                len
                                                                          (
                                                                          )
                                                                        comparisonOperator
                                                                          <
                                                                        expression
                                                                          expression
                                                                            expression
                                                                              pathExpression
                                                                                pathInExpression
                                                                                  pathExprSegment
                                                                                    pathIdentSegment
                                                                                      identifier
                                                                                        boundary
                                                                            .
                                                                            pathExprSegment
                                                                              pathIdentSegment
                                                                                identifier
                                                                                  len
                                                                            (
                                                                            )
                                                                          +
                                                                          expression
                                                                            literalExpression
                                                                              2
                                                                      blockExpression
                                                                        {
                                                                        statements
                                                                          statement
                                                                            expressionStatement
                                                                              expression
                                                                                continue
                                                                              ;
                                                                        }
                                                              statement
                                                                letStatement
                                                                  let
                                                                  patternNoTopAlt
                                                                    patternWithoutRange
                                                                      identifierPattern
                                                                        identifier
                                                                          b
                                                                  :
                                                                  type_
                                                                    typeNoBounds
                                                                      referenceType
                                                                        &
                                                                        typeNoBounds
                                                                          sliceType
                                                                            [
                                                                            type_
                                                                              typeNoBounds
                                                                                traitObjectTypeOneBound
                                                                                  traitBound
                                                                                    typePath
                                                                                      typePathSegment
                                                                                        pathIdentSegment
                                                                                          identifier
                                                                                            u8
                                                                            ]
                                                                  =
                                                                  expression
                                                                    expression
                                                                      pathExpression
                                                                        pathInExpression
                                                                          pathExprSegment
                                                                            pathIdentSegment
                                                                              identifier
                                                                                boundary
                                                                    .
                                                                    pathExprSegment
                                                                      pathIdentSegment
                                                                        identifier
                                                                          as_ref
                                                                    (
                                                                    )
                                                                  ;
                                                              statement
                                                                expressionStatement
                                                                  expressionWithBlock
                                                                    ifExpression
                                                                      if
                                                                      expression
                                                                        expression
                                                                          expression
                                                                            &
                                                                            expression
                                                                              expression
                                                                                pathExpression
                                                                                  pathInExpression
                                                                                    pathExprSegment
                                                                                      pathIdentSegment
                                                                                        identifier
                                                                                          chunk
                                                                              [
                                                                              expression
                                                                                ..
                                                                                expression
                                                                                  expression
                                                                                    pathExpression
                                                                                      pathInExpression
                                                                                        pathExprSegment
                                                                                          pathIdentSegment
                                                                                            identifier
                                                                                              boundary
                                                                                  .
                                                                                  pathExprSegment
                                                                                    pathIdentSegment
                                                                                      identifier
                                                                                        len
                                                                                  (
                                                                                  )
                                                                              ]
                                                                          comparisonOperator
                                                                            ==
                                                                          expression
                                                                            pathExpression
                                                                              pathInExpression
                                                                                pathExprSegment
                                                                                  pathIdentSegment
                                                                                    identifier
                                                                                      b
                                                                        &&
                                                                        expression
                                                                          expression
                                                                            &
                                                                            expression
                                                                              expression
                                                                                pathExpression
                                                                                  pathInExpression
                                                                                    pathExprSegment
                                                                                      pathIdentSegment
                                                                                        identifier
                                                                                          chunk
                                                                              [
                                                                              expression
                                                                                expression
                                                                                  expression
                                                                                    pathExpression
                                                                                      pathInExpression
                                                                                        pathExprSegment
                                                                                          pathIdentSegment
                                                                                            identifier
                                                                                              boundary
                                                                                  .
                                                                                  pathExprSegment
                                                                                    pathIdentSegment
                                                                                      identifier
                                                                                        len
                                                                                  (
                                                                                  )
                                                                                ..
                                                                                expression
                                                                                  expression
                                                                                    expression
                                                                                      pathExpression
                                                                                        pathInExpression
                                                                                          pathExprSegment
                                                                                            pathIdentSegment
                                                                                              identifier
                                                                                                boundary
                                                                                    .
                                                                                    pathExprSegment
                                                                                      pathIdentSegment
                                                                                        identifier
                                                                                          len
                                                                                    (
                                                                                    )
                                                                                  +
                                                                                  expression
                                                                                    literalExpression
                                                                                      2
                                                                              ]
                                                                          comparisonOperator
                                                                            ==
                                                                          expression
                                                                            literalExpression
                                                                              b"--"
                                                                      blockExpression
                                                                        {
                                                                        statements
                                                                          statement
                                                                            expressionStatement
                                                                              expression
                                                                                expression
                                                                                  pathExpression
                                                                                    pathInExpression
                                                                                      pathExprSegment
                                                                                        pathIdentSegment
                                                                                          identifier
                                                                                            eof
                                                                                =
                                                                                expression
                                                                                  literalExpression
                                                                                    true
                                                                              ;
                                                                          statement
                                                                            expressionStatement
                                                                              expression
                                                                                break
                                                                              ;
                                                                        }
                                                            }
                                                }
                                          matchArm
                                            pattern
                                              patternNoTopAlt
                                                patternWithoutRange
                                                  identifierPattern
                                                    identifier
                                                      None
                                          =>
                                          expression
                                            expressionWithBlock
                                              blockExpression
                                                {
                                                statements
                                                  statement
                                                    expressionStatement
                                                      expression
                                                        return
                                                        expression
                                                          expressionWithBlock
                                                            ifExpression
                                                              if
                                                              expression
                                                                expression
                                                                  pathExpression
                                                                    pathInExpression
                                                                      pathExprSegment
                                                                        pathIdentSegment
                                                                          identifier
                                                                            payload
                                                                .
                                                                identifier
                                                                  eof
                                                              blockExpression
                                                                {
                                                                statements
                                                                  expression
                                                                    expression
                                                                      pathExpression
                                                                        pathInExpression
                                                                          pathExprSegment
                                                                            pathIdentSegment
                                                                              identifier
                                                                                Err
                                                                    (
                                                                    callParams
                                                                      expression
                                                                        pathExpression
                                                                          pathInExpression
                                                                            pathExprSegment
                                                                              pathIdentSegment
                                                                                identifier
                                                                                  Error
                                                                            ::
                                                                            pathExprSegment
                                                                              pathIdentSegment
                                                                                identifier
                                                                                  Incomplete
                                                                    )
                                                                }
                                                              else
                                                              blockExpression
                                                                {
                                                                statements
                                                                  expression
                                                                    expression
                                                                      pathExpression
                                                                        pathInExpression
                                                                          pathExprSegment
                                                                            pathIdentSegment
                                                                              identifier
                                                                                Ok
                                                                    (
                                                                    callParams
                                                                      expression
                                                                        pathExpression
                                                                          pathInExpression
                                                                            pathExprSegment
                                                                              pathIdentSegment
                                                                                identifier
                                                                                  None
                                                                    )
                                                                }
                                                      ;
                                                }
                                        }
                              }
                  expression
                    expression
                      pathExpression
                        pathInExpression
                          pathExprSegment
                            pathIdentSegment
                              identifier
                                Ok
                    (
                    callParams
                      expression
                        expression
                          pathExpression
                            pathInExpression
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    Some
                        (
                        callParams
                          expression
                            pathExpression
                              pathInExpression
                                pathExprSegment
                                  pathIdentSegment
                                    identifier
                                      eof
                        )
                    )
                }
          associatedItem
            function_
              functionQualifiers
              fn
              identifier
                poll
              (
              functionParameters
                selfParam
                  shorthandSelf
                    &
                    mut
                    self
                ,
                functionParam
                  functionParamPattern
                    pattern
                      patternNoTopAlt
                        patternWithoutRange
                          identifierPattern
                            identifier
                              safety
                    :
                    type_
                      typeNoBounds
                        referenceType
                          &
                          typeNoBounds
                            traitObjectTypeOneBound
                              traitBound
                                typePath
                                  typePathSegment
                                    pathIdentSegment
                                      identifier
                                        Safety
                ,
                functionParam
                  functionParamPattern
                    pattern
                      patternNoTopAlt
                        patternWithoutRange
                          identifierPattern
                            identifier
                              cx
                    :
                    type_
                      typeNoBounds
                        referenceType
                          &
                          typeNoBounds
                            traitObjectTypeOneBound
                              traitBound
                                typePath
                                  typePathSegment
                                    pathIdentSegment
                                      identifier
                                        Context
                                    genericArgs
                                      <
                                      genericArgsLifetimes
                                        lifetime
                                          '_
                                      >
              )
              functionReturnType
                ->
                type_
                  typeNoBounds
                    traitObjectTypeOneBound
                      traitBound
                        typePath
                          typePathSegment
                            pathIdentSegment
                              identifier
                                Poll
                            genericArgs
                              <
                              genericArgsTypes
                                type_
                                  typeNoBounds
                                    traitObjectTypeOneBound
                                      traitBound
                                        typePath
                                          typePathSegment
                                            pathIdentSegment
                                              identifier
                                                Option
                                            genericArgs
                                              <
                                              genericArgsTypes
                                                type_
                                                  typeNoBounds
                                                    traitObjectTypeOneBound
                                                      traitBound
                                                        typePath
                                                          typePathSegment
                                                            pathIdentSegment
                                                              identifier
                                                                Result
                                                            genericArgs
                                                              <
                                                              genericArgsTypes
                                                                type_
                                                                  typeNoBounds
                                                                    traitObjectTypeOneBound
                                                                      traitBound
                                                                        typePath
                                                                          typePathSegment
                                                                            pathIdentSegment
                                                                              identifier
                                                                                Field
                                                                ,
                                                                type_
                                                                  typeNoBounds
                                                                    traitObjectTypeOneBound
                                                                      traitBound
                                                                        typePath
                                                                          typePathSegment
                                                                            pathIdentSegment
                                                                              identifier
                                                                                Error
                                                              >
                                              >
                              >
              blockExpression
                {
                statements
                  statement
                    expressionStatement
                      expressionWithBlock
                        ifExpression
                          if
                          expression
                            expression
                              expression
                                pathExpression
                                  pathInExpression
                                    pathExprSegment
                                      pathIdentSegment
                                        self
                              .
                              identifier
                                state
                            comparisonOperator
                              ==
                            expression
                              pathExpression
                                pathInExpression
                                  pathExprSegment
                                    pathIdentSegment
                                      identifier
                                        State
                                  ::
                                  pathExprSegment
                                    pathIdentSegment
                                      identifier
                                        Eof
                          blockExpression
                            {
                            statements
                              expression
                                expression
                                  pathExpression
                                    pathInExpression
                                      pathExprSegment
                                        pathIdentSegment
                                          identifier
                                            Poll
                                      ::
                                      pathExprSegment
                                        pathIdentSegment
                                          identifier
                                            Ready
                                (
                                callParams
                                  expression
                                    pathExpression
                                      pathInExpression
                                        pathExprSegment
                                          pathIdentSegment
                                            identifier
                                              None
                                )
                            }
                          else
                          blockExpression
                            {
                            statements
                              statement
                                expressionStatement
                                  expressionWithBlock
                                    loopExpression
                                      infiniteLoopExpression
                                        loop
                                        blockExpression
                                          {
                                          statements
                                            statement
                                              expressionStatement
                                                expressionWithBlock
                                                  ifExpression
                                                    if
                                                    expression
                                                      expression
                                                        pathExpression
                                                          pathInExpression
                                                            pathExprSegment
                                                              pathIdentSegment
                                                                identifier
                                                                  safety
                                                      .
                                                      pathExprSegment
                                                        pathIdentSegment
                                                          identifier
                                                            current
                                                      (
                                                      )
                                                    blockExpression
                                                      {
                                                      statements
                                                        statement
                                                          letStatement
                                                            let
                                                            patternNoTopAlt
                                                              patternWithoutRange
                                                                identifierPattern
                                                                  identifier
                                                                    stop
                                                            =
                                                            expression
                                                              expressionWithBlock
                                                                matchExpression
                                                                  match
                                                                  expression
                                                                    expression
                                                                      pathExpression
                                                                        pathInExpression
                                                                          pathExprSegment
                                                                            pathIdentSegment
                                                                              self
                                                                    .
                                                                    identifier
                                                                      item
                                                                  {
                                                                  matchArms
                                                                    matchArm
                                                                      pattern
                                                                        patternNoTopAlt
                                                                          patternWithoutRange
                                                                            tupleStructPattern
                                                                              pathInExpression
                                                                                pathExprSegment
                                                                                  pathIdentSegment
                                                                                    identifier
                                                                                      Item
                                                                                ::
                                                                                pathExprSegment
                                                                                  pathIdentSegment
                                                                                    identifier
                                                                                      Field
                                                                              (
                                                                              tupleStructItems
                                                                                pattern
                                                                                  patternNoTopAlt
                                                                                    patternWithoutRange
                                                                                      identifierPattern
                                                                                        ref
                                                                                        mut
                                                                                        identifier
                                                                                          field
                                                                              )
                                                                    =>
                                                                    matchArmExpression
                                                                      expression
                                                                        expressionWithBlock
                                                                          matchExpression
                                                                            match
                                                                            expression
                                                                              expression
                                                                                expression
                                                                                  pathExpression
                                                                                    pathInExpression
                                                                                      pathExprSegment
                                                                                        pathIdentSegment
                                                                                          identifier
                                                                                            field
                                                                                .
                                                                                pathExprSegment
                                                                                  pathIdentSegment
                                                                                    identifier
                                                                                      borrow_mut
                                                                                (
                                                                                )
                                                                              .
                                                                              pathExprSegment
                                                                                pathIdentSegment
                                                                                  identifier
                                                                                    poll
                                                                              (
                                                                              callParams
                                                                                expression
                                                                                  pathExpression
                                                                                    pathInExpression
                                                                                      pathExprSegment
                                                                                        pathIdentSegment
                                                                                          identifier
                                                                                            safety
                                                                              )
                                                                            {
                                                                            matchArms
                                                                              matchArm
                                                                                pattern
                                                                                  patternNoTopAlt
                                                                                    patternWithoutRange
                                                                                      pathPattern
                                                                                        pathInExpression
                                                                                          pathExprSegment
                                                                                            pathIdentSegment
                                                                                              identifier
                                                                                                Poll
                                                                                          ::
                                                                                          pathExprSegment
                                                                                            pathIdentSegment
                                                                                              identifier
                                                                                                Pending
                                                                              =>
                                                                              matchArmExpression
                                                                                expression
                                                                                  return
                                                                                  expression
                                                                                    pathExpression
                                                                                      pathInExpression
                                                                                        pathExprSegment
                                                                                          pathIdentSegment
                                                                                            identifier
                                                                                              Poll
                                                                                        ::
                                                                                        pathExprSegment
                                                                                          pathIdentSegment
                                                                                            identifier
                                                                                              Pending
                                                                                ,
                                                                              matchArm
                                                                                pattern
                                                                                  patternNoTopAlt
                                                                                    patternWithoutRange
                                                                                      tupleStructPattern
                                                                                        pathInExpression
                                                                                          pathExprSegment
                                                                                            pathIdentSegment
                                                                                              identifier
                                                                                                Poll
                                                                                          ::
                                                                                          pathExprSegment
                                                                                            pathIdentSegment
                                                                                              identifier
                                                                                                Ready
                                                                                        (
                                                                                        tupleStructItems
                                                                                          pattern
                                                                                            patternNoTopAlt
                                                                                              patternWithoutRange
                                                                                                tupleStructPattern
                                                                                                  pathInExpression
                                                                                                    pathExprSegment
                                                                                                      pathIdentSegment
                                                                                                        identifier
                                                                                                          Some
                                                                                                  (
                                                                                                  tupleStructItems
                                                                                                    pattern
                                                                                                      patternNoTopAlt
                                                                                                        patternWithoutRange
                                                                                                          tupleStructPattern
                                                                                                            pathInExpression
                                                                                                              pathExprSegment
                                                                                                                pathIdentSegment
                                                                                                                  identifier
                                                                                                                    Ok
                                                                                                            (
                                                                                                            tupleStructItems
                                                                                                              pattern
                                                                                                                patternNoTopAlt
                                                                                                                  patternWithoutRange
                                                                                                                    wildcardPattern
                                                                                                                      _
                                                                                                            )
                                                                                                  )
                                                                                        )
                                                                              =>
                                                                              matchArmExpression
                                                                                expression
                                                                                  continue
                                                                                ,
                                                                              matchArm
                                                                                pattern
                                                                                  patternNoTopAlt
                                                                                    patternWithoutRange
                                                                                      tupleStructPattern
                                                                                        pathInExpression
                                                                                          pathExprSegment
                                                                                            pathIdentSegment
                                                                                              identifier
                                                                                                Poll
                                                                                          ::
                                                                                          pathExprSegment
                                                                                            pathIdentSegment
                                                                                              identifier
                                                                                                Ready
                                                                                        (
                                                                                        tupleStructItems
                                                                                          pattern
                                                                                            patternNoTopAlt
                                                                                              patternWithoutRange
                                                                                                tupleStructPattern
                                                                                                  pathInExpression
                                                                                                    pathExprSegment
                                                                                                      pathIdentSegment
                                                                                                        identifier
                                                                                                          Some
                                                                                                  (
                                                                                                  tupleStructItems
                                                                                                    pattern
                                                                                                      patternNoTopAlt
                                                                                                        patternWithoutRange
                                                                                                          tupleStructPattern
                                                                                                            pathInExpression
                                                                                                              pathExprSegment
                                                                                                                pathIdentSegment
                                                                                                                  identifier
                                                                                                                    Err
                                                                                                            (
                                                                                                            tupleStructItems
                                                                                                              pattern
                                                                                                                patternNoTopAlt
                                                                                                                  patternWithoutRange
                                                                                                                    identifierPattern
                                                                                                                      identifier
                                                                                                                        err
                                                                                                            )
                                                                                                  )
                                                                                        )
                                                                              =>
                                                                              matchArmExpression
                                                                                expression
                                                                                  return
                                                                                  expression
                                                                                    expression
                                                                                      pathExpression
                                                                                        pathInExpression
                                                                                          pathExprSegment
                                                                                            pathIdentSegment
                                                                                              identifier
                                                                                                Poll
                                                                                          ::
                                                                                          pathExprSegment
                                                                                            pathIdentSegment
                                                                                              identifier
                                                                                                Ready
                                                                                    (
                                                                                    callParams
                                                                                      expression
                                                                                        expression
                                                                                          pathExpression
                                                                                            pathInExpression
                                                                                              pathExprSegment
                                                                                                pathIdentSegment
                                                                                                  identifier
                                                                                                    Some
                                                                                        (
                                                                                        callParams
                                                                                          expression
                                                                                            expression
                                                                                              pathExpression
                                                                                                pathInExpression
                                                                                                  pathExprSegment
                                                                                                    pathIdentSegment
                                                                                                      identifier
                                                                                                        Err
                                                                                            (
                                                                                            callParams
                                                                                              expression
                                                                                                pathExpression
                                                                                                  pathInExpression
                                                                                                    pathExprSegment
                                                                                                      pathIdentSegment
                                                                                                        identifier
                                                                                                          err
                                                                                            )
                                                                                        )
                                                                                    )
                                                                                ,
                                                                              matchArm
                                                                                pattern
                                                                                  patternNoTopAlt
                                                                                    patternWithoutRange
                                                                                      tupleStructPattern
                                                                                        pathInExpression
                                                                                          pathExprSegment
                                                                                            pathIdentSegment
                                                                                              identifier
                                                                                                Poll
                                                                                          ::
                                                                                          pathExprSegment
                                                                                            pathIdentSegment
                                                                                              identifier
                                                                                                Ready
                                                                                        (
                                                                                        tupleStructItems
                                                                                          pattern
                                                                                            patternNoTopAlt
                                                                                              patternWithoutRange
                                                                                                identifierPattern
                                                                                                  identifier
                                                                                                    None
                                                                                        )
                                                                              =>
                                                                              expression
                                                                                literalExpression
                                                                                  true
                                                                              ,
                                                                            }
                                                                      ,
                                                                    matchArm
                                                                      pattern
                                                                        patternNoTopAlt
                                                                          patternWithoutRange
                                                                            pathPattern
                                                                              pathInExpression
                                                                                pathExprSegment
                                                                                  pathIdentSegment
                                                                                    identifier
                                                                                      Item
                                                                                ::
                                                                                pathExprSegment
                                                                                  pathIdentSegment
                                                                                    identifier
                                                                                      None
                                                                    =>
                                                                    expression
                                                                      literalExpression
                                                                        false
                                                                    ,
                                                                  }
                                                            ;
                                                        statement
                                                          expressionStatement
                                                            expressionWithBlock
                                                              ifExpression
                                                                if
                                                                expression
                                                                  pathExpression
                                                                    pathInExpression
                                                                      pathExprSegment
                                                                        pathIdentSegment
                                                                          identifier
                                                                            stop
                                                                blockExpression
                                                                  {
                                                                  statements
                                                                    statement
                                                                      expressionStatement
                                                                        expression
                                                                          expression
                                                                            expression
                                                                              pathExpression
                                                                                pathInExpression
                                                                                  pathExprSegment
                                                                                    pathIdentSegment
                                                                                      self
                                                                            .
                                                                            identifier
                                                                              item
                                                                          =
                                                                          expression
                                                                            pathExpression
                                                                              pathInExpression
                                                                                pathExprSegment
                                                                                  pathIdentSegment
                                                                                    identifier
                                                                                      Item
                                                                                ::
                                                                                pathExprSegment
                                                                                  pathIdentSegment
                                                                                    identifier
                                                                                      None
                                                                        ;
                                                                  }
                                                        statement
                                                          expressionStatement
                                                            expressionWithBlock
                                                              ifLetExpression
                                                                if
                                                                let
                                                                pattern
                                                                  patternNoTopAlt
                                                                    patternWithoutRange
                                                                      pathPattern
                                                                        pathInExpression
                                                                          pathExprSegment
                                                                            pathIdentSegment
                                                                              identifier
                                                                                Item
                                                                          ::
                                                                          pathExprSegment
                                                                            pathIdentSegment
                                                                              identifier
                                                                                None
                                                                =
                                                                expression
                                                                  expression
                                                                    pathExpression
                                                                      pathInExpression
                                                                        pathExprSegment
                                                                          pathIdentSegment
                                                                            self
                                                                  .
                                                                  identifier
                                                                    item
                                                                blockExpression
                                                                  {
                                                                  statements
                                                                    statement
                                                                      expressionStatement
                                                                        expression
                                                                          break
                                                                        ;
                                                                  }
                                                      }
                                          }
                              statement
                                letStatement
                                  let
                                  patternNoTopAlt
                                    patternWithoutRange
                                      identifierPattern
                                        identifier
                                          field_headers
                                  =
                                  expression
                                    expressionWithBlock
                                      ifLetExpression
                                        if
                                        let
                                        pattern
                                          patternNoTopAlt
                                            patternWithoutRange
                                              tupleStructPattern
                                                pathInExpression
                                                  pathExprSegment
                                                    pathIdentSegment
                                                      identifier
                                                        Some
                                                (
                                                tupleStructItems
                                                  pattern
                                                    patternNoTopAlt
                                                      patternWithoutRange
                                                        identifierPattern
                                                          mut
                                                          identifier
                                                            payload
                                                )
                                        =
                                        expression
                                          expression
                                            expression
                                              pathExpression
                                                pathInExpression
                                                  pathExprSegment
                                                    pathIdentSegment
                                                      self
                                            .
                                            identifier
                                              payload
                                          .
                                          pathExprSegment
                                            pathIdentSegment
                                              identifier
                                                get_mut
                                          (
                                          callParams
                                            expression
                                              pathExpression
                                                pathInExpression
                                                  pathExprSegment
                                                    pathIdentSegment
                                                      identifier
                                                        safety
                                          )
                                        blockExpression
                                          {
                                          statements
                                            statement
                                              expressionStatement
                                                expressionWithBlock
                                                  matchExpression
                                                    match
                                                    expression
                                                      expression
                                                        pathExpression
                                                          pathInExpression
                                                            pathExprSegment
                                                              pathIdentSegment
                                                                self
                                                      .
                                                      identifier
                                                        state
                                                    {
                                                    matchArms
                                                      matchArm
                                                        pattern
                                                          patternNoTopAlt
                                                            patternWithoutRange
                                                              pathPattern
                                                                pathInExpression
                                                                  pathExprSegment
                                                                    pathIdentSegment
                                                                      identifier
                                                                        State
                                                                  ::
                                                                  pathExprSegment
                                                                    pathIdentSegment
                                                                      identifier
                                                                        FirstBoundary
                                                      =>
                                                      matchArmExpression
                                                        expressionWithBlock
                                                          blockExpression
                                                            {
                                                            statements
                                                              statement
                                                                expressionStatement
                                                                  expressionWithBlock
                                                                    matchExpression
                                                                      match
                                                                      expression
                                                                        expression
                                                                          expression
                                                                            pathExpression
                                                                              pathInExpression
                                                                                pathExprSegment
                                                                                  pathIdentSegment
                                                                                    identifier
                                                                                      Inner
                                                                                ::
                                                                                pathExprSegment
                                                                                  pathIdentSegment
                                                                                    identifier
                                                                                      skip_until_boundary
                                                                          (
                                                                          callParams
                                                                            expression
                                                                              &
                                                                              mut
                                                                              expression
                                                                                pathExpression
                                                                                  pathInExpression
                                                                                    pathExprSegment
                                                                                      pathIdentSegment
                                                                                        identifier
                                                                                          payload
                                                                            ,
                                                                            expression
                                                                              &
                                                                              expression
                                                                                expression
                                                                                  pathExpression
                                                                                    pathInExpression
                                                                                      pathExprSegment
                                                                                        pathIdentSegment
                                                                                          self
                                                                                .
                                                                                identifier
                                                                                  boundary
                                                                          )
                                                                        ?
                                                                      {
                                                                      matchArms
                                                                        matchArm
                                                                          pattern
                                                                            patternNoTopAlt
                                                                              patternWithoutRange
                                                                                identifierPattern
                                                                                  identifier
                                                                                    None
                                                                        =>
                                                                        matchArmExpression
                                                                          expression
                                                                            return
                                                                            expression
                                                                              pathExpression
                                                                                pathInExpression
                                                                                  pathExprSegment
                                                                                    pathIdentSegment
                                                                                      identifier
                                                                                        Poll
                                                                                  ::
                                                                                  pathExprSegment
                                                                                    pathIdentSegment
                                                                                      identifier
                                                                                        Pending
                                                                          ,
                                                                        matchArm
                                                                          pattern
                                                                            patternNoTopAlt
                                                                              patternWithoutRange
                                                                                tupleStructPattern
                                                                                  pathInExpression
                                                                                    pathExprSegment
                                                                                      pathIdentSegment
                                                                                        identifier
                                                                                          Some
                                                                                  (
                                                                                  tupleStructItems
                                                                                    pattern
                                                                                      patternNoTopAlt
                                                                                        patternWithoutRange
                                                                                          identifierPattern
                                                                                            identifier
                                                                                              eof
                                                                                  )
                                                                        =>
                                                                        expression
                                                                          expressionWithBlock
                                                                            blockExpression
                                                                              {
                                                                              statements
                                                                                statement
                                                                                  expressionStatement
                                                                                    expressionWithBlock
                                                                                      ifExpression
                                                                                        if
                                                                                        expression
                                                                                          pathExpression
                                                                                            pathInExpression
                                                                                              pathExprSegment
                                                                                                pathIdentSegment
                                                                                                  identifier
                                                                                                    eof
                                                                                        blockExpression
                                                                                          {
                                                                                          statements
                                                                                            statement
                                                                                              expressionStatement
                                                                                                expression
                                                                                                  expression
                                                                                                    expression
                                                                                                      pathExpression
                                                                                                        pathInExpression
                                                                                                          pathExprSegment
                                                                                                            pathIdentSegment
                                                                                                              self
                                                                                                    .
                                                                                                    identifier
                                                                                                      state
                                                                                                  =
                                                                                                  expression
                                                                                                    pathExpression
                                                                                                      pathInExpression
                                                                                                        pathExprSegment
                                                                                                          pathIdentSegment
                                                                                                            identifier
                                                                                                              State
                                                                                                        ::
                                                                                                        pathExprSegment
                                                                                                          pathIdentSegment
                                                                                                            identifier
                                                                                                              Eof
                                                                                                ;
                                                                                            statement
                                                                                              expressionStatement
                                                                                                expression
                                                                                                  return
                                                                                                  expression
                                                                                                    expression
                                                                                                      pathExpression
                                                                                                        pathInExpression
                                                                                                          pathExprSegment
                                                                                                            pathIdentSegment
                                                                                                              identifier
                                                                                                                Poll
                                                                                                          ::
                                                                                                          pathExprSegment
                                                                                                            pathIdentSegment
                                                                                                              identifier
                                                                                                                Ready
                                                                                                    (
                                                                                                    callParams
                                                                                                      expression
                                                                                                        pathExpression
                                                                                                          pathInExpression
                                                                                                            pathExprSegment
                                                                                                              pathIdentSegment
                                                                                                                identifier
                                                                                                                  None
                                                                                                    )
                                                                                                ;
                                                                                          }
                                                                                        else
                                                                                        blockExpression
                                                                                          {
                                                                                          statements
                                                                                            statement
                                                                                              expressionStatement
                                                                                                expression
                                                                                                  expression
                                                                                                    expression
                                                                                                      pathExpression
                                                                                                        pathInExpression
                                                                                                          pathExprSegment
                                                                                                            pathIdentSegment
                                                                                                              self
                                                                                                    .
                                                                                                    identifier
                                                                                                      state
                                                                                                  =
                                                                                                  expression
                                                                                                    pathExpression
                                                                                                      pathInExpression
                                                                                                        pathExprSegment
                                                                                                          pathIdentSegment
                                                                                                            identifier
                                                                                                              State
                                                                                                        ::
                                                                                                        pathExprSegment
                                                                                                          pathIdentSegment
                                                                                                            identifier
                                                                                                              Headers
                                                                                                ;
                                                                                          }
                                                                              }
                                                                      }
                                                            }
                                                      matchArm
                                                        pattern
                                                          patternNoTopAlt
                                                            patternWithoutRange
                                                              pathPattern
                                                                pathInExpression
                                                                  pathExprSegment
                                                                    pathIdentSegment
                                                                      identifier
                                                                        State
                                                                  ::
                                                                  pathExprSegment
                                                                    pathIdentSegment
                                                                      identifier
                                                                        Boundary
                                                      =>
                                                      matchArmExpression
                                                        expression
                                                          expressionWithBlock
                                                            matchExpression
                                                              match
                                                              expression
                                                                expression
                                                                  expression
                                                                    pathExpression
                                                                      pathInExpression
                                                                        pathExprSegment
                                                                          pathIdentSegment
                                                                            identifier
                                                                              Inner
                                                                        ::
                                                                        pathExprSegment
                                                                          pathIdentSegment
                                                                            identifier
                                                                              read_boundary
                                                                  (
                                                                  callParams
                                                                    expression
                                                                      &
                                                                      mut
                                                                      expression
                                                                        pathExpression
                                                                          pathInExpression
                                                                            pathExprSegment
                                                                              pathIdentSegment
                                                                                identifier
                                                                                  payload
                                                                    ,
                                                                    expression
                                                                      &
                                                                      expression
                                                                        expression
                                                                          pathExpression
                                                                            pathInExpression
                                                                              pathExprSegment
                                                                                pathIdentSegment
                                                                                  self
                                                                        .
                                                                        identifier
                                                                          boundary
                                                                  )
                                                                ?
                                                              {
                                                              matchArms
                                                                matchArm
                                                                  pattern
                                                                    patternNoTopAlt
                                                                      patternWithoutRange
                                                                        identifierPattern
                                                                          identifier
                                                                            None
                                                                =>
                                                                matchArmExpression
                                                                  expression
                                                                    return
                                                                    expression
                                                                      pathExpression
                                                                        pathInExpression
                                                                          pathExprSegment
                                                                            pathIdentSegment
                                                                              identifier
                                                                                Poll
                                                                          ::
                                                                          pathExprSegment
                                                                            pathIdentSegment
                                                                              identifier
                                                                                Pending
                                                                  ,
                                                                matchArm
                                                                  pattern
                                                                    patternNoTopAlt
                                                                      patternWithoutRange
                                                                        tupleStructPattern
                                                                          pathInExpression
                                                                            pathExprSegment
                                                                              pathIdentSegment
                                                                                identifier
                                                                                  Some
                                                                          (
                                                                          tupleStructItems
                                                                            pattern
                                                                              patternNoTopAlt
                                                                                patternWithoutRange
                                                                                  identifierPattern
                                                                                    identifier
                                                                                      eof
                                                                          )
                                                                =>
                                                                expression
                                                                  expressionWithBlock
                                                                    blockExpression
                                                                      {
                                                                      statements
                                                                        statement
                                                                          expressionStatement
                                                                            expressionWithBlock
                                                                              ifExpression
                                                                                if
                                                                                expression
                                                                                  pathExpression
                                                                                    pathInExpression
                                                                                      pathExprSegment
                                                                                        pathIdentSegment
                                                                                          identifier
                                                                                            eof
                                                                                blockExpression
                                                                                  {
                                                                                  statements
                                                                                    statement
                                                                                      expressionStatement
                                                                                        expression
                                                                                          expression
                                                                                            expression
                                                                                              pathExpression
                                                                                                pathInExpression
                                                                                                  pathExprSegment
                                                                                                    pathIdentSegment
                                                                                                      self
                                                                                            .
                                                                                            identifier
                                                                                              state
                                                                                          =
                                                                                          expression
                                                                                            pathExpression
                                                                                              pathInExpression
                                                                                                pathExprSegment
                                                                                                  pathIdentSegment
                                                                                                    identifier
                                                                                                      State
                                                                                                ::
                                                                                                pathExprSegment
                                                                                                  pathIdentSegment
                                                                                                    identifier
                                                                                                      Eof
                                                                                        ;
                                                                                    statement
                                                                                      expressionStatement
                                                                                        expression
                                                                                          return
                                                                                          expression
                                                                                            expression
                                                                                              pathExpression
                                                                                                pathInExpression
                                                                                                  pathExprSegment
                                                                                                    pathIdentSegment
                                                                                                      identifier
                                                                                                        Poll
                                                                                                  ::
                                                                                                  pathExprSegment
                                                                                                    pathIdentSegment
                                                                                                      identifier
                                                                                                        Ready
                                                                                            (
                                                                                            callParams
                                                                                              expression
                                                                                                pathExpression
                                                                                                  pathInExpression
                                                                                                    pathExprSegment
                                                                                                      pathIdentSegment
                                                                                                        identifier
                                                                                                          None
                                                                                            )
                                                                                        ;
                                                                                  }
                                                                                else
                                                                                blockExpression
                                                                                  {
                                                                                  statements
                                                                                    statement
                                                                                      expressionStatement
                                                                                        expression
                                                                                          expression
                                                                                            expression
                                                                                              pathExpression
                                                                                                pathInExpression
                                                                                                  pathExprSegment
                                                                                                    pathIdentSegment
                                                                                                      self
                                                                                            .
                                                                                            identifier
                                                                                              state
                                                                                          =
                                                                                          expression
                                                                                            pathExpression
                                                                                              pathInExpression
                                                                                                pathExprSegment
                                                                                                  pathIdentSegment
                                                                                                    identifier
                                                                                                      State
                                                                                                ::
                                                                                                pathExprSegment
                                                                                                  pathIdentSegment
                                                                                                    identifier
                                                                                                      Headers
                                                                                        ;
                                                                                  }
                                                                      }
                                                              }
                                                        ,
                                                      matchArm
                                                        pattern
                                                          patternNoTopAlt
                                                            patternWithoutRange
                                                              wildcardPattern
                                                                _
                                                      =>
                                                      expression
                                                        expressionWithBlock
                                                          blockExpression
                                                            {
                                                            }
                                                    }
                                            statement
                                              expressionStatement
                                                expressionWithBlock
                                                  ifExpression
                                                    if
                                                    expression
                                                      expression
                                                        expression
                                                          pathExpression
                                                            pathInExpression
                                                              pathExprSegment
                                                                pathIdentSegment
                                                                  self
                                                        .
                                                        identifier
                                                          state
                                                      comparisonOperator
                                                        ==
                                                      expression
                                                        pathExpression
                                                          pathInExpression
                                                            pathExprSegment
                                                              pathIdentSegment
                                                                identifier
                                                                  State
                                                            ::
                                                            pathExprSegment
                                                              pathIdentSegment
                                                                identifier
                                                                  Headers
                                                    blockExpression
                                                      {
                                                      statements
                                                        statement
                                                          expressionStatement
                                                            expressionWithBlock
                                                              ifLetExpression
                                                                if
                                                                let
                                                                pattern
                                                                  patternNoTopAlt
                                                                    patternWithoutRange
                                                                      tupleStructPattern
                                                                        pathInExpression
                                                                          pathExprSegment
                                                                            pathIdentSegment
                                                                              identifier
                                                                                Some
                                                                        (
                                                                        tupleStructItems
                                                                          pattern
                                                                            patternNoTopAlt
                                                                              patternWithoutRange
                                                                                identifierPattern
                                                                                  identifier
                                                                                    headers
                                                                        )
                                                                =
                                                                expression
                                                                  expression
                                                                    expression
                                                                      pathExpression
                                                                        pathInExpression
                                                                          pathExprSegment
                                                                            pathIdentSegment
                                                                              identifier
                                                                                Inner
                                                                          ::
                                                                          pathExprSegment
                                                                            pathIdentSegment
                                                                              identifier
                                                                                read_field_headers
                                                                    (
                                                                    callParams
                                                                      expression
                                                                        &
                                                                        mut
                                                                        expression
                                                                          pathExpression
                                                                            pathInExpression
                                                                              pathExprSegment
                                                                                pathIdentSegment
                                                                                  identifier
                                                                                    payload
                                                                    )
                                                                  ?
                                                                blockExpression
                                                                  {
                                                                  statements
                                                                    statement
                                                                      expressionStatement
                                                                        expression
                                                                          expression
                                                                            expression
                                                                              pathExpression
                                                                                pathInExpression
                                                                                  pathExprSegment
                                                                                    pathIdentSegment
                                                                                      self
                                                                            .
                                                                            identifier
                                                                              state
                                                                          =
                                                                          expression
                                                                            pathExpression
                                                                              pathInExpression
                                                                                pathExprSegment
                                                                                  pathIdentSegment
                                                                                    identifier
                                                                                      State
                                                                                ::
                                                                                pathExprSegment
                                                                                  pathIdentSegment
                                                                                    identifier
                                                                                      Boundary
                                                                        ;
                                                                    expression
                                                                      pathExpression
                                                                        pathInExpression
                                                                          pathExprSegment
                                                                            pathIdentSegment
                                                                              identifier
                                                                                headers
                                                                  }
                                                                else
                                                                blockExpression
                                                                  {
                                                                  statements
                                                                    statement
                                                                      expressionStatement
                                                                        expression
                                                                          return
                                                                          expression
                                                                            pathExpression
                                                                              pathInExpression
                                                                                pathExprSegment
                                                                                  pathIdentSegment
                                                                                    identifier
                                                                                      Poll
                                                                                ::
                                                                                pathExprSegment
                                                                                  pathIdentSegment
                                                                                    identifier
                                                                                      Pending
                                                                        ;
                                                                  }
                                                      }
                                                    else
                                                    blockExpression
                                                      {
                                                      statements
                                                        expression
                                                          macroInvocation
                                                            simplePath
                                                              simplePathSegment
                                                                identifier
                                                                  unreachable
                                                            !
                                                            delimTokenTree
                                                              (
                                                              )
                                                      }
                                          }
                                        else
                                        blockExpression
                                          {
                                          statements
                                            statement
                                              item
                                                macroItem
                                                  macroInvocationSemi
                                                    simplePath
                                                      simplePathSegment
                                                        identifier
                                                          log
                                                      ::
                                                      simplePathSegment
                                                        identifier
                                                          debug
                                                    !
                                                    (
                                                    tokenTree
                                                      tokenTreeToken
                                                        macroLiteralToken
                                                          literalExpression
                                                            "NotReady: field is in flight"
                                                    )
                                                    ;
                                            statement
                                              expressionStatement
                                                expression
                                                  return
                                                  expression
                                                    pathExpression
                                                      pathInExpression
                                                        pathExprSegment
                                                          pathIdentSegment
                                                            identifier
                                                              Poll
                                                        ::
                                                        pathExprSegment
                                                          pathIdentSegment
                                                            identifier
                                                              Pending
                                                ;
                                          }
                                  ;
                              statement
                                letStatement
                                  let
                                  patternNoTopAlt
                                    patternWithoutRange
                                      identifierPattern
                                        identifier
                                          field_content_disposition
                                  =
                                  expression
                                    expression
                                      expression
                                        expression
                                          pathExpression
                                            pathInExpression
                                              pathExprSegment
                                                pathIdentSegment
                                                  identifier
                                                    field_headers
                                        .
                                        pathExprSegment
                                          pathIdentSegment
                                            identifier
                                              get
                                        (
                                        callParams
                                          expression
                                            &
                                            expression
                                              pathExpression
                                                pathInExpression
                                                  pathExprSegment
                                                    pathIdentSegment
                                                      identifier
                                                        header
                                                  ::
                                                  pathExprSegment
                                                    pathIdentSegment
                                                      identifier
                                                        CONTENT_DISPOSITION
                                        )
                                      .
                                      pathExprSegment
                                        pathIdentSegment
                                          identifier
                                            and_then
                                      (
                                      callParams
                                        expression
                                          closureExpression
                                            |
                                            closureParameters
                                              closureParam
                                                pattern
                                                  patternNoTopAlt
                                                    patternWithoutRange
                                                      identifierPattern
                                                        identifier
                                                          cd
                                            |
                                            expression
                                              expression
                                                expression
                                                  pathExpression
                                                    pathInExpression
                                                      pathExprSegment
                                                        pathIdentSegment
                                                          identifier
                                                            ContentDisposition
                                                      ::
                                                      pathExprSegment
                                                        pathIdentSegment
                                                          identifier
                                                            from_raw
                                                (
                                                callParams
                                                  expression
                                                    pathExpression
                                                      pathInExpression
                                                        pathExprSegment
                                                          pathIdentSegment
                                                            identifier
                                                              cd
                                                )
                                              .
                                              pathExprSegment
                                                pathIdentSegment
                                                  identifier
                                                    ok
                                              (
                                              )
                                      )
                                    .
                                    pathExprSegment
                                      pathIdentSegment
                                        identifier
                                          filter
                                    (
                                    callParams
                                      expression
                                        closureExpression
                                          |
                                          closureParameters
                                            closureParam
                                              pattern
                                                patternNoTopAlt
                                                  patternWithoutRange
                                                    identifierPattern
                                                      identifier
                                                        content_disposition
                                          |
                                          expression
                                            expressionWithBlock
                                              blockExpression
                                                {
                                                statements
                                                  expression
                                                    macroInvocation
                                                      simplePath
                                                        simplePathSegment
                                                          identifier
                                                            matches
                                                      !
                                                      delimTokenTree
                                                        (
                                                        tokenTree
                                                          tokenTreeToken
                                                            macroIdentifierLikeToken
                                                              identifier
                                                                content_disposition
                                                          tokenTreeToken
                                                            macroPunctuationToken
                                                              .
                                                          tokenTreeToken
                                                            macroIdentifierLikeToken
                                                              identifier
                                                                disposition
                                                          tokenTreeToken
                                                            macroPunctuationToken
                                                              ,
                                                          tokenTreeToken
                                                            macroIdentifierLikeToken
                                                              identifier
                                                                header
                                                          tokenTreeToken
                                                            macroPunctuationToken
                                                              ::
                                                          tokenTreeToken
                                                            macroIdentifierLikeToken
                                                              identifier
                                                                DispositionType
                                                          tokenTreeToken
                                                            macroPunctuationToken
                                                              ::
                                                          tokenTreeToken
                                                            macroIdentifierLikeToken
                                                              identifier
                                                                FormData
                                                          tokenTreeToken
                                                            macroPunctuationToken
                                                              ,
                                                        )
                                                }
                                    )
                                  ;
                              statement
                                letStatement
                                  let
                                  patternNoTopAlt
                                    patternWithoutRange
                                      identifierPattern
                                        identifier
                                          form_field_name
                                  =
                                  expression
                                    expressionWithBlock
                                      ifExpression
                                        if
                                        expression
                                          expression
                                            expression
                                              expression
                                                pathExpression
                                                  pathInExpression
                                                    pathExprSegment
                                                      pathIdentSegment
                                                        self
                                              .
                                              identifier
                                                content_type
                                            .
                                            pathExprSegment
                                              pathIdentSegment
                                                identifier
                                                  subtype
                                            (
                                            )
                                          comparisonOperator
                                            ==
                                          expression
                                            pathExpression
                                              pathInExpression
                                                pathExprSegment
                                                  pathIdentSegment
                                                    identifier
                                                      mime
                                                ::
                                                pathExprSegment
                                                  pathIdentSegment
                                                    identifier
                                                      FORM_DATA
                                        blockExpression
                                          {
                                          statements
                                            statement
                                              letStatement
                                                let
                                                patternNoTopAlt
                                                  patternWithoutRange
                                                    tupleStructPattern
                                                      pathInExpression
                                                        pathExprSegment
                                                          pathIdentSegment
                                                            identifier
                                                              Some
                                                      (
                                                      tupleStructItems
                                                        pattern
                                                          patternNoTopAlt
                                                            patternWithoutRange
                                                              identifierPattern
                                                                identifier
                                                                  cd
                                                      )
                                                =
                                                expression
                                                  &
                                                  expression
                                                    pathExpression
                                                      pathInExpression
                                                        pathExprSegment
                                                          pathIdentSegment
                                                            identifier
                                                              field_content_disposition
                                                else
                                                blockExpression
                                                  {
                                                  statements
                                                    statement
                                                      expressionStatement
                                                        expression
                                                          return
                                                          expression
                                                            expression
                                                              pathExpression
                                                                pathInExpression
                                                                  pathExprSegment
                                                                    pathIdentSegment
                                                                      identifier
                                                                        Poll
                                                                  ::
                                                                  pathExprSegment
                                                                    pathIdentSegment
                                                                      identifier
                                                                        Ready
                                                            (
                                                            callParams
                                                              expression
                                                                expression
                                                                  pathExpression
                                                                    pathInExpression
                                                                      pathExprSegment
                                                                        pathIdentSegment
                                                                          identifier
                                                                            Some
                                                                (
                                                                callParams
                                                                  expression
                                                                    expression
                                                                      pathExpression
                                                                        pathInExpression
                                                                          pathExprSegment
                                                                            pathIdentSegment
                                                                              identifier
                                                                                Err
                                                                    (
                                                                    callParams
                                                                      expression
                                                                        pathExpression
                                                                          pathInExpression
                                                                            pathExprSegment
                                                                              pathIdentSegment
                                                                                identifier
                                                                                  Error
                                                                            ::
                                                                            pathExprSegment
                                                                              pathIdentSegment
                                                                                identifier
                                                                                  ContentDispositionMissing
                                                                    )
                                                                )
                                                            )
                                                        ;
                                                  }
                                                ;
                                            statement
                                              letStatement
                                                let
                                                patternNoTopAlt
                                                  patternWithoutRange
                                                    tupleStructPattern
                                                      pathInExpression
                                                        pathExprSegment
                                                          pathIdentSegment
                                                            identifier
                                                              Some
                                                      (
                                                      tupleStructItems
                                                        pattern
                                                          patternNoTopAlt
                                                            patternWithoutRange
                                                              identifierPattern
                                                                identifier
                                                                  field_name
                                                      )
                                                =
                                                expression
                                                  expression
                                                    pathExpression
                                                      pathInExpression
                                                        pathExprSegment
                                                          pathIdentSegment
                                                            identifier
                                                              cd
                                                  .
                                                  pathExprSegment
                                                    pathIdentSegment
                                                      identifier
                                                        get_name
                                                  (
                                                  )
                                                else
                                                blockExpression
                                                  {
                                                  statements
                                                    statement
                                                      expressionStatement
                                                        expression
                                                          return
                                                          expression
                                                            expression
                                                              pathExpression
                                                                pathInExpression
                                                                  pathExprSegment
                                                                    pathIdentSegment
                                                                      identifier
                                                                        Poll
                                                                  ::
                                                                  pathExprSegment
                                                                    pathIdentSegment
                                                                      identifier
                                                                        Ready
                                                            (
                                                            callParams
                                                              expression
                                                                expression
                                                                  pathExpression
                                                                    pathInExpression
                                                                      pathExprSegment
                                                                        pathIdentSegment
                                                                          identifier
                                                                            Some
                                                                (
                                                                callParams
                                                                  expression
                                                                    expression
                                                                      pathExpression
                                                                        pathInExpression
                                                                          pathExprSegment
                                                                            pathIdentSegment
                                                                              identifier
                                                                                Err
                                                                    (
                                                                    callParams
                                                                      expression
                                                                        pathExpression
                                                                          pathInExpression
                                                                            pathExprSegment
                                                                              pathIdentSegment
                                                                                identifier
                                                                                  Error
                                                                            ::
                                                                            pathExprSegment
                                                                              pathIdentSegment
                                                                                identifier
                                                                                  ContentDispositionNameMissing
                                                                    )
                                                                )
                                                            )
                                                        ;
                                                  }
                                                ;
                                            expression
                                              expression
                                                pathExpression
                                                  pathInExpression
                                                    pathExprSegment
                                                      pathIdentSegment
                                                        identifier
                                                          Some
                                              (
                                              callParams
                                                expression
                                                  expression
                                                    pathExpression
                                                      pathInExpression
                                                        pathExprSegment
                                                          pathIdentSegment
                                                            identifier
                                                              field_name
                                                  .
                                                  pathExprSegment
                                                    pathIdentSegment
                                                      identifier
                                                        to_owned
                                                  (
                                                  )
                                              )
                                          }
                                        else
                                        blockExpression
                                          {
                                          statements
                                            expression
                                              pathExpression
                                                pathInExpression
                                                  pathExprSegment
                                                    pathIdentSegment
                                                      identifier
                                                        None
                                          }
                                  ;
                              statement
                                letStatement
                                  let
                                  patternNoTopAlt
                                    patternWithoutRange
                                      identifierPattern
                                        identifier
                                          field_content_type
                                  :
                                  type_
                                    typeNoBounds
                                      traitObjectTypeOneBound
                                        traitBound
                                          typePath
                                            typePathSegment
                                              pathIdentSegment
                                                identifier
                                                  Option
                                              genericArgs
                                                <
                                                genericArgsTypes
                                                  type_
                                                    typeNoBounds
                                                      traitObjectTypeOneBound
                                                        traitBound
                                                          typePath
                                                            typePathSegment
                                                              pathIdentSegment
                                                                identifier
                                                                  Mime
                                                >
                                  =
                                  expression
                                    expression
                                      expression
                                        expression
                                          pathExpression
                                            pathInExpression
                                              pathExprSegment
                                                pathIdentSegment
                                                  identifier
                                                    field_headers
                                        .
                                        pathExprSegment
                                          pathIdentSegment
                                            identifier
                                              get
                                        (
                                        callParams
                                          expression
                                            &
                                            expression
                                              pathExpression
                                                pathInExpression
                                                  pathExprSegment
                                                    pathIdentSegment
                                                      identifier
                                                        header
                                                  ::
                                                  pathExprSegment
                                                    pathIdentSegment
                                                      identifier
                                                        CONTENT_TYPE
                                        )
                                      .
                                      pathExprSegment
                                        pathIdentSegment
                                          identifier
                                            and_then
                                      (
                                      callParams
                                        expression
                                          closureExpression
                                            |
                                            closureParameters
                                              closureParam
                                                pattern
                                                  patternNoTopAlt
                                                    patternWithoutRange
                                                      identifierPattern
                                                        identifier
                                                          ct
                                            |
                                            expression
                                              expression
                                                expression
                                                  pathExpression
                                                    pathInExpression
                                                      pathExprSegment
                                                        pathIdentSegment
                                                          identifier
                                                            ct
                                                .
                                                pathExprSegment
                                                  pathIdentSegment
                                                    identifier
                                                      to_str
                                                (
                                                )
                                              .
                                              pathExprSegment
                                                pathIdentSegment
                                                  identifier
                                                    ok
                                              (
                                              )
                                      )
                                    .
                                    pathExprSegment
                                      pathIdentSegment
                                        identifier
                                          and_then
                                    (
                                    callParams
                                      expression
                                        closureExpression
                                          |
                                          closureParameters
                                            closureParam
                                              pattern
                                                patternNoTopAlt
                                                  patternWithoutRange
                                                    identifierPattern
                                                      identifier
                                                        ct
                                          |
                                          expression
                                            expression
                                              expression
                                                pathExpression
                                                  pathInExpression
                                                    pathExprSegment
                                                      pathIdentSegment
                                                        identifier
                                                          ct
                                              .
                                              pathExprSegment
                                                pathIdentSegment
                                                  identifier
                                                    parse
                                              (
                                              )
                                            .
                                            pathExprSegment
                                              pathIdentSegment
                                                identifier
                                                  ok
                                            (
                                            )
                                    )
                                  ;
                              statement
                                expressionStatement
                                  expression
                                    expression
                                      expression
                                        pathExpression
                                          pathInExpression
                                            pathExprSegment
                                              pathIdentSegment
                                                self
                                      .
                                      identifier
                                        state
                                    =
                                    expression
                                      pathExpression
                                        pathInExpression
                                          pathExprSegment
                                            pathIdentSegment
                                              identifier
                                                State
                                          ::
                                          pathExprSegment
                                            pathIdentSegment
                                              identifier
                                                Boundary
                                  ;
                              statement
                                expressionStatement
                                  expressionWithBlock
                                    ifLetExpression
                                      if
                                      let
                                      pattern
                                        patternNoTopAlt
                                          patternWithoutRange
                                            tupleStructPattern
                                              pathInExpression
                                                pathExprSegment
                                                  pathIdentSegment
                                                    identifier
                                                      Some
                                              (
                                              tupleStructItems
                                                pattern
                                                  patternNoTopAlt
                                                    patternWithoutRange
                                                      identifierPattern
                                                        identifier
                                                          mime
                                              )
                                      =
                                      expression
                                        &
                                        expression
                                          pathExpression
                                            pathInExpression
                                              pathExprSegment
                                                pathIdentSegment
                                                  identifier
                                                    field_content_type
                                      blockExpression
                                        {
                                        statements
                                          statement
                                            expressionStatement
                                              expressionWithBlock
                                                ifExpression
                                                  if
                                                  expression
                                                    expression
                                                      expression
                                                        pathExpression
                                                          pathInExpression
                                                            pathExprSegment
                                                              pathIdentSegment
                                                                identifier
                                                                  mime
                                                      .
                                                      pathExprSegment
                                                        pathIdentSegment
                                                          identifier
                                                            type_
                                                      (
                                                      )
                                                    comparisonOperator
                                                      ==
                                                    expression
                                                      pathExpression
                                                        pathInExpression
                                                          pathExprSegment
                                                            pathIdentSegment
                                                              identifier
                                                                mime
                                                          ::
                                                          pathExprSegment
                                                            pathIdentSegment
                                                              identifier
                                                                MULTIPART
                                                  blockExpression
                                                    {
                                                    statements
                                                      statement
                                                        expressionStatement
                                                          expression
                                                            return
                                                            expression
                                                              expression
                                                                pathExpression
                                                                  pathInExpression
                                                                    pathExprSegment
                                                                      pathIdentSegment
                                                                        identifier
                                                                          Poll
                                                                    ::
                                                                    pathExprSegment
                                                                      pathIdentSegment
                                                                        identifier
                                                                          Ready
                                                              (
                                                              callParams
                                                                expression
                                                                  expression
                                                                    pathExpression
                                                                      pathInExpression
                                                                        pathExprSegment
                                                                          pathIdentSegment
                                                                            identifier
                                                                              Some
                                                                  (
                                                                  callParams
                                                                    expression
                                                                      expression
                                                                        pathExpression
                                                                          pathInExpression
                                                                            pathExprSegment
                                                                              pathIdentSegment
                                                                                identifier
                                                                                  Err
                                                                      (
                                                                      callParams
                                                                        expression
                                                                          pathExpression
                                                                            pathInExpression
                                                                              pathExprSegment
                                                                                pathIdentSegment
                                                                                  identifier
                                                                                    Error
                                                                              ::
                                                                              pathExprSegment
                                                                                pathIdentSegment
                                                                                  identifier
                                                                                    Nested
                                                                      )
                                                                  )
                                                              )
                                                          ;
                                                    }
                                        }
                              statement
                                letStatement
                                  let
                                  patternNoTopAlt
                                    patternWithoutRange
                                      identifierPattern
                                        identifier
                                          field_inner
                                  =
                                  expression
                                    expression
                                      expression
                                        pathExpression
                                          pathInExpression
                                            pathExprSegment
                                              pathIdentSegment
                                                identifier
                                                  InnerField
                                            ::
                                            pathExprSegment
                                              pathIdentSegment
                                                identifier
                                                  new_in_rc
                                      (
                                      callParams
                                        expression
                                          expression
                                            expression
                                              pathExpression
                                                pathInExpression
                                                  pathExprSegment
                                                    pathIdentSegment
                                                      self
                                            .
                                            identifier
                                              payload
                                          .
                                          pathExprSegment
                                            pathIdentSegment
                                              identifier
                                                clone
                                          (
                                          )
                                        ,
                                        expression
                                          expression
                                            expression
                                              pathExpression
                                                pathInExpression
                                                  pathExprSegment
                                                    pathIdentSegment
                                                      self
                                            .
                                            identifier
                                              boundary
                                          .
                                          pathExprSegment
                                            pathIdentSegment
                                              identifier
                                                clone
                                          (
                                          )
                                        ,
                                        expression
                                          &
                                          expression
                                            pathExpression
                                              pathInExpression
                                                pathExprSegment
                                                  pathIdentSegment
                                                    identifier
                                                      field_headers
                                      )
                                    ?
                                  ;
                              statement
                                expressionStatement
                                  expression
                                    expression
                                      expression
                                        pathExpression
                                          pathInExpression
                                            pathExprSegment
                                              pathIdentSegment
                                                self
                                      .
                                      identifier
                                        item
                                    =
                                    expression
                                      expression
                                        pathExpression
                                          pathInExpression
                                            pathExprSegment
                                              pathIdentSegment
                                                identifier
                                                  Item
                                            ::
                                            pathExprSegment
                                              pathIdentSegment
                                                identifier
                                                  Field
                                      (
                                      callParams
                                        expression
                                          expression
                                            pathExpression
                                              pathInExpression
                                                pathExprSegment
                                                  pathIdentSegment
                                                    identifier
                                                      Rc
                                                ::
                                                pathExprSegment
                                                  pathIdentSegment
                                                    identifier
                                                      clone
                                          (
                                          callParams
                                            expression
                                              &
                                              expression
                                                pathExpression
                                                  pathInExpression
                                                    pathExprSegment
                                                      pathIdentSegment
                                                        identifier
                                                          field_inner
                                          )
                                      )
                                  ;
                              expression
                                expression
                                  pathExpression
                                    pathInExpression
                                      pathExprSegment
                                        pathIdentSegment
                                          identifier
                                            Poll
                                      ::
                                      pathExprSegment
                                        pathIdentSegment
                                          identifier
                                            Ready
                                (
                                callParams
                                  expression
                                    expression
                                      pathExpression
                                        pathInExpression
                                          pathExprSegment
                                            pathIdentSegment
                                              identifier
                                                Some
                                    (
                                    callParams
                                      expression
                                        expression
                                          pathExpression
                                            pathInExpression
                                              pathExprSegment
                                                pathIdentSegment
                                                  identifier
                                                    Ok
                                        (
                                        callParams
                                          expression
                                            expression
                                              pathExpression
                                                pathInExpression
                                                  pathExprSegment
                                                    pathIdentSegment
                                                      identifier
                                                        Field
                                                  ::
                                                  pathExprSegment
                                                    pathIdentSegment
                                                      identifier
                                                        new
                                            (
                                            callParams
                                              expression
                                                pathExpression
                                                  pathInExpression
                                                    pathExprSegment
                                                      pathIdentSegment
                                                        identifier
                                                          field_content_type
                                              ,
                                              expression
                                                pathExpression
                                                  pathInExpression
                                                    pathExprSegment
                                                      pathIdentSegment
                                                        identifier
                                                          field_content_disposition
                                              ,
                                              expression
                                                pathExpression
                                                  pathInExpression
                                                    pathExprSegment
                                                      pathIdentSegment
                                                        identifier
                                                          form_field_name
                                              ,
                                              expression
                                                pathExpression
                                                  pathInExpression
                                                    pathExprSegment
                                                      pathIdentSegment
                                                        identifier
                                                          field_headers
                                              ,
                                              expression
                                                expression
                                                  pathExpression
                                                    pathInExpression
                                                      pathExprSegment
                                                        pathIdentSegment
                                                          identifier
                                                            safety
                                                .
                                                pathExprSegment
                                                  pathIdentSegment
                                                    identifier
                                                      clone
                                                (
                                                callParams
                                                  expression
                                                    pathExpression
                                                      pathInExpression
                                                        pathExprSegment
                                                          pathIdentSegment
                                                            identifier
                                                              cx
                                                )
                                              ,
                                              expression
                                                pathExpression
                                                  pathInExpression
                                                    pathExprSegment
                                                      pathIdentSegment
                                                        identifier
                                                          field_inner
                                              ,
                                            )
                                        )
                                    )
                                )
                            }
                }
          }
  item
    visItem
      implementation
        traitImpl
          impl
          typePath
            typePathSegment
              pathIdentSegment
                identifier
                  Drop
          for
          type_
            typeNoBounds
              traitObjectTypeOneBound
                traitBound
                  typePath
                    typePathSegment
                      pathIdentSegment
                        identifier
                          Inner
          {
          associatedItem
            function_
              functionQualifiers
              fn
              identifier
                drop
              (
              functionParameters
                selfParam
                  shorthandSelf
                    &
                    mut
                    self
              )
              blockExpression
                {
                statements
                  statement
                    expressionStatement
                      expression
                        expression
                          expression
                            pathExpression
                              pathInExpression
                                pathExprSegment
                                  pathIdentSegment
                                    self
                          .
                          identifier
                            item
                        =
                        expression
                          pathExpression
                            pathInExpression
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    Item
                              ::
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    None
                      ;
                }
          }
  item
    outerAttribute
      #
      [
      attr
        simplePath
          simplePathSegment
            identifier
              cfg
        attrInput
          delimTokenTree
            (
            tokenTree
              tokenTreeToken
                macroIdentifierLikeToken
                  identifier
                    test
            )
      ]
    visItem
      module
        mod
        identifier
          tests
        {
        item
          visItem
            useDeclaration
              use
              useTree
                simplePath
                  simplePathSegment
                    identifier
                      std
                  ::
                  simplePathSegment
                    identifier
                      time
                  ::
                  simplePathSegment
                    identifier
                      Duration
              ;
        item
          visItem
            useDeclaration
              use
              useTree
                simplePath
                  simplePathSegment
                    identifier
                      actix_http
                  ::
                  simplePathSegment
                    identifier
                      h1
              ;
        item
          visItem
            useDeclaration
              use
              useTree
                simplePath
                  simplePathSegment
                    identifier
                      actix_web
                ::
                {
                useTree
                  simplePath
                    simplePathSegment
                      identifier
                        http
                    ::
                    simplePathSegment
                      identifier
                        header
                  ::
                  {
                  useTree
                    simplePath
                      simplePathSegment
                        identifier
                          DispositionParam
                  ,
                  useTree
                    simplePath
                      simplePathSegment
                        identifier
                          DispositionType
                  }
                ,
                useTree
                  simplePath
                    simplePathSegment
                      identifier
                        rt
                ,
                useTree
                  simplePath
                    simplePathSegment
                      identifier
                        test
                    ::
                    simplePathSegment
                      identifier
                        TestRequest
                ,
                useTree
                  simplePath
                    simplePathSegment
                      identifier
                        web
                  ::
                  {
                  useTree
                    simplePath
                      simplePathSegment
                        identifier
                          BufMut
                    as
                    _
                  ,
                  useTree
                    simplePath
                      simplePathSegment
                        identifier
                          BytesMut
                  }
                ,
                useTree
                  simplePath
                    simplePathSegment
                      identifier
                        FromRequest
                ,
                }
              ;
        item
          visItem
            useDeclaration
              use
              useTree
                simplePath
                  simplePathSegment
                    identifier
                      assert_matches
                  ::
                  simplePathSegment
                    identifier
                      assert_matches
              ;
        item
          visItem
            useDeclaration
              use
              useTree
                simplePath
                  simplePathSegment
                    identifier
                      futures_test
                  ::
                  simplePathSegment
                    identifier
                      stream
                  ::
                  simplePathSegment
                    identifier
                      StreamTestExt
                as
                _
              ;
        item
          visItem
            useDeclaration
              use
              useTree
                simplePath
                  simplePathSegment
                    identifier
                      futures_util
                ::
                {
                useTree
                  simplePath
                    simplePathSegment
                      identifier
                        stream
                ,
                useTree
                  simplePath
                    simplePathSegment
                      identifier
                        StreamExt
                  as
                  _
                }
              ;
        item
          visItem
            useDeclaration
              use
              useTree
                simplePath
                  simplePathSegment
                    identifier
                      tokio
                  ::
                  simplePathSegment
                    identifier
                      sync
                  ::
                  simplePathSegment
                    identifier
                      mpsc
              ;
        item
          visItem
            useDeclaration
              use
              useTree
                simplePath
                  simplePathSegment
                    identifier
                      tokio_stream
                  ::
                  simplePathSegment
                    identifier
                      wrappers
                  ::
                  simplePathSegment
                    identifier
                      UnboundedReceiverStream
              ;
        item
          visItem
            useDeclaration
              use
              useTree
                simplePath
                  simplePathSegment
                    super
                ::
                *
              ;
        item
          visItem
            constantItem
              const
              identifier
                BOUNDARY
              :
              type_
                typeNoBounds
                  referenceType
                    &
                    typeNoBounds
                      traitObjectTypeOneBound
                        traitBound
                          typePath
                            typePathSegment
                              pathIdentSegment
                                identifier
                                  str
              =
              expression
                literalExpression
                  "abbc761f78ff4d7cb7573b5a23f96ef0"
              ;
        item
          outerAttribute
            #
            [
            attr
              simplePath
                simplePathSegment
                  identifier
                    actix_rt
                ::
                simplePathSegment
                  identifier
                    test
            ]
          visItem
            function_
              functionQualifiers
                async
              fn
              identifier
                test_boundary
              (
              )
              blockExpression
                {
                statements
                  statement
                    letStatement
                      let
                      patternNoTopAlt
                        patternWithoutRange
                          identifierPattern
                            identifier
                              headers
                      =
                      expression
                        expression
                          pathExpression
                            pathInExpression
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    HeaderMap
                              ::
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    new
                        (
                        )
                      ;
                  statement
                    expressionStatement
                      expressionWithBlock
                        matchExpression
                          match
                          expression
                            expression
                              pathExpression
                                pathInExpression
                                  pathExprSegment
                                    pathIdentSegment
                                      identifier
                                        Multipart
                                  ::
                                  pathExprSegment
                                    pathIdentSegment
                                      identifier
                                        find_ct_and_boundary
                            (
                            callParams
                              expression
                                &
                                expression
                                  pathExpression
                                    pathInExpression
                                      pathExprSegment
                                        pathIdentSegment
                                          identifier
                                            headers
                            )
                          {
                          matchArms
                            matchArm
                              pattern
                                patternNoTopAlt
                                  patternWithoutRange
                                    tupleStructPattern
                                      pathInExpression
                                        pathExprSegment
                                          pathIdentSegment
                                            identifier
                                              Err
                                      (
                                      tupleStructItems
                                        pattern
                                          patternNoTopAlt
                                            patternWithoutRange
                                              pathPattern
                                                pathInExpression
                                                  pathExprSegment
                                                    pathIdentSegment
                                                      identifier
                                                        Error
                                                  ::
                                                  pathExprSegment
                                                    pathIdentSegment
                                                      identifier
                                                        ContentTypeMissing
                                      )
                            =>
                            matchArmExpression
                              expressionWithBlock
                                blockExpression
                                  {
                                  }
                            matchArm
                              pattern
                                patternNoTopAlt
                                  patternWithoutRange
                                    wildcardPattern
                                      _
                            =>
                            expression
                              macroInvocation
                                simplePath
                                  simplePathSegment
                                    identifier
                                      unreachable
                                !
                                delimTokenTree
                                  (
                                  tokenTree
                                    tokenTreeToken
                                      macroLiteralToken
                                        literalExpression
                                          "should not happen"
                                  )
                            ,
                          }
                  statement
                    letStatement
                      let
                      patternNoTopAlt
                        patternWithoutRange
                          identifierPattern
                            mut
                            identifier
                              headers
                      =
                      expression
                        expression
                          pathExpression
                            pathInExpression
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    HeaderMap
                              ::
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    new
                        (
                        )
                      ;
                  statement
                    expressionStatement
                      expression
                        expression
                          pathExpression
                            pathInExpression
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    headers
                        .
                        pathExprSegment
                          pathIdentSegment
                            identifier
                              insert
                        (
                        callParams
                          expression
                            pathExpression
                              pathInExpression
                                pathExprSegment
                                  pathIdentSegment
                                    identifier
                                      header
                                ::
                                pathExprSegment
                                  pathIdentSegment
                                    identifier
                                      CONTENT_TYPE
                          ,
                          expression
                            expression
                              pathExpression
                                pathInExpression
                                  pathExprSegment
                                    pathIdentSegment
                                      identifier
                                        header
                                  ::
                                  pathExprSegment
                                    pathIdentSegment
                                      identifier
                                        HeaderValue
                                  ::
                                  pathExprSegment
                                    pathIdentSegment
                                      identifier
                                        from_static
                            (
                            callParams
                              expression
                                literalExpression
                                  "test"
                            )
                          ,
                        )
                      ;
                  statement
                    expressionStatement
                      expressionWithBlock
                        matchExpression
                          match
                          expression
                            expression
                              pathExpression
                                pathInExpression
                                  pathExprSegment
                                    pathIdentSegment
                                      identifier
                                        Multipart
                                  ::
                                  pathExprSegment
                                    pathIdentSegment
                                      identifier
                                        find_ct_and_boundary
                            (
                            callParams
                              expression
                                &
                                expression
                                  pathExpression
                                    pathInExpression
                                      pathExprSegment
                                        pathIdentSegment
                                          identifier
                                            headers
                            )
                          {
                          matchArms
                            matchArm
                              pattern
                                patternNoTopAlt
                                  patternWithoutRange
                                    tupleStructPattern
                                      pathInExpression
                                        pathExprSegment
                                          pathIdentSegment
                                            identifier
                                              Err
                                      (
                                      tupleStructItems
                                        pattern
                                          patternNoTopAlt
                                            patternWithoutRange
                                              pathPattern
                                                pathInExpression
                                                  pathExprSegment
                                                    pathIdentSegment
                                                      identifier
                                                        Error
                                                  ::
                                                  pathExprSegment
                                                    pathIdentSegment
                                                      identifier
                                                        ContentTypeParse
                                      )
                            =>
                            matchArmExpression
                              expressionWithBlock
                                blockExpression
                                  {
                                  }
                            matchArm
                              pattern
                                patternNoTopAlt
                                  patternWithoutRange
                                    wildcardPattern
                                      _
                            =>
                            expression
                              macroInvocation
                                simplePath
                                  simplePathSegment
                                    identifier
                                      unreachable
                                !
                                delimTokenTree
                                  (
                                  tokenTree
                                    tokenTreeToken
                                      macroLiteralToken
                                        literalExpression
                                          "should not happen"
                                  )
                            ,
                          }
                  statement
                    letStatement
                      let
                      patternNoTopAlt
                        patternWithoutRange
                          identifierPattern
                            mut
                            identifier
                              headers
                      =
                      expression
                        expression
                          pathExpression
                            pathInExpression
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    HeaderMap
                              ::
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    new
                        (
                        )
                      ;
                  statement
                    expressionStatement
                      expression
                        expression
                          pathExpression
                            pathInExpression
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    headers
                        .
                        pathExprSegment
                          pathIdentSegment
                            identifier
                              insert
                        (
                        callParams
                          expression
                            pathExpression
                              pathInExpression
                                pathExprSegment
                                  pathIdentSegment
                                    identifier
                                      header
                                ::
                                pathExprSegment
                                  pathIdentSegment
                                    identifier
                                      CONTENT_TYPE
                          ,
                          expression
                            expression
                              pathExpression
                                pathInExpression
                                  pathExprSegment
                                    pathIdentSegment
                                      identifier
                                        header
                                  ::
                                  pathExprSegment
                                    pathIdentSegment
                                      identifier
                                        HeaderValue
                                  ::
                                  pathExprSegment
                                    pathIdentSegment
                                      identifier
                                        from_static
                            (
                            callParams
                              expression
                                literalExpression
                                  "multipart/mixed"
                            )
                          ,
                        )
                      ;
                  statement
                    expressionStatement
                      expressionWithBlock
                        matchExpression
                          match
                          expression
                            expression
                              pathExpression
                                pathInExpression
                                  pathExprSegment
                                    pathIdentSegment
                                      identifier
                                        Multipart
                                  ::
                                  pathExprSegment
                                    pathIdentSegment
                                      identifier
                                        find_ct_and_boundary
                            (
                            callParams
                              expression
                                &
                                expression
                                  pathExpression
                                    pathInExpression
                                      pathExprSegment
                                        pathIdentSegment
                                          identifier
                                            headers
                            )
                          {
                          matchArms
                            matchArm
                              pattern
                                patternNoTopAlt
                                  patternWithoutRange
                                    tupleStructPattern
                                      pathInExpression
                                        pathExprSegment
                                          pathIdentSegment
                                            identifier
                                              Err
                                      (
                                      tupleStructItems
                                        pattern
                                          patternNoTopAlt
                                            patternWithoutRange
                                              pathPattern
                                                pathInExpression
                                                  pathExprSegment
                                                    pathIdentSegment
                                                      identifier
                                                        Error
                                                  ::
                                                  pathExprSegment
                                                    pathIdentSegment
                                                      identifier
                                                        BoundaryMissing
                                      )
                            =>
                            matchArmExpression
                              expressionWithBlock
                                blockExpression
                                  {
                                  }
                            matchArm
                              pattern
                                patternNoTopAlt
                                  patternWithoutRange
                                    wildcardPattern
                                      _
                            =>
                            expression
                              macroInvocation
                                simplePath
                                  simplePathSegment
                                    identifier
                                      unreachable
                                !
                                delimTokenTree
                                  (
                                  tokenTree
                                    tokenTreeToken
                                      macroLiteralToken
                                        literalExpression
                                          "should not happen"
                                  )
                            ,
                          }
                  statement
                    letStatement
                      let
                      patternNoTopAlt
                        patternWithoutRange
                          identifierPattern
                            mut
                            identifier
                              headers
                      =
                      expression
                        expression
                          pathExpression
                            pathInExpression
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    HeaderMap
                              ::
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    new
                        (
                        )
                      ;
                  statement
                    expressionStatement
                      expression
                        expression
                          pathExpression
                            pathInExpression
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    headers
                        .
                        pathExprSegment
                          pathIdentSegment
                            identifier
                              insert
                        (
                        callParams
                          expression
                            pathExpression
                              pathInExpression
                                pathExprSegment
                                  pathIdentSegment
                                    identifier
                                      header
                                ::
                                pathExprSegment
                                  pathIdentSegment
                                    identifier
                                      CONTENT_TYPE
                          ,
                          expression
                            expression
                              pathExpression
                                pathInExpression
                                  pathExprSegment
                                    pathIdentSegment
                                      identifier
                                        header
                                  ::
                                  pathExprSegment
                                    pathIdentSegment
                                      identifier
                                        HeaderValue
                                  ::
                                  pathExprSegment
                                    pathIdentSegment
                                      identifier
                                        from_static
                            (
                            callParams
                              expression
                                literalExpression
                                  "multipart/mixed; boundary=\"5c02368e880e436dab70ed54e1c58209\""
                              ,
                            )
                          ,
                        )
                      ;
                  statement
                    item
                      macroItem
                        macroInvocationSemi
                          simplePath
                            simplePathSegment
                              identifier
                                assert_eq
                          !
                          (
                          tokenTree
                            tokenTreeToken
                              macroIdentifierLikeToken
                                identifier
                                  Multipart
                            tokenTreeToken
                              macroPunctuationToken
                                ::
                            tokenTreeToken
                              macroIdentifierLikeToken
                                identifier
                                  find_ct_and_boundary
                          tokenTree
                            delimTokenTree
                              (
                              tokenTree
                                tokenTreeToken
                                  macroPunctuationToken
                                    &
                                tokenTreeToken
                                  macroIdentifierLikeToken
                                    identifier
                                      headers
                              )
                          tokenTree
                            tokenTreeToken
                              macroPunctuationToken
                                .
                            tokenTreeToken
                              macroIdentifierLikeToken
                                identifier
                                  unwrap
                          tokenTree
                            delimTokenTree
                              (
                              )
                          tokenTree
                            tokenTreeToken
                              macroPunctuationToken
                                .
                            tokenTreeToken
                              macroLiteralToken
                                literalExpression
                                  1
                            tokenTreeToken
                              macroPunctuationToken
                                ,
                            tokenTreeToken
                              macroLiteralToken
                                literalExpression
                                  "5c02368e880e436dab70ed54e1c58209"
                            tokenTreeToken
                              macroPunctuationToken
                                ,
                          )
                          ;
                }
        item
          visItem
            function_
              functionQualifiers
              fn
              identifier
                create_stream
              (
              )
              functionReturnType
                ->
                type_
                  typeNoBounds
                    tupleType
                      (
                      type_
                        typeNoBounds
                          traitObjectTypeOneBound
                            traitBound
                              typePath
                                typePathSegment
                                  pathIdentSegment
                                    identifier
                                      mpsc
                                ::
                                typePathSegment
                                  pathIdentSegment
                                    identifier
                                      UnboundedSender
                                  genericArgs
                                    <
                                    genericArgsTypes
                                      type_
                                        typeNoBounds
                                          traitObjectTypeOneBound
                                            traitBound
                                              typePath
                                                typePathSegment
                                                  pathIdentSegment
                                                    identifier
                                                      Result
                                                  genericArgs
                                                    <
                                                    genericArgsTypes
                                                      type_
                                                        typeNoBounds
                                                          traitObjectTypeOneBound
                                                            traitBound
                                                              typePath
                                                                typePathSegment
                                                                  pathIdentSegment
                                                                    identifier
                                                                      Bytes
                                                      ,
                                                      type_
                                                        typeNoBounds
                                                          traitObjectTypeOneBound
                                                            traitBound
                                                              typePath
                                                                typePathSegment
                                                                  pathIdentSegment
                                                                    identifier
                                                                      PayloadError
                                                    >
                                    >
                      ,
                      type_
                        typeNoBounds
                          implTraitTypeOneBound
                            impl
                            traitBound
                              typePath
                                typePathSegment
                                  pathIdentSegment
                                    identifier
                                      Stream
                                  genericArgs
                                    <
                                    genericArg
                                      genericArgsBinding
                                        identifier
                                          Item
                                        =
                                        type_
                                          typeNoBounds
                                            traitObjectTypeOneBound
                                              traitBound
                                                typePath
                                                  typePathSegment
                                                    pathIdentSegment
                                                      identifier
                                                        Result
                                                    genericArgs
                                                      <
                                                      genericArgsTypes
                                                        type_
                                                          typeNoBounds
                                                            traitObjectTypeOneBound
                                                              traitBound
                                                                typePath
                                                                  typePathSegment
                                                                    pathIdentSegment
                                                                      identifier
                                                                        Bytes
                                                        ,
                                                        type_
                                                          typeNoBounds
                                                            traitObjectTypeOneBound
                                                              traitBound
                                                                typePath
                                                                  typePathSegment
                                                                    pathIdentSegment
                                                                      identifier
                                                                        PayloadError
                                                      >
                                    >
                      ,
                      )
              blockExpression
                {
                statements
                  statement
                    letStatement
                      let
                      patternNoTopAlt
                        patternWithoutRange
                          tuplePattern
                            (
                            tuplePatternItems
                              pattern
                                patternNoTopAlt
                                  patternWithoutRange
                                    identifierPattern
                                      identifier
                                        tx
                              ,
                              pattern
                                patternNoTopAlt
                                  patternWithoutRange
                                    identifierPattern
                                      identifier
                                        rx
                            )
                      =
                      expression
                        expression
                          pathExpression
                            pathInExpression
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    mpsc
                              ::
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    unbounded_channel
                        (
                        )
                      ;
                  expression
                    (
                    tupleElements
                      expression
                        pathExpression
                          pathInExpression
                            pathExprSegment
                              pathIdentSegment
                                identifier
                                  tx
                      ,
                      expression
                        expression
                          expression
                            pathExpression
                              pathInExpression
                                pathExprSegment
                                  pathIdentSegment
                                    identifier
                                      UnboundedReceiverStream
                                ::
                                pathExprSegment
                                  pathIdentSegment
                                    identifier
                                      new
                          (
                          callParams
                            expression
                              pathExpression
                                pathInExpression
                                  pathExprSegment
                                    pathIdentSegment
                                      identifier
                                        rx
                          )
                        .
                        pathExprSegment
                          pathIdentSegment
                            identifier
                              map
                        (
                        callParams
                          expression
                            closureExpression
                              |
                              closureParameters
                                closureParam
                                  pattern
                                    patternNoTopAlt
                                      patternWithoutRange
                                        identifierPattern
                                          identifier
                                            res
                              |
                              expression
                                expression
                                  pathExpression
                                    pathInExpression
                                      pathExprSegment
                                        pathIdentSegment
                                          identifier
                                            res
                                .
                                pathExprSegment
                                  pathIdentSegment
                                    identifier
                                      map_err
                                (
                                callParams
                                  expression
                                    closureExpression
                                      |
                                      closureParameters
                                        closureParam
                                          pattern
                                            patternNoTopAlt
                                              patternWithoutRange
                                                wildcardPattern
                                                  _
                                      |
                                      expression
                                        macroInvocation
                                          simplePath
                                            simplePathSegment
                                              identifier
                                                panic
                                          !
                                          delimTokenTree
                                            (
                                            )
                                )
                        )
                      ,
                    )
                }
        item
          visItem
            function_
              functionQualifiers
              fn
              identifier
                create_simple_request_with_header
              (
              )
              functionReturnType
                ->
                type_
                  typeNoBounds
                    tupleType
                      (
                      type_
                        typeNoBounds
                          traitObjectTypeOneBound
                            traitBound
                              typePath
                                typePathSegment
                                  pathIdentSegment
                                    identifier
                                      Bytes
                      ,
                      type_
                        typeNoBounds
                          traitObjectTypeOneBound
                            traitBound
                              typePath
                                typePathSegment
                                  pathIdentSegment
                                    identifier
                                      HeaderMap
                      )
              blockExpression
                {
                statements
                  statement
                    letStatement
                      let
                      patternNoTopAlt
                        patternWithoutRange
                          tuplePattern
                            (
                            tuplePatternItems
                              pattern
                                patternNoTopAlt
                                  patternWithoutRange
                                    identifierPattern
                                      identifier
                                        body
                              ,
                              pattern
                                patternNoTopAlt
                                  patternWithoutRange
                                    identifierPattern
                                      identifier
                                        headers
                            )
                      =
                      expression
                        expression
                          pathExpression
                            pathInExpression
                              pathExprSegment
                                pathIdentSegment
                                  crate
                              ::
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    test
                              ::
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    create_form_data_payload_and_headers_with_boundary
                        (
                        callParams
                          expression
                            pathExpression
                              pathInExpression
                                pathExprSegment
                                  pathIdentSegment
                                    identifier
                                      BOUNDARY
                          ,
                          expression
                            literalExpression
                              "file"
                          ,
                          expression
                            expression
                              pathExpression
                                pathInExpression
                                  pathExprSegment
                                    pathIdentSegment
                                      identifier
                                        Some
                            (
                            callParams
                              expression
                                expression
                                  literalExpression
                                    "fn.txt"
                                .
                                pathExprSegment
                                  pathIdentSegment
                                    identifier
                                      to_owned
                                (
                                )
                            )
                          ,
                          expression
                            expression
                              pathExpression
                                pathInExpression
                                  pathExprSegment
                                    pathIdentSegment
                                      identifier
                                        Some
                            (
                            callParams
                              expression
                                pathExpression
                                  pathInExpression
                                    pathExprSegment
                                      pathIdentSegment
                                        identifier
                                          mime
                                    ::
                                    pathExprSegment
                                      pathIdentSegment
                                        identifier
                                          TEXT_PLAIN_UTF_8
                            )
                          ,
                          expression
                            expression
                              pathExpression
                                pathInExpression
                                  pathExprSegment
                                    pathIdentSegment
                                      identifier
                                        Bytes
                                  ::
                                  pathExprSegment
                                    pathIdentSegment
                                      identifier
                                        from_static
                            (
                            callParams
                              expression
                                literalExpression
                                  b"data"
                            )
                          ,
                        )
                      ;
                  statement
                    letStatement
                      let
                      patternNoTopAlt
                        patternWithoutRange
                          identifierPattern
                            mut
                            identifier
                              buf
                      =
                      expression
                        expression
                          pathExpression
                            pathInExpression
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    BytesMut
                              ::
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    with_capacity
                        (
                        callParams
                          expression
                            expression
                              expression
                                pathExpression
                                  pathInExpression
                                    pathExprSegment
                                      pathIdentSegment
                                        identifier
                                          body
                              .
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    len
                              (
                              )
                            +
                            expression
                              literalExpression
                                14
                        )
                      ;
                  statement
                    expressionStatement
                      expression
                        expression
                          pathExpression
                            pathInExpression
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    buf
                        .
                        pathExprSegment
                          pathIdentSegment
                            identifier
                              put
                        (
                        callParams
                          expression
                            expression
                              literalExpression
                                "testasdadsad\r\n"
                            .
                            pathExprSegment
                              pathIdentSegment
                                identifier
                                  as_bytes
                            (
                            )
                        )
                      ;
                  statement
                    expressionStatement
                      expression
                        expression
                          pathExpression
                            pathInExpression
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    buf
                        .
                        pathExprSegment
                          pathIdentSegment
                            identifier
                              put
                        (
                        callParams
                          expression
                            pathExpression
                              pathInExpression
                                pathExprSegment
                                  pathIdentSegment
                                    identifier
                                      body
                        )
                      ;
                  expression
                    (
                    tupleElements
                      expression
                        expression
                          pathExpression
                            pathInExpression
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    buf
                        .
                        pathExprSegment
                          pathIdentSegment
                            identifier
                              freeze
                        (
                        )
                      ,
                      expression
                        pathExpression
                          pathInExpression
                            pathExprSegment
                              pathIdentSegment
                                identifier
                                  headers
                    )
                }
        item
          visItem
            function_
              functionQualifiers
              fn
              identifier
                create_double_request_with_header
              (
              )
              functionReturnType
                ->
                type_
                  typeNoBounds
                    tupleType
                      (
                      type_
                        typeNoBounds
                          traitObjectTypeOneBound
                            traitBound
                              typePath
                                typePathSegment
                                  pathIdentSegment
                                    identifier
                                      Bytes
                      ,
                      type_
                        typeNoBounds
                          traitObjectTypeOneBound
                            traitBound
                              typePath
                                typePathSegment
                                  pathIdentSegment
                                    identifier
                                      HeaderMap
                      )
              blockExpression
                {
                statements
                  statement
                    letStatement
                      let
                      patternNoTopAlt
                        patternWithoutRange
                          identifierPattern
                            identifier
                              bytes
                      =
                      expression
                        expression
                          pathExpression
                            pathInExpression
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    Bytes
                              ::
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    from
                        (
                        callParams
                          expression
                            literalExpression
                              "testasdadsad\r\n\
             --abbc761f78ff4d7cb7573b5a23f96ef0\r\n\
             Content-Disposition: form-data; name=\"file\"; filename=\"fn.txt\"\r\n\
             Content-Type: text/plain; charset=utf-8\r\nContent-Length: 4\r\n\r\n\
             test\r\n\
             --abbc761f78ff4d7cb7573b5a23f96ef0\r\n\
             Content-Disposition: form-data; name=\"file\"; filename=\"fn.txt\"\r\n\
             Content-Type: text/plain; charset=utf-8\r\nContent-Length: 4\r\n\r\n\
             data\r\n\
             --abbc761f78ff4d7cb7573b5a23f96ef0--\r\n"
                          ,
                        )
                      ;
                  statement
                    letStatement
                      let
                      patternNoTopAlt
                        patternWithoutRange
                          identifierPattern
                            mut
                            identifier
                              headers
                      =
                      expression
                        expression
                          pathExpression
                            pathInExpression
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    HeaderMap
                              ::
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    new
                        (
                        )
                      ;
                  statement
                    expressionStatement
                      expression
                        expression
                          pathExpression
                            pathInExpression
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    headers
                        .
                        pathExprSegment
                          pathIdentSegment
                            identifier
                              insert
                        (
                        callParams
                          expression
                            pathExpression
                              pathInExpression
                                pathExprSegment
                                  pathIdentSegment
                                    identifier
                                      header
                                ::
                                pathExprSegment
                                  pathIdentSegment
                                    identifier
                                      CONTENT_TYPE
                          ,
                          expression
                            expression
                              pathExpression
                                pathInExpression
                                  pathExprSegment
                                    pathIdentSegment
                                      identifier
                                        header
                                  ::
                                  pathExprSegment
                                    pathIdentSegment
                                      identifier
                                        HeaderValue
                                  ::
                                  pathExprSegment
                                    pathIdentSegment
                                      identifier
                                        from_static
                            (
                            callParams
                              expression
                                literalExpression
                                  "multipart/mixed; boundary=\"abbc761f78ff4d7cb7573b5a23f96ef0\""
                              ,
                            )
                          ,
                        )
                      ;
                  expression
                    (
                    tupleElements
                      expression
                        pathExpression
                          pathInExpression
                            pathExprSegment
                              pathIdentSegment
                                identifier
                                  bytes
                      ,
                      expression
                        pathExpression
                          pathInExpression
                            pathExprSegment
                              pathIdentSegment
                                identifier
                                  headers
                    )
                }
        item
          outerAttribute
            #
            [
            attr
              simplePath
                simplePathSegment
                  identifier
                    actix_rt
                ::
                simplePathSegment
                  identifier
                    test
            ]
          visItem
            function_
              functionQualifiers
                async
              fn
              identifier
                test_multipart_no_end_crlf
              (
              )
              blockExpression
                {
                statements
                  statement
                    letStatement
                      let
                      patternNoTopAlt
                        patternWithoutRange
                          tuplePattern
                            (
                            tuplePatternItems
                              pattern
                                patternNoTopAlt
                                  patternWithoutRange
                                    identifierPattern
                                      identifier
                                        sender
                              ,
                              pattern
                                patternNoTopAlt
                                  patternWithoutRange
                                    identifierPattern
                                      identifier
                                        payload
                            )
                      =
                      expression
                        expression
                          pathExpression
                            pathInExpression
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    create_stream
                        (
                        )
                      ;
                  statement
                    letStatement
                      let
                      patternNoTopAlt
                        patternWithoutRange
                          tuplePattern
                            (
                            tuplePatternItems
                              pattern
                                patternNoTopAlt
                                  patternWithoutRange
                                    identifierPattern
                                      mut
                                      identifier
                                        bytes
                              ,
                              pattern
                                patternNoTopAlt
                                  patternWithoutRange
                                    identifierPattern
                                      identifier
                                        headers
                            )
                      =
                      expression
                        expression
                          pathExpression
                            pathInExpression
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    create_double_request_with_header
                        (
                        )
                      ;
                  statement
                    letStatement
                      let
                      patternNoTopAlt
                        patternWithoutRange
                          identifierPattern
                            identifier
                              bytes_stripped
                      =
                      expression
                        expression
                          pathExpression
                            pathInExpression
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    bytes
                        .
                        pathExprSegment
                          pathIdentSegment
                            identifier
                              split_to
                        (
                        callParams
                          expression
                            expression
                              pathExpression
                                pathInExpression
                                  pathExprSegment
                                    pathIdentSegment
                                      identifier
                                        bytes
                            .
                            pathExprSegment
                              pathIdentSegment
                                identifier
                                  len
                            (
                            )
                        )
                      ;
                  statement
                    expressionStatement
                      expression
                        expression
                          expression
                            pathExpression
                              pathInExpression
                                pathExprSegment
                                  pathIdentSegment
                                    identifier
                                      sender
                          .
                          pathExprSegment
                            pathIdentSegment
                              identifier
                                send
                          (
                          callParams
                            expression
                              expression
                                pathExpression
                                  pathInExpression
                                    pathExprSegment
                                      pathIdentSegment
                                        identifier
                                          Ok
                              (
                              callParams
                                expression
                                  pathExpression
                                    pathInExpression
                                      pathExprSegment
                                        pathIdentSegment
                                          identifier
                                            bytes_stripped
                              )
                          )
                        .
                        pathExprSegment
                          pathIdentSegment
                            identifier
                              unwrap
                        (
                        )
                      ;
                  statement
                    expressionStatement
                      expression
                        expression
                          pathExpression
                            pathInExpression
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    drop
                        (
                        callParams
                          expression
                            pathExpression
                              pathInExpression
                                pathExprSegment
                                  pathIdentSegment
                                    identifier
                                      sender
                        )
                      ;
                  statement
                    letStatement
                      let
                      patternNoTopAlt
                        patternWithoutRange
                          identifierPattern
                            mut
                            identifier
                              multipart
                      =
                      expression
                        expression
                          pathExpression
                            pathInExpression
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    Multipart
                              ::
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    new
                        (
                        callParams
                          expression
                            &
                            expression
                              pathExpression
                                pathInExpression
                                  pathExprSegment
                                    pathIdentSegment
                                      identifier
                                        headers
                          ,
                          expression
                            pathExpression
                              pathInExpression
                                pathExprSegment
                                  pathIdentSegment
                                    identifier
                                      payload
                        )
                      ;
                  statement
                    expressionStatement
                      expressionWithBlock
                        matchExpression
                          match
                          expression
                            expression
                              expression
                                expression
                                  pathExpression
                                    pathInExpression
                                      pathExprSegment
                                        pathIdentSegment
                                          identifier
                                            multipart
                                .
                                pathExprSegment
                                  pathIdentSegment
                                    identifier
                                      next
                                (
                                )
                              .
                              await
                            .
                            pathExprSegment
                              pathIdentSegment
                                identifier
                                  unwrap
                            (
                            )
                          {
                          matchArms
                            matchArm
                              pattern
                                patternNoTopAlt
                                  patternWithoutRange
                                    tupleStructPattern
                                      pathInExpression
                                        pathExprSegment
                                          pathIdentSegment
                                            identifier
                                              Ok
                                      (
                                      tupleStructItems
                                        pattern
                                          patternNoTopAlt
                                            patternWithoutRange
                                              wildcardPattern
                                                _
                                      )
                            =>
                            matchArmExpression
                              expressionWithBlock
                                blockExpression
                                  {
                                  }
                            matchArm
                              pattern
                                patternNoTopAlt
                                  patternWithoutRange
                                    wildcardPattern
                                      _
                            =>
                            expression
                              macroInvocation
                                simplePath
                                  simplePathSegment
                                    identifier
                                      unreachable
                                !
                                delimTokenTree
                                  (
                                  )
                            ,
                          }
                  statement
                    expressionStatement
                      expressionWithBlock
                        matchExpression
                          match
                          expression
                            expression
                              expression
                                expression
                                  pathExpression
                                    pathInExpression
                                      pathExprSegment
                                        pathIdentSegment
                                          identifier
                                            multipart
                                .
                                pathExprSegment
                                  pathIdentSegment
                                    identifier
                                      next
                                (
                                )
                              .
                              await
                            .
                            pathExprSegment
                              pathIdentSegment
                                identifier
                                  unwrap
                            (
                            )
                          {
                          matchArms
                            matchArm
                              pattern
                                patternNoTopAlt
                                  patternWithoutRange
                                    tupleStructPattern
                                      pathInExpression
                                        pathExprSegment
                                          pathIdentSegment
                                            identifier
                                              Ok
                                      (
                                      tupleStructItems
                                        pattern
                                          patternNoTopAlt
                                            patternWithoutRange
                                              wildcardPattern
                                                _
                                      )
                            =>
                            matchArmExpression
                              expressionWithBlock
                                blockExpression
                                  {
                                  }
                            matchArm
                              pattern
                                patternNoTopAlt
                                  patternWithoutRange
                                    wildcardPattern
                                      _
                            =>
                            expression
                              macroInvocation
                                simplePath
                                  simplePathSegment
                                    identifier
                                      unreachable
                                !
                                delimTokenTree
                                  (
                                  )
                            ,
                          }
                  statement
                    expressionStatement
                      expressionWithBlock
                        matchExpression
                          match
                          expression
                            expression
                              expression
                                pathExpression
                                  pathInExpression
                                    pathExprSegment
                                      pathIdentSegment
                                        identifier
                                          multipart
                              .
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    next
                              (
                              )
                            .
                            await
                          {
                          matchArms
                            matchArm
                              pattern
                                patternNoTopAlt
                                  patternWithoutRange
                                    identifierPattern
                                      identifier
                                        None
                            =>
                            matchArmExpression
                              expressionWithBlock
                                blockExpression
                                  {
                                  }
                            matchArm
                              pattern
                                patternNoTopAlt
                                  patternWithoutRange
                                    wildcardPattern
                                      _
                            =>
                            expression
                              macroInvocation
                                simplePath
                                  simplePathSegment
                                    identifier
                                      unreachable
                                !
                                delimTokenTree
                                  (
                                  )
                            ,
                          }
                }
        item
          outerAttribute
            #
            [
            attr
              simplePath
                simplePathSegment
                  identifier
                    actix_rt
                ::
                simplePathSegment
                  identifier
                    test
            ]
          visItem
            function_
              functionQualifiers
                async
              fn
              identifier
                test_multipart
              (
              )
              blockExpression
                {
                statements
                  statement
                    letStatement
                      let
                      patternNoTopAlt
                        patternWithoutRange
                          tuplePattern
                            (
                            tuplePatternItems
                              pattern
                                patternNoTopAlt
                                  patternWithoutRange
                                    identifierPattern
                                      identifier
                                        sender
                              ,
                              pattern
                                patternNoTopAlt
                                  patternWithoutRange
                                    identifierPattern
                                      identifier
                                        payload
                            )
                      =
                      expression
                        expression
                          pathExpression
                            pathInExpression
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    create_stream
                        (
                        )
                      ;
                  statement
                    letStatement
                      let
                      patternNoTopAlt
                        patternWithoutRange
                          tuplePattern
                            (
                            tuplePatternItems
                              pattern
                                patternNoTopAlt
                                  patternWithoutRange
                                    identifierPattern
                                      identifier
                                        bytes
                              ,
                              pattern
                                patternNoTopAlt
                                  patternWithoutRange
                                    identifierPattern
                                      identifier
                                        headers
                            )
                      =
                      expression
                        expression
                          pathExpression
                            pathInExpression
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    create_double_request_with_header
                        (
                        )
                      ;
                  statement
                    expressionStatement
                      expression
                        expression
                          expression
                            pathExpression
                              pathInExpression
                                pathExprSegment
                                  pathIdentSegment
                                    identifier
                                      sender
                          .
                          pathExprSegment
                            pathIdentSegment
                              identifier
                                send
                          (
                          callParams
                            expression
                              expression
                                pathExpression
                                  pathInExpression
                                    pathExprSegment
                                      pathIdentSegment
                                        identifier
                                          Ok
                              (
                              callParams
                                expression
                                  pathExpression
                                    pathInExpression
                                      pathExprSegment
                                        pathIdentSegment
                                          identifier
                                            bytes
                              )
                          )
                        .
                        pathExprSegment
                          pathIdentSegment
                            identifier
                              unwrap
                        (
                        )
                      ;
                  statement
                    letStatement
                      let
                      patternNoTopAlt
                        patternWithoutRange
                          identifierPattern
                            mut
                            identifier
                              multipart
                      =
                      expression
                        expression
                          pathExpression
                            pathInExpression
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    Multipart
                              ::
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    new
                        (
                        callParams
                          expression
                            &
                            expression
                              pathExpression
                                pathInExpression
                                  pathExprSegment
                                    pathIdentSegment
                                      identifier
                                        headers
                          ,
                          expression
                            pathExpression
                              pathInExpression
                                pathExprSegment
                                  pathIdentSegment
                                    identifier
                                      payload
                        )
                      ;
                  statement
                    expressionStatement
                      expressionWithBlock
                        matchExpression
                          match
                          expression
                            expression
                              expression
                                pathExpression
                                  pathInExpression
                                    pathExprSegment
                                      pathIdentSegment
                                        identifier
                                          multipart
                              .
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    next
                              (
                              )
                            .
                            await
                          {
                          matchArms
                            matchArm
                              pattern
                                patternNoTopAlt
                                  patternWithoutRange
                                    tupleStructPattern
                                      pathInExpression
                                        pathExprSegment
                                          pathIdentSegment
                                            identifier
                                              Some
                                      (
                                      tupleStructItems
                                        pattern
                                          patternNoTopAlt
                                            patternWithoutRange
                                              tupleStructPattern
                                                pathInExpression
                                                  pathExprSegment
                                                    pathIdentSegment
                                                      identifier
                                                        Ok
                                                (
                                                tupleStructItems
                                                  pattern
                                                    patternNoTopAlt
                                                      patternWithoutRange
                                                        identifierPattern
                                                          mut
                                                          identifier
                                                            field
                                                )
                                      )
                            =>
                            matchArmExpression
                              expressionWithBlock
                                blockExpression
                                  {
                                  statements
                                    statement
                                      letStatement
                                        let
                                        patternNoTopAlt
                                          patternWithoutRange
                                            identifierPattern
                                              identifier
                                                cd
                                        =
                                        expression
                                          expression
                                            expression
                                              pathExpression
                                                pathInExpression
                                                  pathExprSegment
                                                    pathIdentSegment
                                                      identifier
                                                        field
                                            .
                                            pathExprSegment
                                              pathIdentSegment
                                                identifier
                                                  content_disposition
                                            (
                                            )
                                          .
                                          pathExprSegment
                                            pathIdentSegment
                                              identifier
                                                unwrap
                                          (
                                          )
                                        ;
                                    statement
                                      item
                                        macroItem
                                          macroInvocationSemi
                                            simplePath
                                              simplePathSegment
                                                identifier
                                                  assert_eq
                                            !
                                            (
                                            tokenTree
                                              tokenTreeToken
                                                macroIdentifierLikeToken
                                                  identifier
                                                    cd
                                              tokenTreeToken
                                                macroPunctuationToken
                                                  .
                                              tokenTreeToken
                                                macroIdentifierLikeToken
                                                  identifier
                                                    disposition
                                              tokenTreeToken
                                                macroPunctuationToken
                                                  ,
                                              tokenTreeToken
                                                macroIdentifierLikeToken
                                                  identifier
                                                    DispositionType
                                              tokenTreeToken
                                                macroPunctuationToken
                                                  ::
                                              tokenTreeToken
                                                macroIdentifierLikeToken
                                                  identifier
                                                    FormData
                                            )
                                            ;
                                    statement
                                      item
                                        macroItem
                                          macroInvocationSemi
                                            simplePath
                                              simplePathSegment
                                                identifier
                                                  assert_eq
                                            !
                                            (
                                            tokenTree
                                              tokenTreeToken
                                                macroIdentifierLikeToken
                                                  identifier
                                                    cd
                                              tokenTreeToken
                                                macroPunctuationToken
                                                  .
                                              tokenTreeToken
                                                macroIdentifierLikeToken
                                                  identifier
                                                    parameters
                                            tokenTree
                                              delimTokenTree
                                                [
                                                tokenTree
                                                  tokenTreeToken
                                                    macroLiteralToken
                                                      literalExpression
                                                        0
                                                ]
                                            tokenTree
                                              tokenTreeToken
                                                macroPunctuationToken
                                                  ,
                                              tokenTreeToken
                                                macroIdentifierLikeToken
                                                  identifier
                                                    DispositionParam
                                              tokenTreeToken
                                                macroPunctuationToken
                                                  ::
                                              tokenTreeToken
                                                macroIdentifierLikeToken
                                                  identifier
                                                    Name
                                            tokenTree
                                              delimTokenTree
                                                (
                                                tokenTree
                                                  tokenTreeToken
                                                    macroLiteralToken
                                                      literalExpression
                                                        "file"
                                                  tokenTreeToken
                                                    macroPunctuationToken
                                                      .
                                                  tokenTreeToken
                                                    macroIdentifierLikeToken
                                                      identifier
                                                        into
                                                tokenTree
                                                  delimTokenTree
                                                    (
                                                    )
                                                )
                                            )
                                            ;
                                    statement
                                      item
                                        macroItem
                                          macroInvocationSemi
                                            simplePath
                                              simplePathSegment
                                                identifier
                                                  assert_eq
                                            !
                                            (
                                            tokenTree
                                              tokenTreeToken
                                                macroIdentifierLikeToken
                                                  identifier
                                                    field
                                              tokenTreeToken
                                                macroPunctuationToken
                                                  .
                                              tokenTreeToken
                                                macroIdentifierLikeToken
                                                  identifier
                                                    content_type
                                            tokenTree
                                              delimTokenTree
                                                (
                                                )
                                            tokenTree
                                              tokenTreeToken
                                                macroPunctuationToken
                                                  .
                                              tokenTreeToken
                                                macroIdentifierLikeToken
                                                  identifier
                                                    unwrap
                                            tokenTree
                                              delimTokenTree
                                                (
                                                )
                                            tokenTree
                                              tokenTreeToken
                                                macroPunctuationToken
                                                  .
                                              tokenTreeToken
                                                macroIdentifierLikeToken
                                                  identifier
                                                    type_
                                            tokenTree
                                              delimTokenTree
                                                (
                                                )
                                            tokenTree
                                              tokenTreeToken
                                                macroPunctuationToken
                                                  ,
                                              tokenTreeToken
                                                macroIdentifierLikeToken
                                                  identifier
                                                    mime
                                              tokenTreeToken
                                                macroPunctuationToken
                                                  ::
                                              tokenTreeToken
                                                macroIdentifierLikeToken
                                                  identifier
                                                    TEXT
                                            )
                                            ;
                                    statement
                                      item
                                        macroItem
                                          macroInvocationSemi
                                            simplePath
                                              simplePathSegment
                                                identifier
                                                  assert_eq
                                            !
                                            (
                                            tokenTree
                                              tokenTreeToken
                                                macroIdentifierLikeToken
                                                  identifier
                                                    field
                                              tokenTreeToken
                                                macroPunctuationToken
                                                  .
                                              tokenTreeToken
                                                macroIdentifierLikeToken
                                                  identifier
                                                    content_type
                                            tokenTree
                                              delimTokenTree
                                                (
                                                )
                                            tokenTree
                                              tokenTreeToken
                                                macroPunctuationToken
                                                  .
                                              tokenTreeToken
                                                macroIdentifierLikeToken
                                                  identifier
                                                    unwrap
                                            tokenTree
                                              delimTokenTree
                                                (
                                                )
                                            tokenTree
                                              tokenTreeToken
                                                macroPunctuationToken
                                                  .
                                              tokenTreeToken
                                                macroIdentifierLikeToken
                                                  identifier
                                                    subtype
                                            tokenTree
                                              delimTokenTree
                                                (
                                                )
                                            tokenTree
                                              tokenTreeToken
                                                macroPunctuationToken
                                                  ,
                                              tokenTreeToken
                                                macroIdentifierLikeToken
                                                  identifier
                                                    mime
                                              tokenTreeToken
                                                macroPunctuationToken
                                                  ::
                                              tokenTreeToken
                                                macroIdentifierLikeToken
                                                  identifier
                                                    PLAIN
                                            )
                                            ;
                                    statement
                                      expressionStatement
                                        expressionWithBlock
                                          matchExpression
                                            match
                                            expression
                                              expression
                                                expression
                                                  expression
                                                    pathExpression
                                                      pathInExpression
                                                        pathExprSegment
                                                          pathIdentSegment
                                                            identifier
                                                              field
                                                  .
                                                  pathExprSegment
                                                    pathIdentSegment
                                                      identifier
                                                        next
                                                  (
                                                  )
                                                .
                                                await
                                              .
                                              pathExprSegment
                                                pathIdentSegment
                                                  identifier
                                                    unwrap
                                              (
                                              )
                                            {
                                            matchArms
                                              matchArm
                                                pattern
                                                  patternNoTopAlt
                                                    patternWithoutRange
                                                      tupleStructPattern
                                                        pathInExpression
                                                          pathExprSegment
                                                            pathIdentSegment
                                                              identifier
                                                                Ok
                                                        (
                                                        tupleStructItems
                                                          pattern
                                                            patternNoTopAlt
                                                              patternWithoutRange
                                                                identifierPattern
                                                                  identifier
                                                                    chunk
                                                        )
                                              =>
                                              matchArmExpression
                                                expression
                                                  macroInvocation
                                                    simplePath
                                                      simplePathSegment
                                                        identifier
                                                          assert_eq
                                                    !
                                                    delimTokenTree
                                                      (
                                                      tokenTree
                                                        tokenTreeToken
                                                          macroIdentifierLikeToken
                                                            identifier
                                                              chunk
                                                        tokenTreeToken
                                                          macroPunctuationToken
                                                            ,
                                                        tokenTreeToken
                                                          macroLiteralToken
                                                            literalExpression
                                                              "test"
                                                      )
                                                ,
                                              matchArm
                                                pattern
                                                  patternNoTopAlt
                                                    patternWithoutRange
                                                      wildcardPattern
                                                        _
                                              =>
                                              expression
                                                macroInvocation
                                                  simplePath
                                                    simplePathSegment
                                                      identifier
                                                        unreachable
                                                  !
                                                  delimTokenTree
                                                    (
                                                    )
                                              ,
                                            }
                                    statement
                                      expressionStatement
                                        expressionWithBlock
                                          matchExpression
                                            match
                                            expression
                                              expression
                                                expression
                                                  pathExpression
                                                    pathInExpression
                                                      pathExprSegment
                                                        pathIdentSegment
                                                          identifier
                                                            field
                                                .
                                                pathExprSegment
                                                  pathIdentSegment
                                                    identifier
                                                      next
                                                (
                                                )
                                              .
                                              await
                                            {
                                            matchArms
                                              matchArm
                                                pattern
                                                  patternNoTopAlt
                                                    patternWithoutRange
                                                      identifierPattern
                                                        identifier
                                                          None
                                              =>
                                              matchArmExpression
                                                expressionWithBlock
                                                  blockExpression
                                                    {
                                                    }
                                              matchArm
                                                pattern
                                                  patternNoTopAlt
                                                    patternWithoutRange
                                                      wildcardPattern
                                                        _
                                              =>
                                              expression
                                                macroInvocation
                                                  simplePath
                                                    simplePathSegment
                                                      identifier
                                                        unreachable
                                                  !
                                                  delimTokenTree
                                                    (
                                                    )
                                              ,
                                            }
                                  }
                            matchArm
                              pattern
                                patternNoTopAlt
                                  patternWithoutRange
                                    wildcardPattern
                                      _
                            =>
                            expression
                              macroInvocation
                                simplePath
                                  simplePathSegment
                                    identifier
                                      unreachable
                                !
                                delimTokenTree
                                  (
                                  )
                            ,
                          }
                  statement
                    expressionStatement
                      expressionWithBlock
                        matchExpression
                          match
                          expression
                            expression
                              expression
                                expression
                                  pathExpression
                                    pathInExpression
                                      pathExprSegment
                                        pathIdentSegment
                                          identifier
                                            multipart
                                .
                                pathExprSegment
                                  pathIdentSegment
                                    identifier
                                      next
                                (
                                )
                              .
                              await
                            .
                            pathExprSegment
                              pathIdentSegment
                                identifier
                                  unwrap
                            (
                            )
                          {
                          matchArms
                            matchArm
                              pattern
                                patternNoTopAlt
                                  patternWithoutRange
                                    tupleStructPattern
                                      pathInExpression
                                        pathExprSegment
                                          pathIdentSegment
                                            identifier
                                              Ok
                                      (
                                      tupleStructItems
                                        pattern
                                          patternNoTopAlt
                                            patternWithoutRange
                                              identifierPattern
                                                mut
                                                identifier
                                                  field
                                      )
                            =>
                            matchArmExpression
                              expressionWithBlock
                                blockExpression
                                  {
                                  statements
                                    statement
                                      item
                                        macroItem
                                          macroInvocationSemi
                                            simplePath
                                              simplePathSegment
                                                identifier
                                                  assert_eq
                                            !
                                            (
                                            tokenTree
                                              tokenTreeToken
                                                macroIdentifierLikeToken
                                                  identifier
                                                    field
                                              tokenTreeToken
                                                macroPunctuationToken
                                                  .
                                              tokenTreeToken
                                                macroIdentifierLikeToken
                                                  identifier
                                                    content_type
                                            tokenTree
                                              delimTokenTree
                                                (
                                                )
                                            tokenTree
                                              tokenTreeToken
                                                macroPunctuationToken
                                                  .
                                              tokenTreeToken
                                                macroIdentifierLikeToken
                                                  identifier
                                                    unwrap
                                            tokenTree
                                              delimTokenTree
                                                (
                                                )
                                            tokenTree
                                              tokenTreeToken
                                                macroPunctuationToken
                                                  .
                                              tokenTreeToken
                                                macroIdentifierLikeToken
                                                  identifier
                                                    type_
                                            tokenTree
                                              delimTokenTree
                                                (
                                                )
                                            tokenTree
                                              tokenTreeToken
                                                macroPunctuationToken
                                                  ,
                                              tokenTreeToken
                                                macroIdentifierLikeToken
                                                  identifier
                                                    mime
                                              tokenTreeToken
                                                macroPunctuationToken
                                                  ::
                                              tokenTreeToken
                                                macroIdentifierLikeToken
                                                  identifier
                                                    TEXT
                                            )
                                            ;
                                    statement
                                      item
                                        macroItem
                                          macroInvocationSemi
                                            simplePath
                                              simplePathSegment
                                                identifier
                                                  assert_eq
                                            !
                                            (
                                            tokenTree
                                              tokenTreeToken
                                                macroIdentifierLikeToken
                                                  identifier
                                                    field
                                              tokenTreeToken
                                                macroPunctuationToken
                                                  .
                                              tokenTreeToken
                                                macroIdentifierLikeToken
                                                  identifier
                                                    content_type
                                            tokenTree
                                              delimTokenTree
                                                (
                                                )
                                            tokenTree
                                              tokenTreeToken
                                                macroPunctuationToken
                                                  .
                                              tokenTreeToken
                                                macroIdentifierLikeToken
                                                  identifier
                                                    unwrap
                                            tokenTree
                                              delimTokenTree
                                                (
                                                )
                                            tokenTree
                                              tokenTreeToken
                                                macroPunctuationToken
                                                  .
                                              tokenTreeToken
                                                macroIdentifierLikeToken
                                                  identifier
                                                    subtype
                                            tokenTree
                                              delimTokenTree
                                                (
                                                )
                                            tokenTree
                                              tokenTreeToken
                                                macroPunctuationToken
                                                  ,
                                              tokenTreeToken
                                                macroIdentifierLikeToken
                                                  identifier
                                                    mime
                                              tokenTreeToken
                                                macroPunctuationToken
                                                  ::
                                              tokenTreeToken
                                                macroIdentifierLikeToken
                                                  identifier
                                                    PLAIN
                                            )
                                            ;
                                    statement
                                      expressionStatement
                                        expressionWithBlock
                                          matchExpression
                                            match
                                            expression
                                              expression
                                                expression
                                                  pathExpression
                                                    pathInExpression
                                                      pathExprSegment
                                                        pathIdentSegment
                                                          identifier
                                                            field
                                                .
                                                pathExprSegment
                                                  pathIdentSegment
                                                    identifier
                                                      next
                                                (
                                                )
                                              .
                                              await
                                            {
                                            matchArms
                                              matchArm
                                                pattern
                                                  patternNoTopAlt
                                                    patternWithoutRange
                                                      tupleStructPattern
                                                        pathInExpression
                                                          pathExprSegment
                                                            pathIdentSegment
                                                              identifier
                                                                Some
                                                        (
                                                        tupleStructItems
                                                          pattern
                                                            patternNoTopAlt
                                                              patternWithoutRange
                                                                tupleStructPattern
                                                                  pathInExpression
                                                                    pathExprSegment
                                                                      pathIdentSegment
                                                                        identifier
                                                                          Ok
                                                                  (
                                                                  tupleStructItems
                                                                    pattern
                                                                      patternNoTopAlt
                                                                        patternWithoutRange
                                                                          identifierPattern
                                                                            identifier
                                                                              chunk
                                                                  )
                                                        )
                                              =>
                                              matchArmExpression
                                                expression
                                                  macroInvocation
                                                    simplePath
                                                      simplePathSegment
                                                        identifier
                                                          assert_eq
                                                    !
                                                    delimTokenTree
                                                      (
                                                      tokenTree
                                                        tokenTreeToken
                                                          macroIdentifierLikeToken
                                                            identifier
                                                              chunk
                                                        tokenTreeToken
                                                          macroPunctuationToken
                                                            ,
                                                        tokenTreeToken
                                                          macroLiteralToken
                                                            literalExpression
                                                              "data"
                                                      )
                                                ,
                                              matchArm
                                                pattern
                                                  patternNoTopAlt
                                                    patternWithoutRange
                                                      wildcardPattern
                                                        _
                                              =>
                                              expression
                                                macroInvocation
                                                  simplePath
                                                    simplePathSegment
                                                      identifier
                                                        unreachable
                                                  !
                                                  delimTokenTree
                                                    (
                                                    )
                                              ,
                                            }
                                    statement
                                      expressionStatement
                                        expressionWithBlock
                                          matchExpression
                                            match
                                            expression
                                              expression
                                                expression
                                                  pathExpression
                                                    pathInExpression
                                                      pathExprSegment
                                                        pathIdentSegment
                                                          identifier
                                                            field
                                                .
                                                pathExprSegment
                                                  pathIdentSegment
                                                    identifier
                                                      next
                                                (
                                                )
                                              .
                                              await
                                            {
                                            matchArms
                                              matchArm
                                                pattern
                                                  patternNoTopAlt
                                                    patternWithoutRange
                                                      identifierPattern
                                                        identifier
                                                          None
                                              =>
                                              matchArmExpression
                                                expressionWithBlock
                                                  blockExpression
                                                    {
                                                    }
                                              matchArm
                                                pattern
                                                  patternNoTopAlt
                                                    patternWithoutRange
                                                      wildcardPattern
                                                        _
                                              =>
                                              expression
                                                macroInvocation
                                                  simplePath
                                                    simplePathSegment
                                                      identifier
                                                        unreachable
                                                  !
                                                  delimTokenTree
                                                    (
                                                    )
                                              ,
                                            }
                                  }
                            matchArm
                              pattern
                                patternNoTopAlt
                                  patternWithoutRange
                                    wildcardPattern
                                      _
                            =>
                            expression
                              macroInvocation
                                simplePath
                                  simplePathSegment
                                    identifier
                                      unreachable
                                !
                                delimTokenTree
                                  (
                                  )
                            ,
                          }
                  statement
                    expressionStatement
                      expressionWithBlock
                        matchExpression
                          match
                          expression
                            expression
                              expression
                                pathExpression
                                  pathInExpression
                                    pathExprSegment
                                      pathIdentSegment
                                        identifier
                                          multipart
                              .
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    next
                              (
                              )
                            .
                            await
                          {
                          matchArms
                            matchArm
                              pattern
                                patternNoTopAlt
                                  patternWithoutRange
                                    identifierPattern
                                      identifier
                                        None
                            =>
                            matchArmExpression
                              expressionWithBlock
                                blockExpression
                                  {
                                  }
                            matchArm
                              pattern
                                patternNoTopAlt
                                  patternWithoutRange
                                    wildcardPattern
                                      _
                            =>
                            expression
                              macroInvocation
                                simplePath
                                  simplePathSegment
                                    identifier
                                      unreachable
                                !
                                delimTokenTree
                                  (
                                  )
                            ,
                          }
                }
        item
          visItem
            function_
              functionQualifiers
                async
              fn
              identifier
                get_whole_field
              (
              functionParameters
                functionParam
                  functionParamPattern
                    pattern
                      patternNoTopAlt
                        patternWithoutRange
                          identifierPattern
                            identifier
                              field
                    :
                    type_
                      typeNoBounds
                        referenceType
                          &
                          mut
                          typeNoBounds
                            traitObjectTypeOneBound
                              traitBound
                                typePath
                                  typePathSegment
                                    pathIdentSegment
                                      identifier
                                        Field
              )
              functionReturnType
                ->
                type_
                  typeNoBounds
                    traitObjectTypeOneBound
                      traitBound
                        typePath
                          typePathSegment
                            pathIdentSegment
                              identifier
                                BytesMut
              blockExpression
                {
                statements
                  statement
                    letStatement
                      let
                      patternNoTopAlt
                        patternWithoutRange
                          identifierPattern
                            mut
                            identifier
                              b
                      =
                      expression
                        expression
                          pathExpression
                            pathInExpression
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    BytesMut
                              ::
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    new
                        (
                        )
                      ;
                  statement
                    expressionStatement
                      expressionWithBlock
                        loopExpression
                          infiniteLoopExpression
                            loop
                            blockExpression
                              {
                              statements
                                statement
                                  expressionStatement
                                    expressionWithBlock
                                      matchExpression
                                        match
                                        expression
                                          expression
                                            expression
                                              pathExpression
                                                pathInExpression
                                                  pathExprSegment
                                                    pathIdentSegment
                                                      identifier
                                                        field
                                            .
                                            pathExprSegment
                                              pathIdentSegment
                                                identifier
                                                  next
                                            (
                                            )
                                          .
                                          await
                                        {
                                        matchArms
                                          matchArm
                                            pattern
                                              patternNoTopAlt
                                                patternWithoutRange
                                                  tupleStructPattern
                                                    pathInExpression
                                                      pathExprSegment
                                                        pathIdentSegment
                                                          identifier
                                                            Some
                                                    (
                                                    tupleStructItems
                                                      pattern
                                                        patternNoTopAlt
                                                          patternWithoutRange
                                                            tupleStructPattern
                                                              pathInExpression
                                                                pathExprSegment
                                                                  pathIdentSegment
                                                                    identifier
                                                                      Ok
                                                              (
                                                              tupleStructItems
                                                                pattern
                                                                  patternNoTopAlt
                                                                    patternWithoutRange
                                                                      identifierPattern
                                                                        identifier
                                                                          chunk
                                                              )
                                                    )
                                          =>
                                          matchArmExpression
                                            expression
                                              expression
                                                pathExpression
                                                  pathInExpression
                                                    pathExprSegment
                                                      pathIdentSegment
                                                        identifier
                                                          b
                                              .
                                              pathExprSegment
                                                pathIdentSegment
                                                  identifier
                                                    extend_from_slice
                                              (
                                              callParams
                                                expression
                                                  &
                                                  expression
                                                    pathExpression
                                                      pathInExpression
                                                        pathExprSegment
                                                          pathIdentSegment
                                                            identifier
                                                              chunk
                                              )
                                            ,
                                          matchArm
                                            pattern
                                              patternNoTopAlt
                                                patternWithoutRange
                                                  identifierPattern
                                                    identifier
                                                      None
                                          =>
                                          matchArmExpression
                                            expression
                                              return
                                              expression
                                                pathExpression
                                                  pathInExpression
                                                    pathExprSegment
                                                      pathIdentSegment
                                                        identifier
                                                          b
                                            ,
                                          matchArm
                                            pattern
                                              patternNoTopAlt
                                                patternWithoutRange
                                                  wildcardPattern
                                                    _
                                          =>
                                          expression
                                            macroInvocation
                                              simplePath
                                                simplePathSegment
                                                  identifier
                                                    unreachable
                                              !
                                              delimTokenTree
                                                (
                                                )
                                          ,
                                        }
                              }
                }
        item
          outerAttribute
            #
            [
            attr
              simplePath
                simplePathSegment
                  identifier
                    actix_rt
                ::
                simplePathSegment
                  identifier
                    test
            ]
          visItem
            function_
              functionQualifiers
                async
              fn
              identifier
                test_stream
              (
              )
              blockExpression
                {
                statements
                  statement
                    letStatement
                      let
                      patternNoTopAlt
                        patternWithoutRange
                          tuplePattern
                            (
                            tuplePatternItems
                              pattern
                                patternNoTopAlt
                                  patternWithoutRange
                                    identifierPattern
                                      identifier
                                        bytes
                              ,
                              pattern
                                patternNoTopAlt
                                  patternWithoutRange
                                    identifierPattern
                                      identifier
                                        headers
                            )
                      =
                      expression
                        expression
                          pathExpression
                            pathInExpression
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    create_double_request_with_header
                        (
                        )
                      ;
                  statement
                    letStatement
                      let
                      patternNoTopAlt
                        patternWithoutRange
                          identifierPattern
                            identifier
                              payload
                      =
                      expression
                        expression
                          expression
                            expression
                              pathExpression
                                pathInExpression
                                  pathExprSegment
                                    pathIdentSegment
                                      identifier
                                        stream
                                  ::
                                  pathExprSegment
                                    pathIdentSegment
                                      identifier
                                        iter
                            (
                            callParams
                              expression
                                pathExpression
                                  pathInExpression
                                    pathExprSegment
                                      pathIdentSegment
                                        identifier
                                          bytes
                            )
                          .
                          pathExprSegment
                            pathIdentSegment
                              identifier
                                map
                          (
                          callParams
                            expression
                              closureExpression
                                |
                                closureParameters
                                  closureParam
                                    pattern
                                      patternNoTopAlt
                                        patternWithoutRange
                                          identifierPattern
                                            identifier
                                              byte
                                |
                                expression
                                  expression
                                    pathExpression
                                      pathInExpression
                                        pathExprSegment
                                          pathIdentSegment
                                            identifier
                                              Ok
                                  (
                                  callParams
                                    expression
                                      expression
                                        pathExpression
                                          pathInExpression
                                            pathExprSegment
                                              pathIdentSegment
                                                identifier
                                                  Bytes
                                            ::
                                            pathExprSegment
                                              pathIdentSegment
                                                identifier
                                                  copy_from_slice
                                      (
                                      callParams
                                        expression
                                          &
                                          expression
                                            [
                                            arrayElements
                                              expression
                                                pathExpression
                                                  pathInExpression
                                                    pathExprSegment
                                                      pathIdentSegment
                                                        identifier
                                                          byte
                                            ]
                                      )
                                  )
                          )
                        .
                        pathExprSegment
                          pathIdentSegment
                            identifier
                              interleave_pending
                        (
                        )
                      ;
                  statement
                    letStatement
                      let
                      patternNoTopAlt
                        patternWithoutRange
                          identifierPattern
                            mut
                            identifier
                              multipart
                      =
                      expression
                        expression
                          pathExpression
                            pathInExpression
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    Multipart
                              ::
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    new
                        (
                        callParams
                          expression
                            &
                            expression
                              pathExpression
                                pathInExpression
                                  pathExprSegment
                                    pathIdentSegment
                                      identifier
                                        headers
                          ,
                          expression
                            pathExpression
                              pathInExpression
                                pathExprSegment
                                  pathIdentSegment
                                    identifier
                                      payload
                        )
                      ;
                  statement
                    expressionStatement
                      expressionWithBlock
                        matchExpression
                          match
                          expression
                            expression
                              expression
                                expression
                                  pathExpression
                                    pathInExpression
                                      pathExprSegment
                                        pathIdentSegment
                                          identifier
                                            multipart
                                .
                                pathExprSegment
                                  pathIdentSegment
                                    identifier
                                      next
                                (
                                )
                              .
                              await
                            .
                            pathExprSegment
                              pathIdentSegment
                                identifier
                                  unwrap
                            (
                            )
                          {
                          matchArms
                            matchArm
                              pattern
                                patternNoTopAlt
                                  patternWithoutRange
                                    tupleStructPattern
                                      pathInExpression
                                        pathExprSegment
                                          pathIdentSegment
                                            identifier
                                              Ok
                                      (
                                      tupleStructItems
                                        pattern
                                          patternNoTopAlt
                                            patternWithoutRange
                                              identifierPattern
                                                mut
                                                identifier
                                                  field
                                      )
                            =>
                            matchArmExpression
                              expressionWithBlock
                                blockExpression
                                  {
                                  statements
                                    statement
                                      letStatement
                                        let
                                        patternNoTopAlt
                                          patternWithoutRange
                                            identifierPattern
                                              identifier
                                                cd
                                        =
                                        expression
                                          expression
                                            expression
                                              pathExpression
                                                pathInExpression
                                                  pathExprSegment
                                                    pathIdentSegment
                                                      identifier
                                                        field
                                            .
                                            pathExprSegment
                                              pathIdentSegment
                                                identifier
                                                  content_disposition
                                            (
                                            )
                                          .
                                          pathExprSegment
                                            pathIdentSegment
                                              identifier
                                                unwrap
                                          (
                                          )
                                        ;
                                    statement
                                      item
                                        macroItem
                                          macroInvocationSemi
                                            simplePath
                                              simplePathSegment
                                                identifier
                                                  assert_eq
                                            !
                                            (
                                            tokenTree
                                              tokenTreeToken
                                                macroIdentifierLikeToken
                                                  identifier
                                                    cd
                                              tokenTreeToken
                                                macroPunctuationToken
                                                  .
                                              tokenTreeToken
                                                macroIdentifierLikeToken
                                                  identifier
                                                    disposition
                                              tokenTreeToken
                                                macroPunctuationToken
                                                  ,
                                              tokenTreeToken
                                                macroIdentifierLikeToken
                                                  identifier
                                                    DispositionType
                                              tokenTreeToken
                                                macroPunctuationToken
                                                  ::
                                              tokenTreeToken
                                                macroIdentifierLikeToken
                                                  identifier
                                                    FormData
                                            )
                                            ;
                                    statement
                                      item
                                        macroItem
                                          macroInvocationSemi
                                            simplePath
                                              simplePathSegment
                                                identifier
                                                  assert_eq
                                            !
                                            (
                                            tokenTree
                                              tokenTreeToken
                                                macroIdentifierLikeToken
                                                  identifier
                                                    cd
                                              tokenTreeToken
                                                macroPunctuationToken
                                                  .
                                              tokenTreeToken
                                                macroIdentifierLikeToken
                                                  identifier
                                                    parameters
                                            tokenTree
                                              delimTokenTree
                                                [
                                                tokenTree
                                                  tokenTreeToken
                                                    macroLiteralToken
                                                      literalExpression
                                                        0
                                                ]
                                            tokenTree
                                              tokenTreeToken
                                                macroPunctuationToken
                                                  ,
                                              tokenTreeToken
                                                macroIdentifierLikeToken
                                                  identifier
                                                    DispositionParam
                                              tokenTreeToken
                                                macroPunctuationToken
                                                  ::
                                              tokenTreeToken
                                                macroIdentifierLikeToken
                                                  identifier
                                                    Name
                                            tokenTree
                                              delimTokenTree
                                                (
                                                tokenTree
                                                  tokenTreeToken
                                                    macroLiteralToken
                                                      literalExpression
                                                        "file"
                                                  tokenTreeToken
                                                    macroPunctuationToken
                                                      .
                                                  tokenTreeToken
                                                    macroIdentifierLikeToken
                                                      identifier
                                                        into
                                                tokenTree
                                                  delimTokenTree
                                                    (
                                                    )
                                                )
                                            )
                                            ;
                                    statement
                                      item
                                        macroItem
                                          macroInvocationSemi
                                            simplePath
                                              simplePathSegment
                                                identifier
                                                  assert_eq
                                            !
                                            (
                                            tokenTree
                                              tokenTreeToken
                                                macroIdentifierLikeToken
                                                  identifier
                                                    field
                                              tokenTreeToken
                                                macroPunctuationToken
                                                  .
                                              tokenTreeToken
                                                macroIdentifierLikeToken
                                                  identifier
                                                    content_type
                                            tokenTree
                                              delimTokenTree
                                                (
                                                )
                                            tokenTree
                                              tokenTreeToken
                                                macroPunctuationToken
                                                  .
                                              tokenTreeToken
                                                macroIdentifierLikeToken
                                                  identifier
                                                    unwrap
                                            tokenTree
                                              delimTokenTree
                                                (
                                                )
                                            tokenTree
                                              tokenTreeToken
                                                macroPunctuationToken
                                                  .
                                              tokenTreeToken
                                                macroIdentifierLikeToken
                                                  identifier
                                                    type_
                                            tokenTree
                                              delimTokenTree
                                                (
                                                )
                                            tokenTree
                                              tokenTreeToken
                                                macroPunctuationToken
                                                  ,
                                              tokenTreeToken
                                                macroIdentifierLikeToken
                                                  identifier
                                                    mime
                                              tokenTreeToken
                                                macroPunctuationToken
                                                  ::
                                              tokenTreeToken
                                                macroIdentifierLikeToken
                                                  identifier
                                                    TEXT
                                            )
                                            ;
                                    statement
                                      item
                                        macroItem
                                          macroInvocationSemi
                                            simplePath
                                              simplePathSegment
                                                identifier
                                                  assert_eq
                                            !
                                            (
                                            tokenTree
                                              tokenTreeToken
                                                macroIdentifierLikeToken
                                                  identifier
                                                    field
                                              tokenTreeToken
                                                macroPunctuationToken
                                                  .
                                              tokenTreeToken
                                                macroIdentifierLikeToken
                                                  identifier
                                                    content_type
                                            tokenTree
                                              delimTokenTree
                                                (
                                                )
                                            tokenTree
                                              tokenTreeToken
                                                macroPunctuationToken
                                                  .
                                              tokenTreeToken
                                                macroIdentifierLikeToken
                                                  identifier
                                                    unwrap
                                            tokenTree
                                              delimTokenTree
                                                (
                                                )
                                            tokenTree
                                              tokenTreeToken
                                                macroPunctuationToken
                                                  .
                                              tokenTreeToken
                                                macroIdentifierLikeToken
                                                  identifier
                                                    subtype
                                            tokenTree
                                              delimTokenTree
                                                (
                                                )
                                            tokenTree
                                              tokenTreeToken
                                                macroPunctuationToken
                                                  ,
                                              tokenTreeToken
                                                macroIdentifierLikeToken
                                                  identifier
                                                    mime
                                              tokenTreeToken
                                                macroPunctuationToken
                                                  ::
                                              tokenTreeToken
                                                macroIdentifierLikeToken
                                                  identifier
                                                    PLAIN
                                            )
                                            ;
                                    statement
                                      item
                                        macroItem
                                          macroInvocationSemi
                                            simplePath
                                              simplePathSegment
                                                identifier
                                                  assert_eq
                                            !
                                            (
                                            tokenTree
                                              tokenTreeToken
                                                macroIdentifierLikeToken
                                                  identifier
                                                    get_whole_field
                                            tokenTree
                                              delimTokenTree
                                                (
                                                tokenTree
                                                  tokenTreeToken
                                                    macroPunctuationToken
                                                      &
                                                  tokenTreeToken
                                                    macroIdentifierLikeToken
                                                      keyword
                                                        mut
                                                  tokenTreeToken
                                                    macroIdentifierLikeToken
                                                      identifier
                                                        field
                                                )
                                            tokenTree
                                              tokenTreeToken
                                                macroPunctuationToken
                                                  .
                                              tokenTreeToken
                                                macroIdentifierLikeToken
                                                  keyword
                                                    await
                                              tokenTreeToken
                                                macroPunctuationToken
                                                  ,
                                              tokenTreeToken
                                                macroLiteralToken
                                                  literalExpression
                                                    "test"
                                            )
                                            ;
                                  }
                            matchArm
                              pattern
                                patternNoTopAlt
                                  patternWithoutRange
                                    wildcardPattern
                                      _
                            =>
                            expression
                              macroInvocation
                                simplePath
                                  simplePathSegment
                                    identifier
                                      unreachable
                                !
                                delimTokenTree
                                  (
                                  )
                            ,
                          }
                  statement
                    expressionStatement
                      expressionWithBlock
                        matchExpression
                          match
                          expression
                            expression
                              expression
                                pathExpression
                                  pathInExpression
                                    pathExprSegment
                                      pathIdentSegment
                                        identifier
                                          multipart
                              .
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    next
                              (
                              )
                            .
                            await
                          {
                          matchArms
                            matchArm
                              pattern
                                patternNoTopAlt
                                  patternWithoutRange
                                    tupleStructPattern
                                      pathInExpression
                                        pathExprSegment
                                          pathIdentSegment
                                            identifier
                                              Some
                                      (
                                      tupleStructItems
                                        pattern
                                          patternNoTopAlt
                                            patternWithoutRange
                                              tupleStructPattern
                                                pathInExpression
                                                  pathExprSegment
                                                    pathIdentSegment
                                                      identifier
                                                        Ok
                                                (
                                                tupleStructItems
                                                  pattern
                                                    patternNoTopAlt
                                                      patternWithoutRange
                                                        identifierPattern
                                                          mut
                                                          identifier
                                                            field
                                                )
                                      )
                            =>
                            matchArmExpression
                              expressionWithBlock
                                blockExpression
                                  {
                                  statements
                                    statement
                                      item
                                        macroItem
                                          macroInvocationSemi
                                            simplePath
                                              simplePathSegment
                                                identifier
                                                  assert_eq
                                            !
                                            (
                                            tokenTree
                                              tokenTreeToken
                                                macroIdentifierLikeToken
                                                  identifier
                                                    field
                                              tokenTreeToken
                                                macroPunctuationToken
                                                  .
                                              tokenTreeToken
                                                macroIdentifierLikeToken
                                                  identifier
                                                    content_type
                                            tokenTree
                                              delimTokenTree
                                                (
                                                )
                                            tokenTree
                                              tokenTreeToken
                                                macroPunctuationToken
                                                  .
                                              tokenTreeToken
                                                macroIdentifierLikeToken
                                                  identifier
                                                    unwrap
                                            tokenTree
                                              delimTokenTree
                                                (
                                                )
                                            tokenTree
                                              tokenTreeToken
                                                macroPunctuationToken
                                                  .
                                              tokenTreeToken
                                                macroIdentifierLikeToken
                                                  identifier
                                                    type_
                                            tokenTree
                                              delimTokenTree
                                                (
                                                )
                                            tokenTree
                                              tokenTreeToken
                                                macroPunctuationToken
                                                  ,
                                              tokenTreeToken
                                                macroIdentifierLikeToken
                                                  identifier
                                                    mime
                                              tokenTreeToken
                                                macroPunctuationToken
                                                  ::
                                              tokenTreeToken
                                                macroIdentifierLikeToken
                                                  identifier
                                                    TEXT
                                            )
                                            ;
                                    statement
                                      item
                                        macroItem
                                          macroInvocationSemi
                                            simplePath
                                              simplePathSegment
                                                identifier
                                                  assert_eq
                                            !
                                            (
                                            tokenTree
                                              tokenTreeToken
                                                macroIdentifierLikeToken
                                                  identifier
                                                    field
                                              tokenTreeToken
                                                macroPunctuationToken
                                                  .
                                              tokenTreeToken
                                                macroIdentifierLikeToken
                                                  identifier
                                                    content_type
                                            tokenTree
                                              delimTokenTree
                                                (
                                                )
                                            tokenTree
                                              tokenTreeToken
                                                macroPunctuationToken
                                                  .
                                              tokenTreeToken
                                                macroIdentifierLikeToken
                                                  identifier
                                                    unwrap
                                            tokenTree
                                              delimTokenTree
                                                (
                                                )
                                            tokenTree
                                              tokenTreeToken
                                                macroPunctuationToken
                                                  .
                                              tokenTreeToken
                                                macroIdentifierLikeToken
                                                  identifier
                                                    subtype
                                            tokenTree
                                              delimTokenTree
                                                (
                                                )
                                            tokenTree
                                              tokenTreeToken
                                                macroPunctuationToken
                                                  ,
                                              tokenTreeToken
                                                macroIdentifierLikeToken
                                                  identifier
                                                    mime
                                              tokenTreeToken
                                                macroPunctuationToken
                                                  ::
                                              tokenTreeToken
                                                macroIdentifierLikeToken
                                                  identifier
                                                    PLAIN
                                            )
                                            ;
                                    statement
                                      item
                                        macroItem
                                          macroInvocationSemi
                                            simplePath
                                              simplePathSegment
                                                identifier
                                                  assert_eq
                                            !
                                            (
                                            tokenTree
                                              tokenTreeToken
                                                macroIdentifierLikeToken
                                                  identifier
                                                    get_whole_field
                                            tokenTree
                                              delimTokenTree
                                                (
                                                tokenTree
                                                  tokenTreeToken
                                                    macroPunctuationToken
                                                      &
                                                  tokenTreeToken
                                                    macroIdentifierLikeToken
                                                      keyword
                                                        mut
                                                  tokenTreeToken
                                                    macroIdentifierLikeToken
                                                      identifier
                                                        field
                                                )
                                            tokenTree
                                              tokenTreeToken
                                                macroPunctuationToken
                                                  .
                                              tokenTreeToken
                                                macroIdentifierLikeToken
                                                  keyword
                                                    await
                                              tokenTreeToken
                                                macroPunctuationToken
                                                  ,
                                              tokenTreeToken
                                                macroLiteralToken
                                                  literalExpression
                                                    "data"
                                            )
                                            ;
                                  }
                            matchArm
                              pattern
                                patternNoTopAlt
                                  patternWithoutRange
                                    wildcardPattern
                                      _
                            =>
                            expression
                              macroInvocation
                                simplePath
                                  simplePathSegment
                                    identifier
                                      unreachable
                                !
                                delimTokenTree
                                  (
                                  )
                            ,
                          }
                  statement
                    expressionStatement
                      expressionWithBlock
                        matchExpression
                          match
                          expression
                            expression
                              expression
                                pathExpression
                                  pathInExpression
                                    pathExprSegment
                                      pathIdentSegment
                                        identifier
                                          multipart
                              .
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    next
                              (
                              )
                            .
                            await
                          {
                          matchArms
                            matchArm
                              pattern
                                patternNoTopAlt
                                  patternWithoutRange
                                    identifierPattern
                                      identifier
                                        None
                            =>
                            matchArmExpression
                              expressionWithBlock
                                blockExpression
                                  {
                                  }
                            matchArm
                              pattern
                                patternNoTopAlt
                                  patternWithoutRange
                                    wildcardPattern
                                      _
                            =>
                            expression
                              macroInvocation
                                simplePath
                                  simplePathSegment
                                    identifier
                                      unreachable
                                !
                                delimTokenTree
                                  (
                                  )
                            ,
                          }
                }
        item
          outerAttribute
            #
            [
            attr
              simplePath
                simplePathSegment
                  identifier
                    actix_rt
                ::
                simplePathSegment
                  identifier
                    test
            ]
          visItem
            function_
              functionQualifiers
                async
              fn
              identifier
                test_multipart_from_error
              (
              )
              blockExpression
                {
                statements
                  statement
                    letStatement
                      let
                      patternNoTopAlt
                        patternWithoutRange
                          identifierPattern
                            identifier
                              err
                      =
                      expression
                        pathExpression
                          pathInExpression
                            pathExprSegment
                              pathIdentSegment
                                identifier
                                  Error
                            ::
                            pathExprSegment
                              pathIdentSegment
                                identifier
                                  ContentTypeMissing
                      ;
                  statement
                    letStatement
                      let
                      patternNoTopAlt
                        patternWithoutRange
                          identifierPattern
                            mut
                            identifier
                              multipart
                      =
                      expression
                        expression
                          pathExpression
                            pathInExpression
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    Multipart
                              ::
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    from_error
                        (
                        callParams
                          expression
                            pathExpression
                              pathInExpression
                                pathExprSegment
                                  pathIdentSegment
                                    identifier
                                      err
                        )
                      ;
                  expression
                    macroInvocation
                      simplePath
                        simplePathSegment
                          identifier
                            assert
                      !
                      delimTokenTree
                        (
                        tokenTree
                          tokenTreeToken
                            macroIdentifierLikeToken
                              identifier
                                multipart
                          tokenTreeToken
                            macroPunctuationToken
                              .
                          tokenTreeToken
                            macroIdentifierLikeToken
                              identifier
                                next
                        tokenTree
                          delimTokenTree
                            (
                            )
                        tokenTree
                          tokenTreeToken
                            macroPunctuationToken
                              .
                          tokenTreeToken
                            macroIdentifierLikeToken
                              keyword
                                await
                          tokenTreeToken
                            macroPunctuationToken
                              .
                          tokenTreeToken
                            macroIdentifierLikeToken
                              identifier
                                unwrap
                        tokenTree
                          delimTokenTree
                            (
                            )
                        tokenTree
                          tokenTreeToken
                            macroPunctuationToken
                              .
                          tokenTreeToken
                            macroIdentifierLikeToken
                              identifier
                                is_err
                        tokenTree
                          delimTokenTree
                            (
                            )
                        )
                }
        item
          outerAttribute
            #
            [
            attr
              simplePath
                simplePathSegment
                  identifier
                    actix_rt
                ::
                simplePathSegment
                  identifier
                    test
            ]
          visItem
            function_
              functionQualifiers
                async
              fn
              identifier
                test_multipart_from_boundary
              (
              )
              blockExpression
                {
                statements
                  statement
                    letStatement
                      let
                      patternNoTopAlt
                        patternWithoutRange
                          tuplePattern
                            (
                            tuplePatternItems
                              pattern
                                patternNoTopAlt
                                  patternWithoutRange
                                    wildcardPattern
                                      _
                              ,
                              pattern
                                patternNoTopAlt
                                  patternWithoutRange
                                    identifierPattern
                                      identifier
                                        payload
                            )
                      =
                      expression
                        expression
                          pathExpression
                            pathInExpression
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    create_stream
                        (
                        )
                      ;
                  statement
                    letStatement
                      let
                      patternNoTopAlt
                        patternWithoutRange
                          tuplePattern
                            (
                            tuplePatternItems
                              pattern
                                patternNoTopAlt
                                  patternWithoutRange
                                    wildcardPattern
                                      _
                              ,
                              pattern
                                patternNoTopAlt
                                  patternWithoutRange
                                    identifierPattern
                                      identifier
                                        headers
                            )
                      =
                      expression
                        expression
                          pathExpression
                            pathInExpression
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    create_simple_request_with_header
                        (
                        )
                      ;
                  statement
                    letStatement
                      let
                      patternNoTopAlt
                        patternWithoutRange
                          tuplePattern
                            (
                            tuplePatternItems
                              pattern
                                patternNoTopAlt
                                  patternWithoutRange
                                    identifierPattern
                                      identifier
                                        ct
                              ,
                              pattern
                                patternNoTopAlt
                                  patternWithoutRange
                                    identifierPattern
                                      identifier
                                        boundary
                            )
                      =
                      expression
                        expression
                          expression
                            pathExpression
                              pathInExpression
                                pathExprSegment
                                  pathIdentSegment
                                    identifier
                                      Multipart
                                ::
                                pathExprSegment
                                  pathIdentSegment
                                    identifier
                                      find_ct_and_boundary
                          (
                          callParams
                            expression
                              &
                              expression
                                pathExpression
                                  pathInExpression
                                    pathExprSegment
                                      pathIdentSegment
                                        identifier
                                          headers
                          )
                        .
                        pathExprSegment
                          pathIdentSegment
                            identifier
                              unwrap
                        (
                        )
                      ;
                  statement
                    letStatement
                      let
                      patternNoTopAlt
                        patternWithoutRange
                          wildcardPattern
                            _
                      =
                      expression
                        expression
                          pathExpression
                            pathInExpression
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    Multipart
                              ::
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    from_ct_and_boundary
                        (
                        callParams
                          expression
                            pathExpression
                              pathInExpression
                                pathExprSegment
                                  pathIdentSegment
                                    identifier
                                      ct
                          ,
                          expression
                            pathExpression
                              pathInExpression
                                pathExprSegment
                                  pathIdentSegment
                                    identifier
                                      boundary
                          ,
                          expression
                            pathExpression
                              pathInExpression
                                pathExprSegment
                                  pathIdentSegment
                                    identifier
                                      payload
                        )
                      ;
                }
        item
          outerAttribute
            #
            [
            attr
              simplePath
                simplePathSegment
                  identifier
                    actix_rt
                ::
                simplePathSegment
                  identifier
                    test
            ]
          visItem
            function_
              functionQualifiers
                async
              fn
              identifier
                test_multipart_payload_consumption
              (
              )
              blockExpression
                {
                statements
                  statement
                    letStatement
                      let
                      patternNoTopAlt
                        patternWithoutRange
                          tuplePattern
                            (
                            tuplePatternItems
                              pattern
                                patternNoTopAlt
                                  patternWithoutRange
                                    wildcardPattern
                                      _
                              ,
                              pattern
                                patternNoTopAlt
                                  patternWithoutRange
                                    identifierPattern
                                      identifier
                                        inner_payload
                            )
                      =
                      expression
                        expression
                          pathExpression
                            pathInExpression
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    h1
                              ::
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    Payload
                              ::
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    create
                        (
                        callParams
                          expression
                            literalExpression
                              false
                        )
                      ;
                  statement
                    letStatement
                      let
                      patternNoTopAlt
                        patternWithoutRange
                          identifierPattern
                            mut
                            identifier
                              payload
                      =
                      expression
                        expression
                          pathExpression
                            pathInExpression
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    actix_web
                              ::
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    dev
                              ::
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    Payload
                              ::
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    from
                        (
                        callParams
                          expression
                            pathExpression
                              pathInExpression
                                pathExprSegment
                                  pathIdentSegment
                                    identifier
                                      inner_payload
                        )
                      ;
                  statement
                    letStatement
                      let
                      patternNoTopAlt
                        patternWithoutRange
                          identifierPattern
                            identifier
                              req
                      =
                      expression
                        expression
                          expression
                            pathExpression
                              pathInExpression
                                pathExprSegment
                                  pathIdentSegment
                                    identifier
                                      TestRequest
                                ::
                                pathExprSegment
                                  pathIdentSegment
                                    identifier
                                      default
                          (
                          )
                        .
                        pathExprSegment
                          pathIdentSegment
                            identifier
                              to_http_request
                        (
                        )
                      ;
                  statement
                    letStatement
                      let
                      patternNoTopAlt
                        patternWithoutRange
                          identifierPattern
                            mut
                            identifier
                              mp
                      =
                      expression
                        expression
                          expression
                            expression
                              pathExpression
                                pathInExpression
                                  pathExprSegment
                                    pathIdentSegment
                                      identifier
                                        Multipart
                                  ::
                                  pathExprSegment
                                    pathIdentSegment
                                      identifier
                                        from_request
                            (
                            callParams
                              expression
                                &
                                expression
                                  pathExpression
                                    pathInExpression
                                      pathExprSegment
                                        pathIdentSegment
                                          identifier
                                            req
                              ,
                              expression
                                &
                                mut
                                expression
                                  pathExpression
                                    pathInExpression
                                      pathExprSegment
                                        pathIdentSegment
                                          identifier
                                            payload
                            )
                          .
                          await
                        .
                        pathExprSegment
                          pathIdentSegment
                            identifier
                              unwrap
                        (
                        )
                      ;
                  statement
                    item
                      macroItem
                        macroInvocationSemi
                          simplePath
                            simplePathSegment
                              identifier
                                assert
                          !
                          (
                          tokenTree
                            tokenTreeToken
                              macroIdentifierLikeToken
                                identifier
                                  mp
                            tokenTreeToken
                              macroPunctuationToken
                                .
                            tokenTreeToken
                              macroIdentifierLikeToken
                                identifier
                                  next
                          tokenTree
                            delimTokenTree
                              (
                              )
                          tokenTree
                            tokenTreeToken
                              macroPunctuationToken
                                .
                            tokenTreeToken
                              macroIdentifierLikeToken
                                keyword
                                  await
                            tokenTreeToken
                              macroPunctuationToken
                                .
                            tokenTreeToken
                              macroIdentifierLikeToken
                                identifier
                                  unwrap
                          tokenTree
                            delimTokenTree
                              (
                              )
                          tokenTree
                            tokenTreeToken
                              macroPunctuationToken
                                .
                            tokenTreeToken
                              macroIdentifierLikeToken
                                identifier
                                  is_err
                          tokenTree
                            delimTokenTree
                              (
                              )
                          )
                          ;
                  statement
                    expressionStatement
                      expressionWithBlock
                        matchExpression
                          match
                          expression
                            pathExpression
                              pathInExpression
                                pathExprSegment
                                  pathIdentSegment
                                    identifier
                                      payload
                          {
                          matchArms
                            matchArm
                              pattern
                                patternNoTopAlt
                                  patternWithoutRange
                                    structPattern
                                      pathInExpression
                                        pathExprSegment
                                          pathIdentSegment
                                            identifier
                                              actix_web
                                        ::
                                        pathExprSegment
                                          pathIdentSegment
                                            identifier
                                              dev
                                        ::
                                        pathExprSegment
                                          pathIdentSegment
                                            identifier
                                              Payload
                                        ::
                                        pathExprSegment
                                          pathIdentSegment
                                            identifier
                                              H1
                                      {
                                      structPatternElements
                                        structPatternEtCetera
                                          ..
                                      }
                            =>
                            matchArmExpression
                              expressionWithBlock
                                blockExpression
                                  {
                                  }
                            matchArm
                              pattern
                                patternNoTopAlt
                                  patternWithoutRange
                                    wildcardPattern
                                      _
                            =>
                            expression
                              macroInvocation
                                simplePath
                                  simplePathSegment
                                    identifier
                                      unreachable
                                !
                                delimTokenTree
                                  (
                                  )
                            ,
                          }
                }
        item
          outerAttribute
            #
            [
            attr
              simplePath
                simplePathSegment
                  identifier
                    actix_rt
                ::
                simplePathSegment
                  identifier
                    test
            ]
          visItem
            function_
              functionQualifiers
                async
              fn
              identifier
                no_content_disposition_form_data
              (
              )
              blockExpression
                {
                statements
                  statement
                    letStatement
                      let
                      patternNoTopAlt
                        patternWithoutRange
                          identifierPattern
                            identifier
                              bytes
                      =
                      expression
                        expression
                          pathExpression
                            pathInExpression
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    Bytes
                              ::
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    from
                        (
                        callParams
                          expression
                            literalExpression
                              "testasdadsad\r\n\
             --abbc761f78ff4d7cb7573b5a23f96ef0\r\n\
             Content-Type: text/plain; charset=utf-8\r\n\
             Content-Length: 4\r\n\
             \r\n\
             test\r\n\
             --abbc761f78ff4d7cb7573b5a23f96ef0\r\n"
                          ,
                        )
                      ;
                  statement
                    letStatement
                      let
                      patternNoTopAlt
                        patternWithoutRange
                          identifierPattern
                            mut
                            identifier
                              headers
                      =
                      expression
                        expression
                          pathExpression
                            pathInExpression
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    HeaderMap
                              ::
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    new
                        (
                        )
                      ;
                  statement
                    expressionStatement
                      expression
                        expression
                          pathExpression
                            pathInExpression
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    headers
                        .
                        pathExprSegment
                          pathIdentSegment
                            identifier
                              insert
                        (
                        callParams
                          expression
                            pathExpression
                              pathInExpression
                                pathExprSegment
                                  pathIdentSegment
                                    identifier
                                      header
                                ::
                                pathExprSegment
                                  pathIdentSegment
                                    identifier
                                      CONTENT_TYPE
                          ,
                          expression
                            expression
                              pathExpression
                                pathInExpression
                                  pathExprSegment
                                    pathIdentSegment
                                      identifier
                                        header
                                  ::
                                  pathExprSegment
                                    pathIdentSegment
                                      identifier
                                        HeaderValue
                                  ::
                                  pathExprSegment
                                    pathIdentSegment
                                      identifier
                                        from_static
                            (
                            callParams
                              expression
                                literalExpression
                                  "multipart/form-data; boundary=\"abbc761f78ff4d7cb7573b5a23f96ef0\""
                              ,
                            )
                          ,
                        )
                      ;
                  statement
                    letStatement
                      let
                      patternNoTopAlt
                        patternWithoutRange
                          identifierPattern
                            identifier
                              payload
                      =
                      expression
                        expression
                          expression
                            expression
                              pathExpression
                                pathInExpression
                                  pathExprSegment
                                    pathIdentSegment
                                      identifier
                                        stream
                                  ::
                                  pathExprSegment
                                    pathIdentSegment
                                      identifier
                                        iter
                            (
                            callParams
                              expression
                                pathExpression
                                  pathInExpression
                                    pathExprSegment
                                      pathIdentSegment
                                        identifier
                                          bytes
                            )
                          .
                          pathExprSegment
                            pathIdentSegment
                              identifier
                                map
                          (
                          callParams
                            expression
                              closureExpression
                                |
                                closureParameters
                                  closureParam
                                    pattern
                                      patternNoTopAlt
                                        patternWithoutRange
                                          identifierPattern
                                            identifier
                                              byte
                                |
                                expression
                                  expression
                                    pathExpression
                                      pathInExpression
                                        pathExprSegment
                                          pathIdentSegment
                                            identifier
                                              Ok
                                  (
                                  callParams
                                    expression
                                      expression
                                        pathExpression
                                          pathInExpression
                                            pathExprSegment
                                              pathIdentSegment
                                                identifier
                                                  Bytes
                                            ::
                                            pathExprSegment
                                              pathIdentSegment
                                                identifier
                                                  copy_from_slice
                                      (
                                      callParams
                                        expression
                                          &
                                          expression
                                            [
                                            arrayElements
                                              expression
                                                pathExpression
                                                  pathInExpression
                                                    pathExprSegment
                                                      pathIdentSegment
                                                        identifier
                                                          byte
                                            ]
                                      )
                                  )
                          )
                        .
                        pathExprSegment
                          pathIdentSegment
                            identifier
                              interleave_pending
                        (
                        )
                      ;
                  statement
                    letStatement
                      let
                      patternNoTopAlt
                        patternWithoutRange
                          identifierPattern
                            mut
                            identifier
                              multipart
                      =
                      expression
                        expression
                          pathExpression
                            pathInExpression
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    Multipart
                              ::
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    new
                        (
                        callParams
                          expression
                            &
                            expression
                              pathExpression
                                pathInExpression
                                  pathExprSegment
                                    pathIdentSegment
                                      identifier
                                        headers
                          ,
                          expression
                            pathExpression
                              pathInExpression
                                pathExprSegment
                                  pathIdentSegment
                                    identifier
                                      payload
                        )
                      ;
                  statement
                    letStatement
                      let
                      patternNoTopAlt
                        patternWithoutRange
                          identifierPattern
                            identifier
                              res
                      =
                      expression
                        expression
                          expression
                            expression
                              pathExpression
                                pathInExpression
                                  pathExprSegment
                                    pathIdentSegment
                                      identifier
                                        multipart
                            .
                            pathExprSegment
                              pathIdentSegment
                                identifier
                                  next
                            (
                            )
                          .
                          await
                        .
                        pathExprSegment
                          pathIdentSegment
                            identifier
                              unwrap
                        (
                        )
                      ;
                  statement
                    item
                      macroItem
                        macroInvocationSemi
                          simplePath
                            simplePathSegment
                              identifier
                                assert_matches
                          !
                          (
                          tokenTree
                            tokenTreeToken
                              macroIdentifierLikeToken
                                identifier
                                  res
                            tokenTreeToken
                              macroPunctuationToken
                                .
                            tokenTreeToken
                              macroIdentifierLikeToken
                                identifier
                                  expect_err
                          tokenTree
                            delimTokenTree
                              (
                              tokenTree
                                tokenTreeToken
                                  macroLiteralToken
                                    literalExpression
                                      "according to RFC 7578, form-data fields require a content-disposition header"
                              )
                          tokenTree
                            tokenTreeToken
                              macroPunctuationToken
                                ,
                            tokenTreeToken
                              macroIdentifierLikeToken
                                identifier
                                  Error
                            tokenTreeToken
                              macroPunctuationToken
                                ::
                            tokenTreeToken
                              macroIdentifierLikeToken
                                identifier
                                  ContentDispositionMissing
                          )
                          ;
                }
        item
          outerAttribute
            #
            [
            attr
              simplePath
                simplePathSegment
                  identifier
                    actix_rt
                ::
                simplePathSegment
                  identifier
                    test
            ]
          visItem
            function_
              functionQualifiers
                async
              fn
              identifier
                no_content_disposition_non_form_data
              (
              )
              blockExpression
                {
                statements
                  statement
                    letStatement
                      let
                      patternNoTopAlt
                        patternWithoutRange
                          identifierPattern
                            identifier
                              bytes
                      =
                      expression
                        expression
                          pathExpression
                            pathInExpression
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    Bytes
                              ::
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    from
                        (
                        callParams
                          expression
                            literalExpression
                              "testasdadsad\r\n\
             --abbc761f78ff4d7cb7573b5a23f96ef0\r\n\
             Content-Type: text/plain; charset=utf-8\r\n\
             Content-Length: 4\r\n\
             \r\n\
             test\r\n\
             --abbc761f78ff4d7cb7573b5a23f96ef0\r\n"
                          ,
                        )
                      ;
                  statement
                    letStatement
                      let
                      patternNoTopAlt
                        patternWithoutRange
                          identifierPattern
                            mut
                            identifier
                              headers
                      =
                      expression
                        expression
                          pathExpression
                            pathInExpression
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    HeaderMap
                              ::
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    new
                        (
                        )
                      ;
                  statement
                    expressionStatement
                      expression
                        expression
                          pathExpression
                            pathInExpression
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    headers
                        .
                        pathExprSegment
                          pathIdentSegment
                            identifier
                              insert
                        (
                        callParams
                          expression
                            pathExpression
                              pathInExpression
                                pathExprSegment
                                  pathIdentSegment
                                    identifier
                                      header
                                ::
                                pathExprSegment
                                  pathIdentSegment
                                    identifier
                                      CONTENT_TYPE
                          ,
                          expression
                            expression
                              pathExpression
                                pathInExpression
                                  pathExprSegment
                                    pathIdentSegment
                                      identifier
                                        header
                                  ::
                                  pathExprSegment
                                    pathIdentSegment
                                      identifier
                                        HeaderValue
                                  ::
                                  pathExprSegment
                                    pathIdentSegment
                                      identifier
                                        from_static
                            (
                            callParams
                              expression
                                literalExpression
                                  "multipart/mixed; boundary=\"abbc761f78ff4d7cb7573b5a23f96ef0\""
                              ,
                            )
                          ,
                        )
                      ;
                  statement
                    letStatement
                      let
                      patternNoTopAlt
                        patternWithoutRange
                          identifierPattern
                            identifier
                              payload
                      =
                      expression
                        expression
                          expression
                            expression
                              pathExpression
                                pathInExpression
                                  pathExprSegment
                                    pathIdentSegment
                                      identifier
                                        stream
                                  ::
                                  pathExprSegment
                                    pathIdentSegment
                                      identifier
                                        iter
                            (
                            callParams
                              expression
                                pathExpression
                                  pathInExpression
                                    pathExprSegment
                                      pathIdentSegment
                                        identifier
                                          bytes
                            )
                          .
                          pathExprSegment
                            pathIdentSegment
                              identifier
                                map
                          (
                          callParams
                            expression
                              closureExpression
                                |
                                closureParameters
                                  closureParam
                                    pattern
                                      patternNoTopAlt
                                        patternWithoutRange
                                          identifierPattern
                                            identifier
                                              byte
                                |
                                expression
                                  expression
                                    pathExpression
                                      pathInExpression
                                        pathExprSegment
                                          pathIdentSegment
                                            identifier
                                              Ok
                                  (
                                  callParams
                                    expression
                                      expression
                                        pathExpression
                                          pathInExpression
                                            pathExprSegment
                                              pathIdentSegment
                                                identifier
                                                  Bytes
                                            ::
                                            pathExprSegment
                                              pathIdentSegment
                                                identifier
                                                  copy_from_slice
                                      (
                                      callParams
                                        expression
                                          &
                                          expression
                                            [
                                            arrayElements
                                              expression
                                                pathExpression
                                                  pathInExpression
                                                    pathExprSegment
                                                      pathIdentSegment
                                                        identifier
                                                          byte
                                            ]
                                      )
                                  )
                          )
                        .
                        pathExprSegment
                          pathIdentSegment
                            identifier
                              interleave_pending
                        (
                        )
                      ;
                  statement
                    letStatement
                      let
                      patternNoTopAlt
                        patternWithoutRange
                          identifierPattern
                            mut
                            identifier
                              multipart
                      =
                      expression
                        expression
                          pathExpression
                            pathInExpression
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    Multipart
                              ::
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    new
                        (
                        callParams
                          expression
                            &
                            expression
                              pathExpression
                                pathInExpression
                                  pathExprSegment
                                    pathIdentSegment
                                      identifier
                                        headers
                          ,
                          expression
                            pathExpression
                              pathInExpression
                                pathExprSegment
                                  pathIdentSegment
                                    identifier
                                      payload
                        )
                      ;
                  statement
                    letStatement
                      let
                      patternNoTopAlt
                        patternWithoutRange
                          identifierPattern
                            identifier
                              res
                      =
                      expression
                        expression
                          expression
                            expression
                              pathExpression
                                pathInExpression
                                  pathExprSegment
                                    pathIdentSegment
                                      identifier
                                        multipart
                            .
                            pathExprSegment
                              pathIdentSegment
                                identifier
                                  next
                            (
                            )
                          .
                          await
                        .
                        pathExprSegment
                          pathIdentSegment
                            identifier
                              unwrap
                        (
                        )
                      ;
                  statement
                    expressionStatement
                      expression
                        expression
                          pathExpression
                            pathInExpression
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    res
                        .
                        pathExprSegment
                          pathIdentSegment
                            identifier
                              unwrap
                        (
                        )
                      ;
                }
        item
          outerAttribute
            #
            [
            attr
              simplePath
                simplePathSegment
                  identifier
                    actix_rt
                ::
                simplePathSegment
                  identifier
                    test
            ]
          visItem
            function_
              functionQualifiers
                async
              fn
              identifier
                no_name_in_form_data_content_disposition
              (
              )
              blockExpression
                {
                statements
                  statement
                    letStatement
                      let
                      patternNoTopAlt
                        patternWithoutRange
                          identifierPattern
                            identifier
                              bytes
                      =
                      expression
                        expression
                          pathExpression
                            pathInExpression
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    Bytes
                              ::
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    from
                        (
                        callParams
                          expression
                            literalExpression
                              "testasdadsad\r\n\
             --abbc761f78ff4d7cb7573b5a23f96ef0\r\n\
             Content-Disposition: form-data; filename=\"fn.txt\"\r\n\
             Content-Type: text/plain; charset=utf-8\r\n\
             Content-Length: 4\r\n\
             \r\n\
             test\r\n\
             --abbc761f78ff4d7cb7573b5a23f96ef0\r\n"
                          ,
                        )
                      ;
                  statement
                    letStatement
                      let
                      patternNoTopAlt
                        patternWithoutRange
                          identifierPattern
                            mut
                            identifier
                              headers
                      =
                      expression
                        expression
                          pathExpression
                            pathInExpression
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    HeaderMap
                              ::
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    new
                        (
                        )
                      ;
                  statement
                    expressionStatement
                      expression
                        expression
                          pathExpression
                            pathInExpression
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    headers
                        .
                        pathExprSegment
                          pathIdentSegment
                            identifier
                              insert
                        (
                        callParams
                          expression
                            pathExpression
                              pathInExpression
                                pathExprSegment
                                  pathIdentSegment
                                    identifier
                                      header
                                ::
                                pathExprSegment
                                  pathIdentSegment
                                    identifier
                                      CONTENT_TYPE
                          ,
                          expression
                            expression
                              pathExpression
                                pathInExpression
                                  pathExprSegment
                                    pathIdentSegment
                                      identifier
                                        header
                                  ::
                                  pathExprSegment
                                    pathIdentSegment
                                      identifier
                                        HeaderValue
                                  ::
                                  pathExprSegment
                                    pathIdentSegment
                                      identifier
                                        from_static
                            (
                            callParams
                              expression
                                literalExpression
                                  "multipart/form-data; boundary=\"abbc761f78ff4d7cb7573b5a23f96ef0\""
                              ,
                            )
                          ,
                        )
                      ;
                  statement
                    letStatement
                      let
                      patternNoTopAlt
                        patternWithoutRange
                          identifierPattern
                            identifier
                              payload
                      =
                      expression
                        expression
                          expression
                            expression
                              pathExpression
                                pathInExpression
                                  pathExprSegment
                                    pathIdentSegment
                                      identifier
                                        stream
                                  ::
                                  pathExprSegment
                                    pathIdentSegment
                                      identifier
                                        iter
                            (
                            callParams
                              expression
                                pathExpression
                                  pathInExpression
                                    pathExprSegment
                                      pathIdentSegment
                                        identifier
                                          bytes
                            )
                          .
                          pathExprSegment
                            pathIdentSegment
                              identifier
                                map
                          (
                          callParams
                            expression
                              closureExpression
                                |
                                closureParameters
                                  closureParam
                                    pattern
                                      patternNoTopAlt
                                        patternWithoutRange
                                          identifierPattern
                                            identifier
                                              byte
                                |
                                expression
                                  expression
                                    pathExpression
                                      pathInExpression
                                        pathExprSegment
                                          pathIdentSegment
                                            identifier
                                              Ok
                                  (
                                  callParams
                                    expression
                                      expression
                                        pathExpression
                                          pathInExpression
                                            pathExprSegment
                                              pathIdentSegment
                                                identifier
                                                  Bytes
                                            ::
                                            pathExprSegment
                                              pathIdentSegment
                                                identifier
                                                  copy_from_slice
                                      (
                                      callParams
                                        expression
                                          &
                                          expression
                                            [
                                            arrayElements
                                              expression
                                                pathExpression
                                                  pathInExpression
                                                    pathExprSegment
                                                      pathIdentSegment
                                                        identifier
                                                          byte
                                            ]
                                      )
                                  )
                          )
                        .
                        pathExprSegment
                          pathIdentSegment
                            identifier
                              interleave_pending
                        (
                        )
                      ;
                  statement
                    letStatement
                      let
                      patternNoTopAlt
                        patternWithoutRange
                          identifierPattern
                            mut
                            identifier
                              multipart
                      =
                      expression
                        expression
                          pathExpression
                            pathInExpression
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    Multipart
                              ::
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    new
                        (
                        callParams
                          expression
                            &
                            expression
                              pathExpression
                                pathInExpression
                                  pathExprSegment
                                    pathIdentSegment
                                      identifier
                                        headers
                          ,
                          expression
                            pathExpression
                              pathInExpression
                                pathExprSegment
                                  pathIdentSegment
                                    identifier
                                      payload
                        )
                      ;
                  statement
                    letStatement
                      let
                      patternNoTopAlt
                        patternWithoutRange
                          identifierPattern
                            identifier
                              res
                      =
                      expression
                        expression
                          expression
                            expression
                              pathExpression
                                pathInExpression
                                  pathExprSegment
                                    pathIdentSegment
                                      identifier
                                        multipart
                            .
                            pathExprSegment
                              pathIdentSegment
                                identifier
                                  next
                            (
                            )
                          .
                          await
                        .
                        pathExprSegment
                          pathIdentSegment
                            identifier
                              unwrap
                        (
                        )
                      ;
                  statement
                    item
                      macroItem
                        macroInvocationSemi
                          simplePath
                            simplePathSegment
                              identifier
                                assert_matches
                          !
                          (
                          tokenTree
                            tokenTreeToken
                              macroIdentifierLikeToken
                                identifier
                                  res
                            tokenTreeToken
                              macroPunctuationToken
                                .
                            tokenTreeToken
                              macroIdentifierLikeToken
                                identifier
                                  expect_err
                          tokenTree
                            delimTokenTree
                              (
                              tokenTree
                                tokenTreeToken
                                  macroLiteralToken
                                    literalExpression
                                      "according to RFC 7578, form-data fields require a name attribute"
                              )
                          tokenTree
                            tokenTreeToken
                              macroPunctuationToken
                                ,
                            tokenTreeToken
                              macroIdentifierLikeToken
                                identifier
                                  Error
                            tokenTreeToken
                              macroPunctuationToken
                                ::
                            tokenTreeToken
                              macroIdentifierLikeToken
                                identifier
                                  ContentDispositionNameMissing
                          )
                          ;
                }
        item
          outerAttribute
            #
            [
            attr
              simplePath
                simplePathSegment
                  identifier
                    actix_rt
                ::
                simplePathSegment
                  identifier
                    test
            ]
          visItem
            function_
              functionQualifiers
                async
              fn
              identifier
                test_drop_multipart_dont_hang
              (
              )
              blockExpression
                {
                statements
                  statement
                    letStatement
                      let
                      patternNoTopAlt
                        patternWithoutRange
                          tuplePattern
                            (
                            tuplePatternItems
                              pattern
                                patternNoTopAlt
                                  patternWithoutRange
                                    identifierPattern
                                      identifier
                                        sender
                              ,
                              pattern
                                patternNoTopAlt
                                  patternWithoutRange
                                    identifierPattern
                                      identifier
                                        payload
                            )
                      =
                      expression
                        expression
                          pathExpression
                            pathInExpression
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    create_stream
                        (
                        )
                      ;
                  statement
                    letStatement
                      let
                      patternNoTopAlt
                        patternWithoutRange
                          tuplePattern
                            (
                            tuplePatternItems
                              pattern
                                patternNoTopAlt
                                  patternWithoutRange
                                    identifierPattern
                                      identifier
                                        bytes
                              ,
                              pattern
                                patternNoTopAlt
                                  patternWithoutRange
                                    identifierPattern
                                      identifier
                                        headers
                            )
                      =
                      expression
                        expression
                          pathExpression
                            pathInExpression
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    create_simple_request_with_header
                        (
                        )
                      ;
                  statement
                    expressionStatement
                      expression
                        expression
                          expression
                            pathExpression
                              pathInExpression
                                pathExprSegment
                                  pathIdentSegment
                                    identifier
                                      sender
                          .
                          pathExprSegment
                            pathIdentSegment
                              identifier
                                send
                          (
                          callParams
                            expression
                              expression
                                pathExpression
                                  pathInExpression
                                    pathExprSegment
                                      pathIdentSegment
                                        identifier
                                          Ok
                              (
                              callParams
                                expression
                                  pathExpression
                                    pathInExpression
                                      pathExprSegment
                                        pathIdentSegment
                                          identifier
                                            bytes
                              )
                          )
                        .
                        pathExprSegment
                          pathIdentSegment
                            identifier
                              unwrap
                        (
                        )
                      ;
                  statement
                    expressionStatement
                      expression
                        expression
                          pathExpression
                            pathInExpression
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    drop
                        (
                        callParams
                          expression
                            pathExpression
                              pathInExpression
                                pathExprSegment
                                  pathIdentSegment
                                    identifier
                                      sender
                        )
                      ;
                  statement
                    letStatement
                      let
                      patternNoTopAlt
                        patternWithoutRange
                          identifierPattern
                            mut
                            identifier
                              multipart
                      =
                      expression
                        expression
                          pathExpression
                            pathInExpression
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    Multipart
                              ::
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    new
                        (
                        callParams
                          expression
                            &
                            expression
                              pathExpression
                                pathInExpression
                                  pathExprSegment
                                    pathIdentSegment
                                      identifier
                                        headers
                          ,
                          expression
                            pathExpression
                              pathInExpression
                                pathExprSegment
                                  pathIdentSegment
                                    identifier
                                      payload
                        )
                      ;
                  statement
                    letStatement
                      let
                      patternNoTopAlt
                        patternWithoutRange
                          identifierPattern
                            mut
                            identifier
                              field
                      =
                      expression
                        expression
                          expression
                            expression
                              expression
                                pathExpression
                                  pathInExpression
                                    pathExprSegment
                                      pathIdentSegment
                                        identifier
                                          multipart
                              .
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    next
                              (
                              )
                            .
                            await
                          .
                          pathExprSegment
                            pathIdentSegment
                              identifier
                                unwrap
                          (
                          )
                        .
                        pathExprSegment
                          pathIdentSegment
                            identifier
                              unwrap
                        (
                        )
                      ;
                  statement
                    expressionStatement
                      expression
                        expression
                          pathExpression
                            pathInExpression
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    drop
                        (
                        callParams
                          expression
                            pathExpression
                              pathInExpression
                                pathExprSegment
                                  pathIdentSegment
                                    identifier
                                      multipart
                        )
                      ;
                  statement
                    expressionStatement
                      expression
                        expressionWithBlock
                          matchExpression
                            match
                            expression
                              expression
                                expression
                                  pathExpression
                                    pathInExpression
                                      pathExprSegment
                                        pathIdentSegment
                                          identifier
                                            field
                                .
                                pathExprSegment
                                  pathIdentSegment
                                    identifier
                                      next
                                (
                                )
                              .
                              await
                            {
                            matchArms
                              matchArm
                                pattern
                                  patternNoTopAlt
                                    patternWithoutRange
                                      tupleStructPattern
                                        pathInExpression
                                          pathExprSegment
                                            pathIdentSegment
                                              identifier
                                                Some
                                        (
                                        tupleStructItems
                                          pattern
                                            patternNoTopAlt
                                              patternWithoutRange
                                                tupleStructPattern
                                                  pathInExpression
                                                    pathExprSegment
                                                      pathIdentSegment
                                                        identifier
                                                          Err
                                                  (
                                                  tupleStructItems
                                                    pattern
                                                      patternNoTopAlt
                                                        patternWithoutRange
                                                          pathPattern
                                                            pathInExpression
                                                              pathExprSegment
                                                                pathIdentSegment
                                                                  identifier
                                                                    Error
                                                              ::
                                                              pathExprSegment
                                                                pathIdentSegment
                                                                  identifier
                                                                    NotConsumed
                                                  )
                                        )
                              =>
                              matchArmExpression
                                expressionWithBlock
                                  blockExpression
                                    {
                                    }
                              matchArm
                                pattern
                                  patternNoTopAlt
                                    patternWithoutRange
                                      wildcardPattern
                                        _
                              =>
                              expression
                                macroInvocation
                                  simplePath
                                    simplePathSegment
                                      identifier
                                        panic
                                  !
                                  delimTokenTree
                                    (
                                    )
                              ,
                            }
                      ;
                }
        item
          outerAttribute
            #
            [
            attr
              simplePath
                simplePathSegment
                  identifier
                    actix_rt
                ::
                simplePathSegment
                  identifier
                    test
            ]
          visItem
            function_
              functionQualifiers
                async
              fn
              identifier
                test_drop_field_awaken_multipart
              (
              )
              blockExpression
                {
                statements
                  statement
                    letStatement
                      let
                      patternNoTopAlt
                        patternWithoutRange
                          tuplePattern
                            (
                            tuplePatternItems
                              pattern
                                patternNoTopAlt
                                  patternWithoutRange
                                    identifierPattern
                                      identifier
                                        sender
                              ,
                              pattern
                                patternNoTopAlt
                                  patternWithoutRange
                                    identifierPattern
                                      identifier
                                        payload
                            )
                      =
                      expression
                        expression
                          pathExpression
                            pathInExpression
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    create_stream
                        (
                        )
                      ;
                  statement
                    letStatement
                      let
                      patternNoTopAlt
                        patternWithoutRange
                          tuplePattern
                            (
                            tuplePatternItems
                              pattern
                                patternNoTopAlt
                                  patternWithoutRange
                                    identifierPattern
                                      identifier
                                        bytes
                              ,
                              pattern
                                patternNoTopAlt
                                  patternWithoutRange
                                    identifierPattern
                                      identifier
                                        headers
                            )
                      =
                      expression
                        expression
                          pathExpression
                            pathInExpression
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    create_double_request_with_header
                        (
                        )
                      ;
                  statement
                    expressionStatement
                      expression
                        expression
                          expression
                            pathExpression
                              pathInExpression
                                pathExprSegment
                                  pathIdentSegment
                                    identifier
                                      sender
                          .
                          pathExprSegment
                            pathIdentSegment
                              identifier
                                send
                          (
                          callParams
                            expression
                              expression
                                pathExpression
                                  pathInExpression
                                    pathExprSegment
                                      pathIdentSegment
                                        identifier
                                          Ok
                              (
                              callParams
                                expression
                                  pathExpression
                                    pathInExpression
                                      pathExprSegment
                                        pathIdentSegment
                                          identifier
                                            bytes
                              )
                          )
                        .
                        pathExprSegment
                          pathIdentSegment
                            identifier
                              unwrap
                        (
                        )
                      ;
                  statement
                    expressionStatement
                      expression
                        expression
                          pathExpression
                            pathInExpression
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    drop
                        (
                        callParams
                          expression
                            pathExpression
                              pathInExpression
                                pathExprSegment
                                  pathIdentSegment
                                    identifier
                                      sender
                        )
                      ;
                  statement
                    letStatement
                      let
                      patternNoTopAlt
                        patternWithoutRange
                          identifierPattern
                            mut
                            identifier
                              multipart
                      =
                      expression
                        expression
                          pathExpression
                            pathInExpression
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    Multipart
                              ::
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    new
                        (
                        callParams
                          expression
                            &
                            expression
                              pathExpression
                                pathInExpression
                                  pathExprSegment
                                    pathIdentSegment
                                      identifier
                                        headers
                          ,
                          expression
                            pathExpression
                              pathInExpression
                                pathExprSegment
                                  pathIdentSegment
                                    identifier
                                      payload
                        )
                      ;
                  statement
                    letStatement
                      let
                      patternNoTopAlt
                        patternWithoutRange
                          identifierPattern
                            mut
                            identifier
                              field
                      =
                      expression
                        expression
                          expression
                            expression
                              expression
                                pathExpression
                                  pathInExpression
                                    pathExprSegment
                                      pathIdentSegment
                                        identifier
                                          multipart
                              .
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    next
                              (
                              )
                            .
                            await
                          .
                          pathExprSegment
                            pathIdentSegment
                              identifier
                                unwrap
                          (
                          )
                        .
                        pathExprSegment
                          pathIdentSegment
                            identifier
                              unwrap
                        (
                        )
                      ;
                  statement
                    letStatement
                      let
                      patternNoTopAlt
                        patternWithoutRange
                          identifierPattern
                            identifier
                              task
                      =
                      expression
                        expression
                          pathExpression
                            pathInExpression
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    rt
                              ::
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    spawn
                        (
                        callParams
                          expression
                            expressionWithBlock
                              asyncBlockExpression
                                async
                                move
                                blockExpression
                                  {
                                  statements
                                    statement
                                      expressionStatement
                                        expression
                                          expression
                                            expression
                                              pathExpression
                                                pathInExpression
                                                  pathExprSegment
                                                    pathIdentSegment
                                                      identifier
                                                        rt
                                                  ::
                                                  pathExprSegment
                                                    pathIdentSegment
                                                      identifier
                                                        time
                                                  ::
                                                  pathExprSegment
                                                    pathIdentSegment
                                                      identifier
                                                        sleep
                                            (
                                            callParams
                                              expression
                                                expression
                                                  pathExpression
                                                    pathInExpression
                                                      pathExprSegment
                                                        pathIdentSegment
                                                          identifier
                                                            Duration
                                                      ::
                                                      pathExprSegment
                                                        pathIdentSegment
                                                          identifier
                                                            from_millis
                                                (
                                                callParams
                                                  expression
                                                    literalExpression
                                                      500
                                                )
                                            )
                                          .
                                          await
                                        ;
                                    statement
                                      item
                                        macroItem
                                          macroInvocationSemi
                                            simplePath
                                              simplePathSegment
                                                identifier
                                                  assert_eq
                                            !
                                            (
                                            tokenTree
                                              tokenTreeToken
                                                macroIdentifierLikeToken
                                                  identifier
                                                    field
                                              tokenTreeToken
                                                macroPunctuationToken
                                                  .
                                              tokenTreeToken
                                                macroIdentifierLikeToken
                                                  identifier
                                                    next
                                            tokenTree
                                              delimTokenTree
                                                (
                                                )
                                            tokenTree
                                              tokenTreeToken
                                                macroPunctuationToken
                                                  .
                                              tokenTreeToken
                                                macroIdentifierLikeToken
                                                  keyword
                                                    await
                                              tokenTreeToken
                                                macroPunctuationToken
                                                  .
                                              tokenTreeToken
                                                macroIdentifierLikeToken
                                                  identifier
                                                    unwrap
                                            tokenTree
                                              delimTokenTree
                                                (
                                                )
                                            tokenTree
                                              tokenTreeToken
                                                macroPunctuationToken
                                                  .
                                              tokenTreeToken
                                                macroIdentifierLikeToken
                                                  identifier
                                                    unwrap
                                            tokenTree
                                              delimTokenTree
                                                (
                                                )
                                            tokenTree
                                              tokenTreeToken
                                                macroPunctuationToken
                                                  ,
                                              tokenTreeToken
                                                macroLiteralToken
                                                  literalExpression
                                                    "test"
                                            )
                                            ;
                                    statement
                                      expressionStatement
                                        expression
                                          expression
                                            pathExpression
                                              pathInExpression
                                                pathExprSegment
                                                  pathIdentSegment
                                                    identifier
                                                      drop
                                          (
                                          callParams
                                            expression
                                              pathExpression
                                                pathInExpression
                                                  pathExprSegment
                                                    pathIdentSegment
                                                      identifier
                                                        field
                                          )
                                        ;
                                  }
                        )
                      ;
                  statement
                    letStatement
                      let
                      patternNoTopAlt
                        patternWithoutRange
                          wildcardPattern
                            _
                      =
                      expression
                        expression
                          expression
                            expression
                              expression
                                pathExpression
                                  pathInExpression
                                    pathExprSegment
                                      pathIdentSegment
                                        identifier
                                          multipart
                              .
                              pathExprSegment
                                pathIdentSegment
                                  identifier
                                    next
                              (
                              )
                            .
                            await
                          .
                          pathExprSegment
                            pathIdentSegment
                              identifier
                                unwrap
                          (
                          )
                        .
                        pathExprSegment
                          pathIdentSegment
                            identifier
                              unwrap
                        (
                        )
                      ;
                  statement
                    expressionStatement
                      expression
                        expression
                          expression
                            pathExpression
                              pathInExpression
                                pathExprSegment
                                  pathIdentSegment
                                    identifier
                                      task
                          .
                          await
                        .
                        pathExprSegment
                          pathIdentSegment
                            identifier
                              unwrap
                        (
                        )
                      ;
                }
        }
  <EOF>
